{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _reactNativeFlashMessage = require(\"react-native-flash-message\");\n\nvar _common = require(\"../utils/common\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\src\\\\screens\\\\Login.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar EyeSlashImg = '../../assets/images/Eye-slashmini.png';\n\nvar styles = _reactNative.StyleSheet.create({\n  fornaxBox: {\n    flex: 1,\n    justifyContent: 'center',\n    alignSelf: 'center',\n    flexDirection: 'column',\n    maxWidth: 360\n  },\n  createAccText: {\n    fontSize: 22,\n    fontFamily: 'Quicksand-Medium',\n    textAlign: 'center',\n    color: '#ffffff',\n    lineHeight: 35\n  },\n  inputBox: {\n    flexDirection: 'row',\n    marginVertical: 13,\n    alignContent: 'center',\n    alignItems: 'center'\n  },\n  inputLabel: {\n    fontSize: 16,\n    color: '#b27f29',\n    marginTop: 8,\n    width: 80,\n    fontFamily: 'Quicksand-Medium'\n  },\n  input: {\n    height: 40,\n    borderBottomWidth: 2,\n    borderBottomColor: '#ffffff',\n    fontFamily: 'Quicksand-Medium',\n    color: '#ffffff',\n    paddingHorizontal: 10,\n    fontSize: 16,\n    width: 200,\n    marginLeft: 30\n  },\n  loginTextbox: {\n    fontSize: 14,\n    color: '#bdbdbd',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium',\n    flexDirection: 'row',\n    alignSelf: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n    marginTop: 10\n  },\n  loginText: {\n    fontSize: 14,\n    color: '#81c2ff',\n    fontFamily: 'Quicksand-Medium',\n    paddingTop: 6\n  },\n  buttonClose: {\n    backgroundColor: '#b27f29',\n    width: 240,\n    alignSelf: 'center',\n    marginTop: 50,\n    marginBottom: 10\n  },\n  button: {\n    borderRadius: 20,\n    paddingVertical: 20\n  },\n  textStyle: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center'\n  },\n  verifyModalBox: {\n    alignContent: 'center',\n    alignSelf: 'center',\n    textAlign: 'center'\n  },\n  topImg: {\n    height: 42,\n    width: 52,\n    alignSelf: 'center',\n    marginTop: 30\n  },\n  verifyText: {\n    fontSize: 16,\n    fontFamily: 'Quicksand-Medium',\n    textAlign: 'center',\n    color: '#000000',\n    lineHeight: 25,\n    marginVertical: 30\n  },\n  buttonCode: {\n    backgroundColor: '#363853',\n    width: 170,\n    alignSelf: 'center',\n    marginTop: 50,\n    marginBottom: 10,\n    borderRadius: 20,\n    paddingVertical: 20\n  },\n  codeText: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center'\n  }\n});\n\nvar Login = function Login(props) {\n  var navigate = props.navigation.navigate;\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      showPass = _useState2[0],\n      setShowPass = _useState2[1];\n\n  var _useState3 = (0, _react.useState)({\n    email: '',\n    password: ''\n  }),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var handleLogin = function _callee() {\n    var registerUser, registerData, value;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(user.email && user.password)) {\n              _context.next = 25;\n              break;\n            }\n\n            if ((0, _common.validateEmail)(user.email)) {\n              _context.next = 5;\n              break;\n            }\n\n            (0, _reactNativeFlashMessage.showMessage)({\n              message: \"Email Validation Failed!!!\",\n              description: \"Please enter valid Email Address\",\n              type: \"warning\"\n            });\n            return _context.abrupt(\"return\");\n\n          case 5:\n            _context.next = 7;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('registerUser'));\n\n          case 7:\n            registerUser = _context.sent;\n            registerData = registerUser && JSON.parse(registerUser);\n\n            if (!(registerData.password === user.password)) {\n              _context.next = 22;\n              break;\n            }\n\n            (0, _reactNativeFlashMessage.hideMessage)();\n            _context.next = 13;\n            return _regenerator.default.awrap(_asyncStorage.default.setItem('loginUser', JSON.stringify(user)));\n\n          case 13:\n            _context.next = 15;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('accountList'));\n\n          case 15:\n            value = _context.sent;\n\n            if (!value) {\n              _context.next = 19;\n              break;\n            }\n\n            navigate('Dashboard');\n            return _context.abrupt(\"return\");\n\n          case 19:\n            navigate('WalletSetup');\n            _context.next = 23;\n            break;\n\n          case 22:\n            (0, _reactNativeFlashMessage.showMessage)({\n              message: \"Login Failed!!!\",\n              description: \"Please enter valid Email Address and Password\",\n              type: \"danger\"\n            });\n\n          case 23:\n            _context.next = 26;\n            break;\n\n          case 25:\n            (0, _reactNativeFlashMessage.showMessage)({\n              message: \"Login Failed!!!\",\n              description: \"Please enter Email Address and Password\",\n              type: \"danger\"\n            });\n\n          case 26:\n            _context.next = 31;\n            break;\n\n          case 28:\n            _context.prev = 28;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('Login Error', _context.t0);\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 28]], Promise);\n  };\n\n  var onBlurEmail = function onBlurEmail() {\n    if (!(0, _common.validateEmail)(user.email)) {\n      (0, _reactNativeFlashMessage.showMessage)({\n        message: \"Email Validation Failed!!!\",\n        description: \"Please enter valid Email Address\",\n        type: \"warning\"\n      });\n    }\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      marginBottom: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.createAccText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"Login to your Account\")), _react.default.createElement(_reactNative.View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.inputLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Email\"), _react.default.createElement(_reactNative.TextInput, {\n    style: styles.input,\n    placeholder: \"example@mail.com\",\n    placeholderTextColor: \"#bdbdbd\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    onBlur: onBlurEmail,\n    onChangeText: function onChangeText(e) {\n      return setUser((0, _extends2.default)({}, user, {\n        email: e\n      }));\n    },\n    value: user.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.inputLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, \"Password\"), _react.default.createElement(_reactNative.TextInput, {\n    style: styles.input,\n    placeholder: \"xxxxxxxx\",\n    secureTextEntry: showPass,\n    placeholderTextColor: \"#bdbdbd\",\n    onChangeText: function onChangeText(e) {\n      return setUser((0, _extends2.default)({}, user, {\n        password: e\n      }));\n    },\n    value: user.password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return setShowPass(!showPass);\n    },\n    style: {\n      marginBottom: 20,\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    source: require(EyeSlashImg),\n    style: {\n      width: 20,\n      position: 'absolute',\n      right: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }))), _react.default.createElement(_reactNative.Pressable, {\n    onPress: handleLogin,\n    style: [styles.button, styles.buttonClose],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, \"Login\")), _react.default.createElement(_reactNative.Text, {\n    style: styles.loginTextbox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, \"You don't have account?\", _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('Signup');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [styles.loginText, {\n      marginLeft: 3\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, \"SignUp\")))));\n};\n\nvar _default = Login;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/screens/Login.tsx"],"names":["EyeSlashImg","styles","StyleSheet","create","fornaxBox","flex","justifyContent","alignSelf","flexDirection","maxWidth","createAccText","fontSize","fontFamily","textAlign","color","lineHeight","inputBox","marginVertical","alignContent","alignItems","inputLabel","marginTop","width","input","height","borderBottomWidth","borderBottomColor","paddingHorizontal","marginLeft","loginTextbox","loginText","paddingTop","buttonClose","backgroundColor","marginBottom","button","borderRadius","paddingVertical","textStyle","verifyModalBox","topImg","verifyText","buttonCode","codeText","Login","props","navigate","navigation","showPass","setShowPass","email","password","user","setUser","handleLogin","message","description","type","AsyncStorage","getItem","registerUser","registerData","JSON","parse","setItem","stringify","value","console","log","onBlurEmail","e","marginRight","require","position","right"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Image,\r\n  Pressable,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\r\nimport { validateEmail } from '../utils/common';\r\nconst EyeSlashImg = '../../assets/images/Eye-slashmini.png';\r\n\r\nconst styles = StyleSheet.create({\r\n  fornaxBox: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    flexDirection: 'column',\r\n    maxWidth: 360,\r\n  },\r\n  createAccText: {\r\n    fontSize: 22,\r\n    fontFamily: 'Quicksand-Medium',\r\n    textAlign: 'center',\r\n    color: '#ffffff',\r\n    lineHeight: 35,\r\n  },\r\n  inputBox: {\r\n    flexDirection: 'row',\r\n    marginVertical: 13,\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  inputLabel: {\r\n    fontSize: 16,\r\n    color: '#b27f29',\r\n    marginTop: 8,\r\n    width: 80,\r\n    fontFamily: 'Quicksand-Medium',\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: '#ffffff',\r\n    fontFamily: 'Quicksand-Medium',\r\n    color: '#ffffff',\r\n    paddingHorizontal: 10,\r\n    fontSize: 16,\r\n    width: 200,\r\n    marginLeft: 30,\r\n  },\r\n  loginTextbox: {\r\n    fontSize: 14,\r\n    color: '#bdbdbd',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n    flexDirection: 'row',\r\n    alignSelf: 'center',\r\n    alignItems: 'center',\r\n    alignContent: 'center',\r\n    marginTop: 10,\r\n  },\r\n  loginText: {\r\n    fontSize: 14,\r\n    color: '#81c2ff',\r\n    fontFamily: 'Quicksand-Medium',\r\n    paddingTop: 6,\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: '#b27f29',\r\n    width: 240,\r\n    alignSelf: 'center',\r\n    marginTop: 50,\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    paddingVertical: 20,\r\n  },\r\n  textStyle: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n  },\r\n  verifyModalBox: {\r\n    alignContent: 'center',\r\n    alignSelf: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  topImg: {\r\n    height: 42,\r\n    width: 52,\r\n    alignSelf: 'center',\r\n    marginTop: 30,\r\n  },\r\n  verifyText: {\r\n    fontSize: 16,\r\n    fontFamily: 'Quicksand-Medium',\r\n    textAlign: 'center',\r\n    color: '#000000',\r\n    lineHeight: 25,\r\n    marginVertical: 30,\r\n  },\r\n  buttonCode: {\r\n    backgroundColor: '#363853',\r\n    width: 170,\r\n    alignSelf: 'center',\r\n    marginTop: 50,\r\n    marginBottom: 10,\r\n    borderRadius: 20,\r\n    paddingVertical: 20,\r\n  },\r\n  codeText: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nconst Login = (props: any) => {\r\n  const navigate = props.navigation.navigate;\r\n  const [showPass, setShowPass] = useState(true);\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      if (user.email && user.password) {\r\n        if (!validateEmail(user.email)) {\r\n          showMessage({\r\n            message: \"Email Validation Failed!!!\",\r\n            description: \"Please enter valid Email Address\",\r\n            type: \"warning\",\r\n          });\r\n          return;\r\n        }\r\n        const registerUser: any = await AsyncStorage.getItem('registerUser');\r\n        const registerData = registerUser && JSON.parse(registerUser);\r\n        if (registerData.password === user.password) {\r\n          hideMessage();\r\n          await AsyncStorage.setItem('loginUser', JSON.stringify(user));\r\n          const value = await AsyncStorage.getItem('accountList');\r\n          if (value) {\r\n            navigate('Dashboard');\r\n            return;\r\n          }\r\n          navigate('WalletSetup');\r\n        } else {\r\n          showMessage({\r\n            message: \"Login Failed!!!\",\r\n            description: \"Please enter valid Email Address and Password\",\r\n            type: \"danger\",\r\n          });\r\n        }\r\n      } else {\r\n        showMessage({\r\n          message: \"Login Failed!!!\",\r\n          description: \"Please enter Email Address and Password\",\r\n          type: \"danger\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log('Login Error', err);\r\n    }\r\n  };\r\n  \r\n  const onBlurEmail = () => {\r\n    if(!validateEmail(user.email)) {\r\n      showMessage({\r\n        message: \"Email Validation Failed!!!\",\r\n        description: \"Please enter valid Email Address\",\r\n        type: \"warning\",\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.fornaxBox}>\r\n        <View style={{ marginBottom: 50 }}>\r\n          <Text style={styles.createAccText}>Login to your Account</Text>\r\n        </View>\r\n        <View style={styles.inputBox}>\r\n          <Text style={styles.inputLabel}>Email</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"example@mail.com\"\r\n            placeholderTextColor=\"#bdbdbd\"\r\n            autoCapitalize='none'\r\n            autoCorrect={false}\r\n            onBlur={onBlurEmail}\r\n            onChangeText={e => setUser({ ...user, email: e })}\r\n            value={user.email}\r\n          />\r\n        </View>\r\n        <View style={styles.inputBox}>\r\n          <Text style={styles.inputLabel}>Password</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"xxxxxxxx\"\r\n            secureTextEntry={showPass}\r\n            placeholderTextColor=\"#bdbdbd\"\r\n            onChangeText={e => setUser({ ...user, password: e })}\r\n            value={user.password}\r\n          />\r\n          <Pressable onPress={() => setShowPass(!showPass)} style={{ marginBottom: 20, marginRight: 10 }}>\r\n            <Image source={require(EyeSlashImg)} style={{ width: 20, position: 'absolute', right: 0 }} />\r\n          </Pressable>\r\n        </View>\r\n        <Pressable\r\n          onPress={handleLogin}\r\n          style={[styles.button, styles.buttonClose]}>\r\n          <Text style={styles.textStyle}>Login</Text>\r\n        </Pressable>\r\n        <Text style={styles.loginTextbox}>\r\n          You don't have account?\r\n          <Pressable\r\n            onPress={() => navigate('Signup')}>\r\n            <Text style={[styles.loginText, { marginLeft: 3,  }]}>SignUp</Text>\r\n          </Pressable>\r\n        </Text>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"script"}