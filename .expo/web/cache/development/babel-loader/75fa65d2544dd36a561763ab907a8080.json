{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends3 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _Wallet = require(\"../redux/reducers/Wallet\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reactNativePickerSelect = _interopRequireDefault(require(\"react-native-picker-select\"));\n\nvar _reactNativeFlashMessage = require(\"react-native-flash-message\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\src\\\\screens\\\\Transfer.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar SendImage = '../../assets/images/transfer.png';\nvar QrcodeImage = '../../assets/images/COCO_Line_Menumini.png';\nvar BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\n\nvar styles = _reactNative.StyleSheet.create({\n  fornaxBox: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textStyle: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center'\n  },\n  backIcon: {\n    marginLeft: 26,\n    marginTop: 32\n  },\n  fornaxIcon: {\n    marginBottom: 30\n  },\n  fornaxInnerBox: {\n    flex: 0,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('5'),\n    marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('4')\n  },\n  fornaxMiniText: {\n    fontSize: 16,\n    color: '#bdbdbd',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium'\n  },\n  inputBox: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    height: 55,\n    borderRadius: 15,\n    fontFamily: 'Quicksand-Medium',\n    backgroundColor: '#ffffff',\n    color: '#bdbdbd',\n    fontSize: 16,\n    width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('90'),\n    marginBottom: 20\n  },\n  input: {\n    fontFamily: 'Quicksand-Medium',\n    fontSize: 16,\n    width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('80'),\n    color: '#000',\n    paddingHorizontal: 20\n  }\n});\n\nvar pickerSelectStyles = _reactNative.StyleSheet.create({\n  inputIOS: {\n    width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('110'),\n    fontSize: 16,\n    color: '#000',\n    paddingHorizontal: 20,\n    paddingVertical: 20\n  },\n  inputAndroid: {\n    width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('110'),\n    fontSize: 16,\n    color: '#000',\n    paddingHorizontal: 20,\n    paddingVertical: 20\n  }\n});\n\nvar Transfer = function Transfer(props) {\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var navigate = props.navigation.navigate;\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      accountOpt = _useState2[0],\n      setAccountOpt = _useState2[1];\n\n  var _useState3 = (0, _react.useState)({\n    to: '',\n    from: {}\n  }),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      txnData = _useState4[0],\n      setTxnData = _useState4[1];\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (_ref) {\n    var wallet = _ref.wallet;\n    return {\n      web3: wallet == null ? void 0 : wallet.web3,\n      accounts: wallet == null ? void 0 : wallet.accounts\n    };\n  }),\n      web3 = _useSelector.web3,\n      accounts = _useSelector.accounts;\n\n  (0, _react.useEffect)(function () {\n    var options = accounts.length > 0 && accounts.reduce(function (newAcc, acc) {\n      newAcc.push({\n        label: acc == null ? void 0 : acc.address,\n        value: acc\n      });\n      return newAcc;\n    }, []);\n    setAccountOpt(options);\n  }, [accounts]);\n\n  var handleValue = function handleValue(value, key) {\n    setTxnData((0, _extends3.default)({}, txnData, (0, _defineProperty2.default)({}, key, value)));\n  };\n\n  var handleSend = function _callee() {\n    var _txnData$from;\n\n    var isValid;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(web3.utils.isAddress(txnData.to.toLowerCase().trim()));\n\n          case 2:\n            isValid = _context.sent;\n\n            if ((_txnData$from = txnData.from) != null && _txnData$from.address && isValid) {\n              (0, _reactNativeFlashMessage.hideMessage)();\n              dispatch((0, _Wallet.setTxnsInfo)(txnData));\n              navigate('SetAmount');\n            } else {\n              (0, _reactNativeFlashMessage.showMessage)({\n                message: \"Address is Invalid!\",\n                description: \"Again enter valid address\",\n                type: \"warning\"\n              });\n              console.log('adress is invalid');\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  (0, _react.useEffect)(function () {\n    if (txnData.to) {\n      handleSend();\n    }\n  }, [txnData]);\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('Dashboard');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.backIcon,\n    source: require(BackIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }))), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxInnerBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.fornaxIcon,\n    source: require(SendImage),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"Transfer\"), _react.default.createElement(_reactNative.Text, {\n    style: styles.fornaxMiniText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Import an existing wallet or create a new one\")), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativePickerSelect.default, {\n    onValueChange: function onValueChange(value) {\n      return handleValue(value, 'from');\n    },\n    style: pickerSelectStyles,\n    items: accountOpt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: styles.input,\n    placeholder: \"Send Address\",\n    placeholderTextColor: \"#bdbdbd\",\n    onChangeText: function onChangeText(e) {\n      return handleValue(e, 'to');\n    },\n    value: txnData.to,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('QRScanner');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: {\n      height: 30,\n      width: 30,\n      position: 'absolute',\n      right: 15,\n      bottom: 15\n    },\n    source: require(QrcodeImage),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar _default = Transfer;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/screens/Transfer.tsx"],"names":["SendImage","QrcodeImage","BackIcon","styles","StyleSheet","create","fornaxBox","flex","flexDirection","alignItems","justifyContent","textStyle","fontSize","color","lineHeight","fontFamily","textAlign","backIcon","marginLeft","marginTop","fornaxIcon","marginBottom","fornaxInnerBox","fornaxMiniText","inputBox","height","borderRadius","backgroundColor","width","input","paddingHorizontal","pickerSelectStyles","inputIOS","paddingVertical","inputAndroid","Transfer","props","dispatch","navigate","navigation","accountOpt","setAccountOpt","to","from","txnData","setTxnData","wallet","web3","accounts","options","length","reduce","newAcc","acc","push","label","address","value","handleValue","key","handleSend","utils","isAddress","toLowerCase","trim","isValid","message","description","type","console","log","require","e","position","right","bottom"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAQA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AAEA,IAAMA,SAAS,GAAG,kCAAlB;AACA,IAAMC,WAAW,GAAG,4CAApB;AACA,IAAMC,QAAQ,GAAG,6CAAjB;;AAGA,IAAMC,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,KAAK,EAAE,SAFE;AAGTC,IAAAA,UAAU,EAAE,EAHH;AAITC,IAAAA,UAAU,EAAE,gBAJH;AAKTC,IAAAA,SAAS,EAAE;AALF,GAPoB;AAc/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,EADJ;AAERC,IAAAA,SAAS,EAAE;AAFH,GAdqB;AAkB/BC,EAAAA,UAAU,EAAE;AAKVC,IAAAA,YAAY,EAAE;AALJ,GAlBmB;AAyB/BC,EAAAA,cAAc,EAAE;AACdf,IAAAA,IAAI,EAAE,CADQ;AAEdC,IAAAA,aAAa,EAAE,QAFD;AAGdC,IAAAA,UAAU,EAAE,QAHE;AAIdC,IAAAA,cAAc,EAAE,YAJF;AAKdS,IAAAA,SAAS,EAAE,uDAAG,GAAH,CALG;AAMdE,IAAAA,YAAY,EAAE,uDAAG,GAAH;AANA,GAzBe;AAiC/BE,EAAAA,cAAc,EAAE;AACdX,IAAAA,QAAQ,EAAE,EADI;AAEdC,IAAAA,KAAK,EAAE,SAFO;AAGdG,IAAAA,SAAS,EAAE,QAHG;AAIdD,IAAAA,UAAU,EAAE;AAJE,GAjCe;AAuC/BS,EAAAA,QAAQ,EAAE;AACRhB,IAAAA,aAAa,EAAE,KADP;AAERE,IAAAA,cAAc,EAAE,eAFR;AAGRe,IAAAA,MAAM,EAAE,EAHA;AAIRC,IAAAA,YAAY,EAAE,EAJN;AAKRX,IAAAA,UAAU,EAAE,kBALJ;AAMRY,IAAAA,eAAe,EAAE,SANT;AAORd,IAAAA,KAAK,EAAE,SAPC;AAQRD,IAAAA,QAAQ,EAAE,EARF;AASRgB,IAAAA,KAAK,EAAE,sDAAoB,IAApB,CATC;AAURP,IAAAA,YAAY,EAAE;AAVN,GAvCqB;AAmD/BQ,EAAAA,KAAK,EAAE;AACLd,IAAAA,UAAU,EAAE,kBADP;AAELH,IAAAA,QAAQ,EAAE,EAFL;AAGLgB,IAAAA,KAAK,EAAE,sDAAoB,IAApB,CAHF;AAILf,IAAAA,KAAK,EAAE,MAJF;AAKLiB,IAAAA,iBAAiB,EAAE;AALd;AAnDwB,CAAlB,CAAf;;AA4DA,IAAMC,kBAAkB,GAAG3B,wBAAWC,MAAX,CAAkB;AAC3C2B,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,KAAK,EAAE,sDAAoB,KAApB,CADC;AAERhB,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,KAAK,EAAE,MAHC;AAIRiB,IAAAA,iBAAiB,EAAE,EAJX;AAKRG,IAAAA,eAAe,EAAE;AALT,GADiC;AAQ3CC,EAAAA,YAAY,EAAE;AACZN,IAAAA,KAAK,EAAE,sDAAoB,KAApB,CADK;AAEZhB,IAAAA,QAAQ,EAAE,EAFE;AAGZC,IAAAA,KAAK,EAAE,MAHK;AAIZiB,IAAAA,iBAAiB,EAAE,EAJP;AAKZG,IAAAA,eAAe,EAAE;AALL;AAR6B,CAAlB,CAA3B;;AAiBA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAgB;AAC/B,MAAMC,QAAQ,GAAG,8BAAjB;AACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,UAAN,CAAiBD,QAAlC;;AACA,kBAAoC,qBAAc,EAAd,CAApC;AAAA;AAAA,MAAOE,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA8B,qBAAS;AACrCC,IAAAA,EAAE,EAAE,EADiC;AAErCC,IAAAA,IAAI,EAAE;AAF+B,GAAT,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAKA,qBAA2B,6BAAY,gBAAqB;AAAA,QAAlBC,MAAkB,QAAlBA,MAAkB;AAC1D,WAAO;AACLC,MAAAA,IAAI,EAAED,MAAF,oBAAEA,MAAM,CAAEC,IADT;AAELC,MAAAA,QAAQ,EAAEF,MAAF,oBAAEA,MAAM,CAAEE;AAFb,KAAP;AAID,GAL0B,CAA3B;AAAA,MAAQD,IAAR,gBAAQA,IAAR;AAAA,MAAcC,QAAd,gBAAcA,QAAd;;AAOA,wBAAU,YAAM;AACd,QAAMC,OAAO,GACXD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,IACAF,QAAQ,CAACG,MAAT,CAAgB,UAACC,MAAD,EAAcC,GAAd,EAA2B;AACzCD,MAAAA,MAAM,CAACE,IAAP,CAAY;AAAEC,QAAAA,KAAK,EAAEF,GAAF,oBAAEA,GAAG,CAAEG,OAAd;AAAuBC,QAAAA,KAAK,EAAEJ;AAA9B,OAAZ;AACA,aAAOD,MAAP;AACD,KAHD,EAGG,EAHH,CAFF;AAMAX,IAAAA,aAAa,CAACQ,OAAD,CAAb;AACD,GARD,EAQG,CAACD,QAAD,CARH;;AAUA,MAAMU,WAAW,GAAG,SAAdA,WAAc,CAACD,KAAD,EAAgBE,GAAhB,EAAgC;AAClDd,IAAAA,UAAU,4BAAMD,OAAN,oCAAgBe,GAAhB,EAAsBF,KAAtB,GAAV;AACD,GAFD;;AAIA,MAAMG,UAAU,GAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACKb,IAAI,CAACc,KAAL,CAAWC,SAAX,CAAqBlB,OAAO,CAACF,EAAR,CAAWqB,WAAX,GAAyBC,IAAzB,EAArB,CADL;;AAAA;AACXC,YAAAA,OADW;;AAEjB,gBAAI,iBAAArB,OAAO,CAACD,IAAR,2BAAca,OAAd,IAAyBS,OAA7B,EAAsC;AACpC;AACA5B,cAAAA,QAAQ,CAAC,yBAAYO,OAAZ,CAAD,CAAR;AACAN,cAAAA,QAAQ,CAAC,WAAD,CAAR;AACD,aAJD,MAIO;AACL,wDAAY;AACV4B,gBAAAA,OAAO,EAAE,qBADC;AAEVC,gBAAAA,WAAW,EAAE,2BAFH;AAGVC,gBAAAA,IAAI,EAAE;AAHI,eAAZ;AAKAC,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAgBA,wBAAU,YAAM;AACd,QAAI1B,OAAO,CAACF,EAAZ,EAAgB;AACdkB,MAAAA,UAAU;AACX;AAEF,GALD,EAKG,CAAChB,OAAD,CALH;AAOA,SACE,4DACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,sBAAD;AAAW,IAAA,OAAO,EAAE;AAAA,aAAMN,QAAQ,CAAC,WAAD,CAAd;AAAA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,kBAAD;AAAO,IAAA,KAAK,EAAEnC,MAAM,CAACc,QAArB;AAA+B,IAAA,MAAM,EAAEsD,OAAO,CAACrE,QAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACmB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,kBAAD;AAAO,IAAA,KAAK,EAAEnB,MAAM,CAACiB,UAArB;AAAiC,IAAA,MAAM,EAAEmD,OAAO,CAACvE,SAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACQ,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACoB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAHF,CANF,EAaE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACqB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,gCAAD;AACE,IAAA,aAAa,EAAE,uBAAAiC,KAAK;AAAA,aAAIC,WAAW,CAACD,KAAD,EAAQ,MAAR,CAAf;AAAA,KADtB;AAEE,IAAA,KAAK,EAAE1B,kBAFT;AAGE,IAAA,KAAK,EAAES,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAErC,MAAM,CAACqB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,sBAAD;AACE,IAAA,KAAK,EAAErB,MAAM,CAAC0B,KADhB;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,oBAAoB,EAAC,SAHvB;AAIE,IAAA,YAAY,EAAE,sBAAA2C,CAAC;AAAA,aAAId,WAAW,CAACc,CAAD,EAAI,IAAJ,CAAf;AAAA,KAJjB;AAKE,IAAA,KAAK,EAAE5B,OAAO,CAACF,EALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,6BAAC,sBAAD;AAAW,IAAA,OAAO,EAAE;AAAA,aAAMJ,QAAQ,CAAC,WAAD,CAAd;AAAA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AAAEb,MAAAA,MAAM,EAAE,EAAV;AAAcG,MAAAA,KAAK,EAAE,EAArB;AAAyB6C,MAAAA,QAAQ,EAAE,UAAnC;AAAgDC,MAAAA,KAAK,EAAE,EAAvD;AAA2DC,MAAAA,MAAM,EAAE;AAAnE,KADT;AAEE,IAAA,MAAM,EAAEJ,OAAO,CAACtE,WAAD,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CARF,CAbF,CADF;AAwCD,CA7FD;;eA+FekC,Q","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Image,\r\n  Pressable,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n} from 'react-native';\r\nimport { heightPercentageToDP as hp, widthPercentageToDP } from 'react-native-responsive-screen';\r\nimport { setTxnsInfo } from '../redux/reducers/Wallet';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport RNPickerSelect from 'react-native-picker-select';\r\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\r\n\r\nconst SendImage = '../../assets/images/transfer.png';\r\nconst QrcodeImage = '../../assets/images/COCO_Line_Menumini.png';\r\nconst BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\r\n// const DownArrow = '../../assets/images/Vector-arrow.png';\r\n\r\nconst styles = StyleSheet.create({\r\n  fornaxBox: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  textStyle: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n  },\r\n  backIcon: {\r\n    marginLeft: 26,\r\n    marginTop: 32,\r\n  },\r\n  fornaxIcon: {\r\n    // width:80,\r\n    // height:80,\r\n    // width:  hp(9),\r\n    // height: hp(9),\r\n    marginBottom: 30,\r\n  },\r\n  fornaxInnerBox: {\r\n    flex: 0,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    marginTop: hp('5'),\r\n    marginBottom: hp('4'),\r\n  },\r\n  fornaxMiniText: {\r\n    fontSize: 16,\r\n    color: '#bdbdbd',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n  },\r\n  inputBox: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    height: 55,\r\n    borderRadius: 15,\r\n    fontFamily: 'Quicksand-Medium',\r\n    backgroundColor: '#ffffff',\r\n    color: '#bdbdbd',\r\n    fontSize: 16,\r\n    width: widthPercentageToDP('90'),\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    fontFamily: 'Quicksand-Medium',\r\n    fontSize: 16,\r\n    width: widthPercentageToDP('80'),\r\n    color: '#000',\r\n    paddingHorizontal: 20,\r\n  },\r\n});\r\n\r\nconst pickerSelectStyles = StyleSheet.create({\r\n  inputIOS: {\r\n    width: widthPercentageToDP('110'),\r\n    fontSize: 16,\r\n    color: '#000',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 20,\r\n  },\r\n  inputAndroid: {\r\n    width: widthPercentageToDP('110'),\r\n    fontSize: 16,\r\n    color: '#000',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 20,\r\n  },\r\n});\r\n\r\nconst Transfer = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = props.navigation.navigate;\r\n  const [accountOpt, setAccountOpt] = useState<any>([]);\r\n  const [txnData, setTxnData] = useState({\r\n    to: '',\r\n    from: {} as any,\r\n  });\r\n\r\n  const { web3, accounts } = useSelector(({ wallet }: any) => {\r\n    return {\r\n      web3: wallet?.web3,\r\n      accounts: wallet?.accounts,\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const options =\r\n      accounts.length > 0 &&\r\n      accounts.reduce((newAcc: any, acc: any) => {\r\n        newAcc.push({ label: acc?.address, value: acc });\r\n        return newAcc;\r\n      }, []);\r\n    setAccountOpt(options);\r\n  }, [accounts]);\r\n\r\n  const handleValue = (value: string, key: string) => {\r\n    setTxnData({ ...txnData, [key]: value });\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    const isValid = await web3.utils.isAddress(txnData.to.toLowerCase().trim());\r\n    if (txnData.from?.address && isValid) {\r\n      hideMessage();\r\n      dispatch(setTxnsInfo(txnData));\r\n      navigate('SetAmount');\r\n    } else {\r\n      showMessage({\r\n        message: \"Address is Invalid!\",\r\n        description: \"Again enter valid address\",\r\n        type: \"warning\",\r\n      });\r\n      console.log('adress is invalid');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (txnData.to) {\r\n      handleSend();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [txnData]);\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <Pressable onPress={() => navigate('Dashboard')}>\r\n          <Image style={styles.backIcon} source={require(BackIcon)} />\r\n        </Pressable>\r\n      </View>\r\n      <View style={styles.fornaxInnerBox}>\r\n        <Image style={styles.fornaxIcon} source={require(SendImage)} />\r\n        <Text style={styles.textStyle}>Transfer</Text>\r\n        <Text style={styles.fornaxMiniText}>\r\n          Import an existing wallet or create a new one\r\n        </Text>\r\n      </View>\r\n      <View style={styles.fornaxBox}>\r\n        <View style={styles.inputBox}>\r\n          <RNPickerSelect\r\n            onValueChange={value => handleValue(value, 'from')}\r\n            style={pickerSelectStyles}\r\n            items={accountOpt}\r\n          />\r\n        </View>\r\n        <View style={styles.inputBox}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Send Address\"\r\n            placeholderTextColor=\"#bdbdbd\"\r\n            onChangeText={e => handleValue(e, 'to')}\r\n            value={txnData.to}\r\n          />\r\n          <Pressable onPress={() => navigate('QRScanner')}>\r\n            <Image \r\n              style={{ height: 30, width: 30, position: 'absolute' , right: 15, bottom: 15 }} \r\n              source={require(QrcodeImage)} \r\n            />\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transfer;\r\n"]},"metadata":{},"sourceType":"script"}