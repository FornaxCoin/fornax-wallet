{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _Wallet = require(\"../redux/reducers/Wallet\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\src\\\\screens\\\\AddCard.tsx\";\n\nvar backLines = '../../assets/images/Group_37background.png';\nvar backCard = '../../assets/images/Group_36card.png';\nvar BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\n\nvar styles = _reactNative.StyleSheet.create({\n  fornaxBox: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  secondaryTxnText: {\n    color: '#363853'\n  },\n  txnText: {\n    marginLeft: 17,\n    fontSize: 16,\n    color: '#ffffff',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium',\n    marginTop: -5\n  },\n  buttonClose: {\n    backgroundColor: '#b27f29',\n    width: 240,\n    alignSelf: 'center',\n    marginTop: 25\n  },\n  button: {\n    borderRadius: 20,\n    paddingVertical: 18\n  },\n  secondaryButton: {\n    backgroundColor: '#fff',\n    color: '#b27f29',\n    marginTop: 185\n  },\n  textStyle: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center'\n  },\n  backIcon: {\n    marginLeft: 26,\n    marginTop: 32\n  },\n  fornaxIcon: {\n    marginBottom: 44\n  },\n  fornaxInnerBox: {\n    flex: 0,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('10'),\n    marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('4')\n  },\n  centerContainer: {\n    position: 'absolute'\n  },\n  center: {\n    top: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(-5),\n    zIndex: -99,\n    position: 'absolute',\n    alignSelf: 'center'\n  }\n});\n\nvar AddCard = function AddCard(props) {\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var navigate = props.navigation.navigate;\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (_ref) {\n    var wallet = _ref.wallet;\n    return {\n      web3: wallet == null ? void 0 : wallet.web3\n    };\n  }),\n      web3 = _useSelector.web3;\n\n  var storeDataAsync = function _callee(account) {\n    var accounts, accountList;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            accounts = [];\n            _context.next = 4;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('accountList'));\n\n          case 4:\n            accountList = _context.sent;\n\n            if (accountList !== null) {\n              accounts.push.apply(accounts, (0, _toConsumableArray2.default)(JSON.parse(accountList)));\n              accounts.push(account);\n            }\n\n            _context.next = 8;\n            return _regenerator.default.awrap(_asyncStorage.default.setItem('accountList', JSON.stringify(accounts)));\n\n          case 8:\n            dispatch((0, _Wallet.setAccounts)(accounts));\n            navigate('Dashboard');\n            _context.next = 14;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var getBalance = function _callee3(account) {\n    return _regenerator.default.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            web3.eth.getBalance(account == null ? void 0 : account.address).then(function _callee2(bal) {\n              var balance;\n              return _regenerator.default.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!(bal >= 0)) {\n                        _context2.next = 5;\n                        break;\n                      }\n\n                      _context2.next = 3;\n                      return _regenerator.default.awrap(web3.utils.fromWei(bal, 'ether'));\n\n                    case 3:\n                      balance = _context2.sent;\n                      storeDataAsync((0, _extends2.default)({}, account, {\n                        balance: balance\n                      }));\n\n                    case 5:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }, function (error) {\n              console.log(error, 'getBalance');\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleCreateWallet = function _callee4() {\n    var account;\n    return _regenerator.default.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n\n            if (!web3) {\n              _context4.next = 6;\n              break;\n            }\n\n            _context4.next = 4;\n            return _regenerator.default.awrap(web3.eth.accounts.create());\n\n          case 4:\n            account = _context4.sent;\n            getBalance(account);\n\n          case 6:\n            _context4.next = 11;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('Dashboard');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.backIcon,\n    source: require(BackIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }))), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxInnerBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.centerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.center,\n    source: require(backLines),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Image, {\n    style: styles.center,\n    source: require(backCard),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Add Card\")), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('ImportCard');\n    },\n    style: [styles.button, styles.buttonClose, styles.secondaryButton],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [styles.txnText, styles.secondaryTxnText],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Import new Card\")), _react.default.createElement(_reactNative.Pressable, {\n    onPress: handleCreateWallet,\n    style: [styles.button, styles.buttonClose],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.txnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Create a new Card\"))));\n};\n\nvar _default = AddCard;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/screens/AddCard.tsx"],"names":["backLines","backCard","BackIcon","styles","StyleSheet","create","fornaxBox","flex","flexDirection","alignItems","justifyContent","secondaryTxnText","color","txnText","marginLeft","fontSize","textAlign","fontFamily","marginTop","buttonClose","backgroundColor","width","alignSelf","button","borderRadius","paddingVertical","secondaryButton","textStyle","lineHeight","backIcon","fornaxIcon","marginBottom","fornaxInnerBox","centerContainer","position","center","top","zIndex","AddCard","props","dispatch","navigate","navigation","wallet","web3","storeDataAsync","account","accounts","AsyncStorage","getItem","accountList","push","JSON","parse","setItem","stringify","getBalance","eth","address","then","bal","utils","fromWei","balance","error","console","log","handleCreateWallet","require"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Image, Pressable, StyleSheet, Text, View } from 'react-native';\r\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { setAccounts } from '../redux/reducers/Wallet';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst backLines = '../../assets/images/Group_37background.png';\r\nconst backCard = '../../assets/images/Group_36card.png';\r\nconst BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\r\n\r\nconst styles = StyleSheet.create({\r\n  fornaxBox: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  secondaryTxnText: {\r\n    color: '#363853',\r\n  },\r\n  txnText: {\r\n    marginLeft: 17,\r\n    fontSize: 16,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n    marginTop: -5,\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: '#b27f29',\r\n    width: 240,\r\n    alignSelf: 'center',\r\n    marginTop: 25,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    paddingVertical: 18,\r\n  },\r\n  secondaryButton: {\r\n    backgroundColor: '#fff',\r\n    color: '#b27f29',\r\n    marginTop: 185,\r\n  },\r\n  textStyle: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n  },\r\n  backIcon: {\r\n    marginLeft: 26,\r\n    marginTop: 32,\r\n  },\r\n  fornaxIcon: {\r\n    marginBottom: 44,\r\n  },\r\n  fornaxInnerBox: {\r\n    flex: 0,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    marginTop: hp('10'),\r\n    marginBottom: hp('4'),\r\n  },\r\n  centerContainer: {\r\n    position: 'absolute',\r\n  },\r\n  center: {\r\n    top: hp(-5),\r\n    zIndex: -99,\r\n    position: 'absolute',\r\n    alignSelf: 'center',\r\n  },\r\n});\r\n\r\nconst AddCard = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = props.navigation.navigate;\r\n\r\n  const { web3 } = useSelector(({ wallet }: any) => {\r\n    return {\r\n      web3: wallet?.web3,\r\n    };\r\n  });\r\n\r\n  const storeDataAsync = async (account: any) => {\r\n    try {\r\n      const accounts: any = [];\r\n      const accountList = await AsyncStorage.getItem('accountList');\r\n      if (accountList !== null) {\r\n        accounts.push(...JSON.parse(accountList));\r\n        accounts.push(account);\r\n      }\r\n      await AsyncStorage.setItem('accountList', JSON.stringify(accounts));\r\n      dispatch(setAccounts(accounts));\r\n      navigate('Dashboard');\r\n    } catch (error) {\r\n      // Error saving data\r\n    }\r\n  };\r\n\r\n  const getBalance = async (account: any) => {\r\n    web3.eth.getBalance(account?.address).then(\r\n      async (bal: any) => {\r\n        if (bal >= 0) {\r\n          const balance = await web3.utils.fromWei(bal, 'ether');\r\n          storeDataAsync({ ...account, balance });\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(error, 'getBalance');\r\n      },\r\n    );\r\n  };\r\n\r\n  const handleCreateWallet = async () => {\r\n    try {\r\n      if (web3) {\r\n        const account = await web3.eth.accounts.create();\r\n        getBalance(account);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <Pressable onPress={() => navigate('Dashboard')}>\r\n          <Image style={styles.backIcon} source={require(BackIcon)} />\r\n        </Pressable>\r\n      </View>\r\n      <View style={styles.fornaxInnerBox}>\r\n        {/*<Image style={styles.fornaxIcon} source={require(SettingImage)} />*/}\r\n        <View style={styles.centerContainer}>\r\n          <Image style={styles.center} source={require(backLines)} />\r\n          <Image style={styles.center} source={require(backCard)} />\r\n        </View>\r\n        <Text style={styles.textStyle}>Add Card</Text>\r\n      </View>\r\n      <View style={styles.fornaxBox}>\r\n        <Pressable\r\n          onPress={() => navigate('ImportCard')}\r\n          style={[styles.button, styles.buttonClose, styles.secondaryButton]}>\r\n          <Text style={[styles.txnText, styles.secondaryTxnText]}>\r\n            Import new Card\r\n          </Text>\r\n        </Pressable>\r\n        <Pressable\r\n          onPress={handleCreateWallet}\r\n          style={[styles.button, styles.buttonClose]}>\r\n          <Text style={styles.txnText}>Create a new Card</Text>\r\n        </Pressable>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCard;\r\n"]},"metadata":{},"sourceType":"script"}