{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ReactNativePropRegistry = _interopRequireDefault(require(\"./ReactNativePropRegistry\"));\n\nvar _flattenStyle = _interopRequireDefault(require(\"./flattenStyle\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate\"));\n\nvar absoluteFillObject = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\n\nvar absoluteFill = _ReactNativePropRegistry.default.register(absoluteFillObject);\n\nvar StyleSheet = {\n  absoluteFill: absoluteFill,\n  absoluteFillObject: absoluteFillObject,\n  compose: function compose(style1, style2) {\n    if (process.env.NODE_ENV !== 'production') {\n      var len = arguments.length;\n\n      if (len > 2) {\n        var readableStyles = Array.prototype.slice.call(arguments).map(function (a) {\n          return (0, _flattenStyle.default)(a);\n        });\n        throw new Error(\"StyleSheet.compose() only accepts 2 arguments, received \" + len + \": \" + JSON.stringify(readableStyles));\n      }\n    }\n\n    if (style1 && style2) {\n      return [style1, style2];\n    } else {\n      return style1 || style2;\n    }\n  },\n  create: function create(styles) {\n    var result = {};\n    Object.keys(styles).forEach(function (key) {\n      if (process.env.NODE_ENV !== 'production') {\n        (0, _validate.default)(key, styles);\n      }\n\n      var id = styles[key] && _ReactNativePropRegistry.default.register(styles[key]);\n\n      result[key] = id;\n    });\n    return result;\n  },\n  flatten: _flattenStyle.default,\n  hairlineWidth: 1\n};\nvar _default = StyleSheet;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/node_modules/react-native-web/src/exports/StyleSheet/StyleSheet.js"],"names":["absoluteFillObject","position","left","right","top","bottom","absoluteFill","ReactNativePropRegistry","register","StyleSheet","compose","style1","style2","process","env","NODE_ENV","len","arguments","length","readableStyles","map","a","Error","JSON","stringify","create","styles","result","Object","keys","forEach","key","id","flatten","flattenStyle","hairlineWidth"],"mappings":";;;;;;;AASA;;AACA;;AACA;;AAEA,IAAMA,kBAAkB,GAAG;AACzBC,EAAAA,QAAQ,EAAE,UADe;AAEzBC,EAAAA,IAAI,EAAE,CAFmB;AAGzBC,EAAAA,KAAK,EAAE,CAHkB;AAIzBC,EAAAA,GAAG,EAAE,CAJoB;AAKzBC,EAAAA,MAAM,EAAE;AALiB,CAA3B;;AAOA,IAAMC,YAAoB,GAAGC,iCAAwBC,QAAxB,CAAiCR,kBAAjC,CAA7B;;AAEA,IAAMS,UAAU,GAAG;AACjBH,EAAAA,YAAY,EAAZA,YADiB;AAEjBN,EAAAA,kBAAkB,EAAlBA,kBAFiB;AAGjBU,EAAAA,OAHiB,mBAGTC,MAHS,EAGIC,MAHJ,EAGsB;AACrC,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAEzC,UAAMC,GAAG,GAAGC,SAAS,CAACC,MAAtB;;AACA,UAAIF,GAAG,GAAG,CAAV,EAAa;AACX,YAAMG,cAAc,GAAG,2BAAIF,SAAJ,EAAeG,GAAf,CAAmB,UAACC,CAAD;AAAA,iBAAO,2BAAaA,CAAb,CAAP;AAAA,SAAnB,CAAvB;AACA,cAAM,IAAIC,KAAJ,8DACuDN,GADvD,UAC+DO,IAAI,CAACC,SAAL,CACjEL,cADiE,CAD/D,CAAN;AAKD;AAEF;;AAED,QAAIR,MAAM,IAAIC,MAAd,EAAsB;AACpB,aAAO,CAACD,MAAD,EAASC,MAAT,CAAP;AACD,KAFD,MAEO;AACL,aAAOD,MAAM,IAAIC,MAAjB;AACD;AACF,GAvBgB;AAwBjBa,EAAAA,MAxBiB,kBAwBVC,MAxBU,EAwBmC;AAClD,QAAMC,MAAM,GAAG,EAAf;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAACC,GAAD,EAAS;AACnC,UAAIlB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,+BAASgB,GAAT,EAAcL,MAAd;AACD;;AACD,UAAMM,EAAE,GAAGN,MAAM,CAACK,GAAD,CAAN,IAAexB,iCAAwBC,QAAxB,CAAiCkB,MAAM,CAACK,GAAD,CAAvC,CAA1B;;AACAJ,MAAAA,MAAM,CAACI,GAAD,CAAN,GAAcC,EAAd;AACD,KAND;AAOA,WAAOL,MAAP;AACD,GAlCgB;AAmCjBM,EAAAA,OAAO,EAAEC,qBAnCQ;AAuCjBC,EAAAA,aAAa,EAAE;AAvCE,CAAnB;eA0Ce1B,U","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactNativePropRegistry from './ReactNativePropRegistry';\nimport flattenStyle from './flattenStyle';\nimport validate from './validate';\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\nconst absoluteFill: number = ReactNativePropRegistry.register(absoluteFillObject);\n\nconst StyleSheet = {\n  absoluteFill,\n  absoluteFillObject,\n  compose(style1: any, style2: any): any {\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable prefer-rest-params */\n      const len = arguments.length;\n      if (len > 2) {\n        const readableStyles = [...arguments].map((a) => flattenStyle(a));\n        throw new Error(\n          `StyleSheet.compose() only accepts 2 arguments, received ${len}: ${JSON.stringify(\n            readableStyles\n          )}`\n        );\n      }\n      /* eslint-enable prefer-rest-params */\n    }\n\n    if (style1 && style2) {\n      return [style1, style2];\n    } else {\n      return style1 || style2;\n    }\n  },\n  create(styles: Object): {| [key: string]: number |} {\n    const result = {};\n    Object.keys(styles).forEach((key) => {\n      if (process.env.NODE_ENV !== 'production') {\n        validate(key, styles);\n      }\n      const id = styles[key] && ReactNativePropRegistry.register(styles[key]);\n      result[key] = id;\n    });\n    return result;\n  },\n  flatten: flattenStyle,\n\n  // `hairlineWidth` is not implemented using screen density as browsers may\n  // round sub-pixel values down to `0`, causing the line not to be rendered.\n  hairlineWidth: 1\n};\n\nexport default StyleSheet;\n"]},"metadata":{},"sourceType":"script"}