{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PieChart = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeCanvas = _interopRequireDefault(require(\"react-native-canvas\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\node_modules\\\\react-native-gifted-charts\\\\src\\\\PieChart\\\\index.tsx\";\n\nvar pi = Math.PI;\n\nvar PieChart = function PieChart(props) {\n  var data = props.data,\n      isThreeD = props.isThreeD;\n  var radius = props.radius || 120;\n  var shadowWidth = props.shadowWidth || 4 * radius / 3;\n  var backgroundColor = props.backgroundColor || 'white';\n  var shadowColor = props.shadowColor || 'lightgray';\n  var total = 0;\n  var shadow = props.shadow || false;\n  var donut = props.donut || false;\n  var innerRadius = props.innerRadius || radius / 2;\n  var innerCircleColor = props.innerCircleColor || 'white';\n  var innerCircleBorderWidth = props.innerCircleBorderWidth || (props.innerCircleBorderColor ? 5 : 0);\n  var innerCircleBorderColor = props.innerCircleBorderColor || 'gray';\n  var shiftInnerCenterX = props.shiftInnerCenterX || 0;\n  var shiftInnerCenterY = props.shiftInnerCenterY || 0;\n  var strokeWidth = props.strokeWidth || 0;\n  var strokeColor = props.strokeColor || (strokeWidth ? 'gray' : 'transparent');\n  var showText = props.showText || false;\n  var textColor = props.textColor || '';\n  var textSize = props.textSize ? Math.min(props.textSize, radius / 5) : 16;\n  var tilt = props.tilt ? Math.min(props.tilt, 1) : props.isThreeD ? 0.5 : 1;\n  var showTextBackground = props.showTextBackground || false;\n  var showValuesAsLabels = props.showValuesAsLabels || false;\n  var fontStyleList = ['normal', 'italic', 'oblique'];\n  var fontWeightList = ['normal', 'bold', 'bolder', 'lighter', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n  var isDataShifted = false;\n  data.forEach(function (item) {\n    total += item.value;\n\n    if (item.shiftX || item.shiftY) {\n      isDataShifted = true;\n    }\n  });\n  var canvasHeight = isThreeD ? radius * 2.5 + 60 : radius * 2 + 60;\n  var canvasWidth = radius * 2 + 60;\n\n  var handleCanvas = function _callee(canvas) {\n    var ctx, initialValue, i, angleSum, colors, semiSum, yy, xx;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (canvas) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 2:\n            if (isThreeD) {\n              canvas.height = canvasHeight;\n            } else {\n              canvas.height = canvasHeight;\n            }\n\n            canvas.width = canvasWidth;\n            ctx = canvas.getContext('2d');\n            ctx.lineWidth = strokeWidth;\n            ctx.strokeStyle = strokeColor;\n            initialValue = 30;\n\n            if (isThreeD && shadow) {\n              ctx.beginPath();\n              ctx.moveTo(initialValue, radius + initialValue);\n              ctx.lineTo(initialValue, shadowWidth + initialValue);\n              ctx.arc(radius + initialValue, shadowWidth + initialValue, radius, pi, 0, true);\n              ctx.lineTo(2 * radius + initialValue, radius + initialValue);\n              ctx.fillStyle = shadowColor;\n              ctx.fill();\n            }\n\n            i = 0, angleSum = 0;\n            colors = ['cyan', 'green', 'orange', 'purple', 'yellow', 'red', 'blue', 'pink'];\n            i = 0;\n            data.forEach(function (dataItem) {\n              if (!dataItem.value) {\n                return;\n              }\n\n              var shiftX = dataItem.shiftX || 0;\n              var shiftY = dataItem.shiftY || 0;\n              var shiftTextX = dataItem.shiftTextX || 0;\n              var shiftTextY = dataItem.shiftTextY || 0;\n\n              if (isThreeD && shadow) {\n                ctx.beginPath();\n                ctx.moveTo(radius + initialValue + shiftX, radius + initialValue + shiftY);\n                ctx.arc(radius + initialValue + shiftX, radius + initialValue + shiftY, radius, angleSum, angleSum + 2 * pi * dataItem.value / total);\n                ctx.stroke();\n                ctx.lineTo(radius + initialValue + shiftX, radius + initialValue + shiftY);\n                ctx.fillStyle = backgroundColor;\n                ctx.fill();\n                ctx.moveTo(radius + initialValue + shiftX, radius + initialValue + shiftY);\n                ctx.lineTo(radius + initialValue + shiftX, radius + initialValue + shiftY);\n                ctx.stroke();\n              }\n\n              ctx.beginPath();\n              ctx.moveTo(radius + initialValue + shiftX, radius + initialValue + shiftY);\n              ctx.arc(radius + initialValue + shiftX, radius + initialValue + shiftY, radius, angleSum, angleSum + 2 * pi * dataItem.value / total);\n              ctx.stroke();\n              ctx.lineTo(radius + initialValue + shiftX, radius + initialValue + shiftY);\n              ctx.fillStyle = dataItem.color || colors[i++ % 8];\n              ctx.fill();\n              ctx.moveTo(radius + initialValue + shiftX, radius + initialValue + shiftY);\n              ctx.lineTo(radius + initialValue + shiftX, radius + initialValue + shiftY);\n              ctx.stroke();\n\n              if (showText) {\n                var fontSize, font;\n\n                if (dataItem.textSize) {\n                  fontSize = Math.min(dataItem.textSize, radius / 5);\n                } else if (props.textSize) {\n                  fontSize = Math.min(props.textSize, radius / 5);\n                } else {\n                  fontSize = 16;\n                }\n\n                if (dataItem.font) {\n                  font = dataItem.font;\n                } else if (props.font) {\n                  font = props.font;\n                } else {\n                  font = 'Comic Sans MS';\n                }\n\n                var fontText = fontSize + 'px ' + font;\n\n                if (dataItem.fontWeight && fontWeightList.includes(dataItem.fontWeight)) {\n                  fontText = dataItem.fontWeight + ' ' + fontText;\n                } else if (props.fontWeight && fontWeightList.includes(props.fontWeight)) {\n                  fontText = props.fontWeight + ' ' + fontText;\n                }\n\n                if (dataItem.fontStyle && fontStyleList.includes(dataItem.fontStyle)) {\n                  fontText = dataItem.fontStyle + ' ' + fontText;\n                } else if (props.fontStyle && fontStyleList.includes(props.fontStyle)) {\n                  fontText = props.fontStyle + ' ' + fontText;\n                }\n\n                ctx.font = fontText;\n                semiSum = angleSum + pi * dataItem.value / total;\n                yy = Math.sin(semiSum) * radius + (radius + initialValue + shiftX);\n                xx = Math.cos(semiSum) * radius + (radius + initialValue + shiftY);\n\n                if (semiSum > 0 && semiSum <= pi / 2) {\n                  xx -= 40;\n                  yy -= 10;\n                } else if (semiSum > pi / 2 && semiSum <= pi) {\n                  xx += 10;\n                  yy -= 10;\n                } else if (semiSum > pi && semiSum <= 1.5 * pi) {\n                  xx += 10;\n                  yy += 24;\n                } else {\n                  xx -= 40;\n                  yy += 24;\n                }\n\n                if (showTextBackground && (dataItem.text || showValuesAsLabels)) {\n                  var textBackgroundX = xx + (props.textBackgroundRadius || dataItem.textBackgroundRadius || textSize) / 2;\n                  var textBackgroundY = yy - (props.textBackgroundRadius || dataItem.textBackgroundRadius || textSize) / 3;\n                  ctx.beginPath();\n                  ctx.arc(textBackgroundX, textBackgroundY, props.textBackgroundRadius || dataItem.textBackgroundRadius || textSize, 0, 2 * pi, false);\n                  ctx.fillStyle = props.textBackgroundColor || dataItem.textBackgroundColor || 'white';\n                  ctx.fill();\n                }\n\n                xx += shiftTextX;\n                yy += shiftTextY;\n                ctx.fillStyle = dataItem.textColor || textColor || colors[i++ % 8];\n                var labelText = dataItem.text || '';\n\n                if (showValuesAsLabels && !labelText) {\n                  labelText = dataItem.value.toString();\n                }\n\n                ctx.fillText(labelText, xx, yy);\n              }\n\n              angleSum += 2 * pi * dataItem.value / total;\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return total === 0 ? null : _react.default.createElement(_reactNative.View, {\n    style: {\n      transform: [{\n        scaleY: tilt\n      }]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNativeCanvas.default, {\n    ref: handleCanvas,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }\n  }), (props.centerLabelComponent || donut && !isDataShifted) && _react.default.createElement(_reactNative.View, {\n    style: [{\n      height: innerRadius * 2,\n      width: innerRadius * 2,\n      borderRadius: innerRadius,\n      position: 'absolute',\n      alignSelf: 'center',\n      left: canvasWidth / 2 - innerRadius + shiftInnerCenterX,\n      top: canvasHeight / 2 - innerRadius * (isThreeD ? 1.5 : 1) + shiftInnerCenterY,\n      borderWidth: innerCircleBorderWidth,\n      borderColor: innerCircleBorderColor,\n      backgroundColor: innerCircleColor,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }, isThreeD && {\n      borderTopWidth: innerCircleBorderWidth * 5,\n      borderLeftWidth: shiftInnerCenterX ? innerCircleBorderWidth * 2 : innerCircleBorderWidth\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }\n  }, props.centerLabelComponent ? props.centerLabelComponent() : null));\n};\n\nexports.PieChart = PieChart;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/node_modules/react-native-gifted-charts/src/PieChart/index.tsx"],"names":["pi","Math","PI","PieChart","props","data","isThreeD","radius","shadowWidth","backgroundColor","shadowColor","total","shadow","donut","innerRadius","innerCircleColor","innerCircleBorderWidth","innerCircleBorderColor","shiftInnerCenterX","shiftInnerCenterY","strokeWidth","strokeColor","showText","textColor","textSize","min","tilt","showTextBackground","showValuesAsLabels","fontStyleList","fontWeightList","isDataShifted","forEach","item","value","shiftX","shiftY","canvasHeight","canvasWidth","handleCanvas","canvas","height","width","ctx","getContext","lineWidth","strokeStyle","initialValue","beginPath","moveTo","lineTo","arc","fillStyle","fill","i","angleSum","colors","dataItem","shiftTextX","shiftTextY","stroke","color","fontSize","font","fontText","fontWeight","includes","fontStyle","semiSum","yy","sin","xx","cos","text","textBackgroundX","textBackgroundRadius","textBackgroundY","textBackgroundColor","labelText","toString","fillText","transform","scaleY","centerLabelComponent","borderRadius","position","alignSelf","left","top","borderWidth","borderColor","justifyContent","alignItems","borderTopWidth","borderLeftWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {ColorValue, View} from 'react-native';\nimport Canvas from 'react-native-canvas';\n\nconst pi = Math.PI;\n\ntype propTypes = {\n  radius?: number;\n  isThreeD?: Boolean;\n  donut?: Boolean;\n  innerRadius?: number;\n  shadow?: Boolean;\n  innerCircleColor?: ColorValue;\n  innerCircleBorderWidth?: number;\n  innerCircleBorderColor?: ColorValue;\n  shiftInnerCenterX?: number;\n  shiftInnerCenterY?: number;\n  shadowColor?: string;\n  shadowWidth?: number;\n  strokeWidth?: number;\n  strokeColor?: string;\n  backgroundColor?: string;\n  data: Array<itemType>;\n\n  showText?: Boolean;\n  textColor?: string;\n  textSize?: number;\n  fontStyle?: string;\n  fontWeight?: string;\n  font?: string;\n  showTextBackground?: Boolean;\n  textBackgroundColor?: string;\n  textBackgroundRadius?: number;\n  showValuesAsLabels?: Boolean;\n\n  centerLabelComponent?: Function;\n  tilt?: number;\n};\ntype itemType = {\n  value: number;\n  shiftX?: number;\n  shiftY?: number;\n  color?: string;\n  text?: string;\n  textColor?: string;\n  textSize?: number;\n  fontStyle?: string;\n  fontWeight?: string;\n  font?: string;\n  textBackgroundColor?: string;\n  textBackgroundRadius?: number;\n  shiftTextX?: number;\n  shiftTextY?: number;\n};\nexport const PieChart = (props: propTypes) => {\n  const {data, isThreeD} = props;\n  const radius = props.radius || 120;\n  const shadowWidth = props.shadowWidth || (4 * radius) / 3;\n  const backgroundColor = props.backgroundColor || 'white';\n  const shadowColor = props.shadowColor || 'lightgray';\n  let total = 0;\n  const shadow = props.shadow || false;\n  const donut = props.donut || false;\n  const innerRadius = props.innerRadius || radius / 2;\n  const innerCircleColor = props.innerCircleColor || 'white';\n  const innerCircleBorderWidth =\n    props.innerCircleBorderWidth || (props.innerCircleBorderColor ? 5 : 0);\n  const innerCircleBorderColor = props.innerCircleBorderColor || 'gray';\n  const shiftInnerCenterX = props.shiftInnerCenterX || 0;\n  const shiftInnerCenterY = props.shiftInnerCenterY || 0;\n  const strokeWidth = props.strokeWidth || 0;\n  const strokeColor =\n    props.strokeColor || (strokeWidth ? 'gray' : 'transparent');\n\n  const showText = props.showText || false;\n  const textColor = props.textColor || '';\n  const textSize = props.textSize ? Math.min(props.textSize, radius / 5) : 16;\n  const tilt = props.tilt ? Math.min(props.tilt, 1) : props.isThreeD ? 0.5 : 1;\n\n  const showTextBackground = props.showTextBackground || false;\n  const showValuesAsLabels = props.showValuesAsLabels || false;\n\n  const fontStyleList = ['normal', 'italic', 'oblique'];\n  const fontWeightList = [\n    'normal',\n    'bold',\n    'bolder',\n    'lighter',\n    '100',\n    '200',\n    '300',\n    '400',\n    '500',\n    '600',\n    '700',\n    '800',\n    '900',\n  ];\n\n  let isDataShifted = false;\n  data.forEach((item: any) => {\n    total += item.value;\n    if (item.shiftX || item.shiftY) {\n      isDataShifted = true;\n    }\n  });\n\n  const canvasHeight = isThreeD ? radius * 2.5 + 60 : radius * 2 + 60;\n  const canvasWidth = radius * 2 + 60;\n\n  const handleCanvas = async (canvas: Canvas) => {\n    if (!canvas) {\n      return null;\n    }\n\n    if (isThreeD) {\n      canvas.height = canvasHeight;\n    } else {\n      canvas.height = canvasHeight;\n    }\n    canvas.width = canvasWidth;\n    const ctx = canvas.getContext('2d');\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n    const initialValue = 30;\n\n    /******************       SHADOW        ***************/\n    if (isThreeD && shadow) {\n      ctx.beginPath();\n      ctx.moveTo(initialValue, radius + initialValue);\n      ctx.lineTo(initialValue, shadowWidth + initialValue);\n      ctx.arc(\n        radius + initialValue,\n        shadowWidth + initialValue,\n        radius,\n        pi,\n        0,\n        true,\n      );\n      ctx.lineTo(2 * radius + initialValue, radius + initialValue);\n      ctx.fillStyle = shadowColor;\n      ctx.fill();\n    }\n    /******************************************************/\n\n    let i = 0,\n      angleSum = 0;\n    let colors = [\n      'cyan',\n      'green',\n      'orange',\n      'purple',\n      'yellow',\n      'red',\n      'blue',\n      'pink',\n    ];\n\n    i = 0;\n    let semiSum, yy, xx;\n    data.forEach(dataItem => {\n      if (!dataItem.value) {\n        return;\n      }\n      const shiftX = dataItem.shiftX || 0;\n      const shiftY = dataItem.shiftY || 0;\n\n      const shiftTextX = dataItem.shiftTextX || 0;\n      const shiftTextY = dataItem.shiftTextY || 0;\n\n      /****************     This section is to prevent the shadow from         ***************/\n      /****************     being visible inside the chart content if          ***************/\n      /****************     the color of sections is transparent               ***************/\n\n      if (isThreeD && shadow) {\n        ctx.beginPath();\n\n        ctx.moveTo(\n          radius + initialValue + shiftX,\n          radius + initialValue + shiftY,\n        );\n        ctx.arc(\n          radius + initialValue + shiftX,\n          radius + initialValue + shiftY,\n          radius,\n          angleSum,\n          angleSum + (2 * pi * dataItem.value) / total,\n        );\n        ctx.stroke();\n        ctx.lineTo(\n          radius + initialValue + shiftX,\n          radius + initialValue + shiftY,\n        );\n\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n\n        // Stroke at the end again\n\n        ctx.moveTo(\n          radius + initialValue + shiftX,\n          radius + initialValue + shiftY,\n        );\n        ctx.lineTo(\n          radius + initialValue + shiftX,\n          radius + initialValue + shiftY,\n        );\n        ctx.stroke();\n      }\n\n      /*************************************************************************************/\n      /*************************************************************************************/\n\n      ctx.beginPath();\n\n      ctx.moveTo(\n        radius + initialValue + shiftX,\n        radius + initialValue + shiftY,\n      );\n      ctx.arc(\n        radius + initialValue + shiftX,\n        radius + initialValue + shiftY,\n        radius,\n        angleSum,\n        angleSum + (2 * pi * dataItem.value) / total,\n      );\n      ctx.stroke();\n      ctx.lineTo(\n        radius + initialValue + shiftX,\n        radius + initialValue + shiftY,\n      );\n\n      ctx.fillStyle = dataItem.color || colors[i++ % 8];\n      ctx.fill();\n\n      // Stroke at the end again\n\n      ctx.moveTo(\n        radius + initialValue + shiftX,\n        radius + initialValue + shiftY,\n      );\n      ctx.lineTo(\n        radius + initialValue + shiftX,\n        radius + initialValue + shiftY,\n      );\n      ctx.stroke();\n\n      /*************************        Displaying Text Labels      **********************/\n\n      if (showText) {\n        let fontSize, font;\n\n        /***************        Font size      **************/\n        if (dataItem.textSize) {\n          fontSize = Math.min(dataItem.textSize, radius / 5);\n        } else if (props.textSize) {\n          fontSize = Math.min(props.textSize, radius / 5);\n        } else {\n          fontSize = 16;\n        }\n\n        /***************        Font family      **************/\n        if (dataItem.font) {\n          font = dataItem.font;\n        } else if (props.font) {\n          font = props.font;\n        } else {\n          font = 'Comic Sans MS';\n        }\n\n        let fontText = fontSize + 'px ' + font;\n\n        /***************        Font weight      **************/\n        if (\n          dataItem.fontWeight &&\n          fontWeightList.includes(dataItem.fontWeight)\n        ) {\n          fontText = dataItem.fontWeight + ' ' + fontText;\n        } else if (\n          props.fontWeight &&\n          fontWeightList.includes(props.fontWeight)\n        ) {\n          fontText = props.fontWeight + ' ' + fontText;\n        }\n\n        /***************        Font style      **************/\n        if (dataItem.fontStyle && fontStyleList.includes(dataItem.fontStyle)) {\n          fontText = dataItem.fontStyle + ' ' + fontText;\n        } else if (props.fontStyle && fontStyleList.includes(props.fontStyle)) {\n          fontText = props.fontStyle + ' ' + fontText;\n        }\n\n        ctx.font = fontText;\n        semiSum = angleSum + (pi * dataItem.value) / total;\n        yy = Math.sin(semiSum) * radius + (radius + initialValue + shiftX);\n        xx = Math.cos(semiSum) * radius + (radius + initialValue + shiftY);\n\n        // console.log('semisum==>>', semiSum);\n        // console.log('sin(semisum)==>>', Math.sin(semiSum));\n        if (semiSum > 0 && semiSum <= pi / 2) {\n          xx -= 40;\n          yy -= 10;\n        } else if (semiSum > pi / 2 && semiSum <= pi) {\n          xx += 10;\n          yy -= 10;\n        } else if (semiSum > pi && semiSum <= 1.5 * pi) {\n          xx += 10;\n          yy += 24;\n        } else {\n          xx -= 40;\n          yy += 24;\n        }\n\n        if (showTextBackground && (dataItem.text || showValuesAsLabels)) {\n          let textBackgroundX =\n            xx +\n            (props.textBackgroundRadius ||\n              dataItem.textBackgroundRadius ||\n              textSize) /\n              2;\n          let textBackgroundY =\n            yy -\n            (props.textBackgroundRadius ||\n              dataItem.textBackgroundRadius ||\n              textSize) /\n              3;\n          ctx.beginPath();\n          ctx.arc(\n            textBackgroundX,\n            textBackgroundY,\n            props.textBackgroundRadius ||\n              dataItem.textBackgroundRadius ||\n              textSize,\n            0,\n            2 * pi,\n            false,\n          );\n          ctx.fillStyle =\n            props.textBackgroundColor ||\n            dataItem.textBackgroundColor ||\n            'white';\n          ctx.fill();\n        }\n\n        xx += shiftTextX;\n        yy += shiftTextY;\n\n        ctx.fillStyle = dataItem.textColor || textColor || colors[i++ % 8];\n        let labelText = dataItem.text || '';\n        if (showValuesAsLabels && !labelText) {\n          labelText = dataItem.value.toString();\n        }\n        ctx.fillText(labelText, xx, yy);\n      }\n\n      /****************************************************************************************/\n\n      angleSum += (2 * pi * dataItem.value) / total;\n    });\n  };\n\n  return total === 0 ? null : (\n    <View style={{transform: [{scaleY: tilt}]}}>\n      <Canvas ref={handleCanvas} />\n      {(props.centerLabelComponent || (donut && !isDataShifted)) && (\n        <View\n          style={[\n            {\n              height: innerRadius * 2,\n              width: innerRadius * 2,\n              borderRadius: innerRadius,\n              position: 'absolute',\n              alignSelf: 'center',\n              left: canvasWidth / 2 - innerRadius + shiftInnerCenterX,\n              top:\n                canvasHeight / 2 -\n                innerRadius * (isThreeD ? 1.5 : 1) +\n                shiftInnerCenterY,\n              borderWidth: innerCircleBorderWidth,\n              borderColor: innerCircleBorderColor,\n              backgroundColor: innerCircleColor,\n              justifyContent: 'center',\n              alignItems: 'center',\n            },\n            isThreeD && {\n              borderTopWidth: innerCircleBorderWidth * 5,\n              borderLeftWidth: shiftInnerCenterX\n                ? innerCircleBorderWidth * 2\n                : innerCircleBorderWidth,\n            },\n          ]}>\n          {props.centerLabelComponent ? props.centerLabelComponent() : null}\n        </View>\n      )}\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"script"}