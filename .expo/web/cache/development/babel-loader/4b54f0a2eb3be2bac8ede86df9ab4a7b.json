{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _reactNativeTouchId = _interopRequireDefault(require(\"react-native-touch-id\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\src\\\\screens\\\\Fingerprint.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar CocoFingerprintImage = '../../assets/images/coco-fingerprint.png';\nvar BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\nvar FingerprintScanIcon = '../../assets/images/Fingerprint-scan.png';\n\nvar styles = _reactNative.StyleSheet.create({\n  fornaxBox: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  txnText: {\n    marginLeft: 17,\n    fontSize: 16,\n    color: '#ffffff',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium',\n    marginTop: -5\n  },\n  textStyle: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center'\n  },\n  backIcon: {\n    marginLeft: 26,\n    marginTop: 32\n  },\n  fornaxCenterIcon: {\n    marginBottom: 142\n  },\n  fornaxIcon: {\n    marginBottom: 30\n  },\n  fornaxInnerBox: {\n    flex: 0,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('5'),\n    marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('4')\n  }\n});\n\nvar Fingerprint = function Fingerprint(props) {\n  var navigate = props.navigation.navigate;\n  var optionalConfigObject = {\n    title: 'Fingerprint',\n    imageColor: '#363853',\n    imageErrorColor: '#ff0000',\n    sensorDescription: 'Put your finger on the fingerprint scanner',\n    sensorErrorDescription: 'Failed',\n    cancelText: 'Cancel',\n    fallbackLabel: 'Show Passcode',\n    unifiedErrors: false,\n    passcodeFallback: false\n  };\n\n  var authenticate = function authenticate() {\n    _reactNativeTouchId.default.authenticate('Open your FornaxWallet', optionalConfigObject).then(function (success) {\n      console.log(success, \"success\");\n    }).catch(function (error) {\n      console.log(error, \"error\");\n    });\n  };\n\n  (0, _react.useEffect)(function () {\n    authenticate();\n  }, []);\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('Dashboard');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.backIcon,\n    source: require(BackIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxInnerBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.fornaxIcon,\n    source: require('../../assets/images/Fingerprint-scan.png'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Fingerprint\")), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Pressable, {\n    onPress: authenticate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.fornaxCenterIcon,\n    source: require(FingerprintScanIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.Text, {\n    style: styles.txnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Put your finger\"), _react.default.createElement(_reactNative.Text, {\n    style: styles.txnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"on the fingerprint scanner\")));\n};\n\nvar _default = Fingerprint;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/screens/Fingerprint.tsx"],"names":["CocoFingerprintImage","BackIcon","FingerprintScanIcon","styles","StyleSheet","create","fornaxBox","flex","flexDirection","alignItems","justifyContent","txnText","marginLeft","fontSize","color","textAlign","fontFamily","marginTop","textStyle","lineHeight","backIcon","fornaxCenterIcon","marginBottom","fornaxIcon","fornaxInnerBox","Fingerprint","props","navigate","navigation","optionalConfigObject","title","imageColor","imageErrorColor","sensorDescription","sensorErrorDescription","cancelText","fallbackLabel","unifiedErrors","passcodeFallback","authenticate","TouchID","then","success","console","log","catch","error","require"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Alert, Image, Pressable, StyleSheet, Text, TouchableHighlight, View } from 'react-native';\r\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nimport TouchID from 'react-native-touch-id';\r\n\r\nconst CocoFingerprintImage = '../../assets/images/coco-fingerprint.png';\r\nconst BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\r\nconst FingerprintScanIcon = '../../assets/images/Fingerprint-scan.png';\r\nconst styles = StyleSheet.create({\r\n  fornaxBox: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  txnText: {\r\n    marginLeft: 17,\r\n    fontSize: 16,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n    marginTop: -5,\r\n  },\r\n  textStyle: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n  },\r\n  backIcon: {\r\n    marginLeft: 26,\r\n    marginTop: 32,\r\n  },\r\n  fornaxCenterIcon: {\r\n    marginBottom: 142,\r\n  },\r\n  fornaxIcon: {\r\n    marginBottom: 30,\r\n  },\r\n  fornaxInnerBox: {\r\n    flex: 0,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    marginTop: hp('5'),\r\n    marginBottom: hp('4'),\r\n  },\r\n});\r\n\r\nconst Fingerprint = (props: any) => {\r\n  const navigate = props.navigation.navigate;\r\n  const optionalConfigObject = {\r\n    title: 'Fingerprint', // Android\r\n    imageColor: '#363853', // Android\r\n    imageErrorColor: '#ff0000', // Android\r\n    sensorDescription: 'Put your finger on the fingerprint scanner', // Android\r\n    sensorErrorDescription: 'Failed', // Android\r\n    cancelText: 'Cancel', // Android\r\n    fallbackLabel: 'Show Passcode', // iOS (if empty, then label is hidden)\r\n    unifiedErrors: false, // use unified error messages (default false)\r\n    passcodeFallback: false, \r\n  }\r\n  \r\n  const authenticate = () => {\r\n    TouchID.authenticate('Open your FornaxWallet', optionalConfigObject)\r\n      .then((success: any) => {\r\n        console.log(success, \"success\");\r\n        // Success code\r\n      })\r\n      .catch((error: any) => {\r\n        console.log(error, \"error\");\r\n        // Failure code\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    authenticate();\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <Pressable onPress={() => navigate('Dashboard')}>\r\n          <Image style={styles.backIcon} source={require(BackIcon)} />\r\n        </Pressable>\r\n      </View>\r\n      <View style={styles.fornaxInnerBox}>\r\n        <Image\r\n          style={styles.fornaxIcon}\r\n          source={require('../../assets/images/Fingerprint-scan.png')}\r\n        />\r\n        <Text style={styles.textStyle}>Fingerprint</Text>\r\n      </View>\r\n      <View style={styles.fornaxBox}>\r\n        <Pressable onPress={authenticate}>\r\n          <Image\r\n            style={styles.fornaxCenterIcon}\r\n            source={require(FingerprintScanIcon)}\r\n          />\r\n        </Pressable>\r\n        <Text style={styles.txnText}>Put your finger</Text>\r\n        <Text style={styles.txnText}>on the fingerprint scanner</Text>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fingerprint;\r\n"]},"metadata":{},"sourceType":"script"}