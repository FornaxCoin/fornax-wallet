{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Modal = _interopRequireDefault(require(\"../components/Modal\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\src\\\\screens\\\\Signup.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar sendImg = '../../assets/images/Iconly_Curved_Send.png';\n\nvar styles = _reactNative.StyleSheet.create({\n  fornaxBox: {\n    flex: 1,\n    justifyContent: 'center',\n    alignSelf: 'center',\n    flexDirection: 'column',\n    maxWidth: 360\n  },\n  createAccText: {\n    fontSize: 22,\n    fontFamily: 'Quicksand-Medium',\n    textAlign: 'center',\n    color: '#ffffff',\n    lineHeight: 35\n  },\n  inputBox: {\n    flexDirection: 'row',\n    marginVertical: 13\n  },\n  inputLabel: {\n    fontSize: 16,\n    color: '#b27f29',\n    marginTop: 8,\n    width: 80,\n    fontFamily: 'Quicksand-Medium'\n  },\n  input: {\n    height: 40,\n    borderBottomWidth: 2,\n    borderBottomColor: '#ffffff',\n    fontFamily: 'Quicksand-Medium',\n    color: '#ffffff',\n    paddingHorizontal: 10,\n    fontSize: 16,\n    width: 200,\n    marginLeft: 30\n  },\n  fornaxText: {\n    fontSize: 48,\n    color: '#b27f29',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Bold'\n  },\n  loginTextbox: {\n    fontSize: 14,\n    color: '#bdbdbd',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium',\n    flexDirection: 'row',\n    alignSelf: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n    marginTop: 10\n  },\n  loginText: {\n    fontSize: 14,\n    color: '#81c2ff',\n    fontFamily: 'Quicksand-Medium'\n  },\n  buttonClose: {\n    backgroundColor: '#b27f29',\n    width: 240,\n    alignSelf: 'center',\n    marginTop: 50,\n    marginBottom: 10\n  },\n  button: {\n    borderRadius: 20,\n    paddingVertical: 20\n  },\n  textStyle: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center'\n  },\n  verifyModalBox: {\n    alignContent: 'center',\n    alignSelf: 'center',\n    textAlign: 'center'\n  },\n  topImg: {\n    height: 42,\n    width: 52,\n    alignSelf: 'center',\n    marginTop: 30\n  },\n  verifyText: {\n    fontSize: 16,\n    fontFamily: 'Quicksand-Medium',\n    textAlign: 'center',\n    color: '#000000',\n    lineHeight: 25,\n    marginVertical: 30\n  },\n  buttonCode: {\n    backgroundColor: '#363853',\n    width: 170,\n    alignSelf: 'center',\n    marginTop: 50,\n    marginBottom: 10,\n    borderRadius: 20,\n    paddingVertical: 20\n  },\n  codeText: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center'\n  }\n});\n\nvar VerifyModal = function VerifyModal(_ref) {\n  var isModalVisible = _ref.isModalVisible,\n      setModalVisible = _ref.setModalVisible;\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    style: styles.verifyModalBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    source: require(sendImg),\n    style: styles.topImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: styles.verifyText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Verify your account, we have sent a verification code to your mobile number\"), _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return setModalVisible(!isModalVisible);\n    },\n    style: styles.buttonCode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.codeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Send Code\"))));\n};\n\nvar SignUp = function SignUp() {\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = (0, _react.useState)({\n    username: '',\n    email: '',\n    password: ''\n  }),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Modal.default, {\n    isModalVisible: isModalVisible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(VerifyModal, {\n    isModalVisible: isModalVisible,\n    setModalVisible: setModalVisible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: {\n      marginBottom: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.createAccText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, \"Create an account,\"), _react.default.createElement(_reactNative.Text, {\n    style: styles.createAccText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"and enjoy transactions in an easier way\")), _react.default.createElement(_reactNative.View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.inputLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"Username\"), _react.default.createElement(_reactNative.TextInput, {\n    style: styles.input,\n    placeholder: \"username\",\n    placeholderTextColor: \"#bdbdbd\",\n    onChangeText: function onChangeText(e) {\n      return setUser((0, _extends2.default)({}, user, {\n        username: e\n      }));\n    },\n    value: user.username,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.inputLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, \"Email\"), _react.default.createElement(_reactNative.TextInput, {\n    style: styles.input,\n    placeholder: \"example@mail.com\",\n    placeholderTextColor: \"#bdbdbd\",\n    onChangeText: function onChangeText(e) {\n      return setUser((0, _extends2.default)({}, user, {\n        email: e\n      }));\n    },\n    value: user.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.inputLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Password\"), _react.default.createElement(_reactNative.TextInput, {\n    style: styles.input,\n    placeholder: \"xxxxxxxx\",\n    placeholderTextColor: \"#bdbdbd\",\n    onChangeText: function onChangeText(e) {\n      return setUser((0, _extends2.default)({}, user, {\n        password: e\n      }));\n    },\n    value: user.password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return setModalVisible(!isModalVisible);\n    },\n    style: [styles.button, styles.buttonClose],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, \"Register\")), _react.default.createElement(_reactNative.Text, {\n    style: styles.loginTextbox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, \"You have account?\", _react.default.createElement(_reactNative.Pressable, {\n    style: {\n      paddingTop: 6\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, \" Login\")))));\n};\n\nvar _default = SignUp;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/screens/Signup.tsx"],"names":["sendImg","styles","StyleSheet","create","fornaxBox","flex","justifyContent","alignSelf","flexDirection","maxWidth","createAccText","fontSize","fontFamily","textAlign","color","lineHeight","inputBox","marginVertical","inputLabel","marginTop","width","input","height","borderBottomWidth","borderBottomColor","paddingHorizontal","marginLeft","fornaxText","loginTextbox","alignItems","alignContent","loginText","buttonClose","backgroundColor","marginBottom","button","borderRadius","paddingVertical","textStyle","verifyModalBox","topImg","verifyText","buttonCode","codeText","VerifyModal","isModalVisible","setModalVisible","require","SignUp","username","email","password","user","setUser","e","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Image,\r\n  Pressable,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n} from 'react-native';\r\nimport PhoneModal from '../components/Modal';\r\nconst sendImg = '../../assets/images/Iconly_Curved_Send.png';\r\n\r\nconst styles = StyleSheet.create({\r\n  fornaxBox: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    flexDirection: 'column',\r\n    maxWidth: 360,\r\n  },\r\n  createAccText: {\r\n    fontSize: 22,\r\n    fontFamily: 'Quicksand-Medium',\r\n    textAlign: 'center',\r\n    color: '#ffffff',\r\n    lineHeight: 35,\r\n  },\r\n  inputBox: {\r\n    flexDirection: 'row',\r\n    marginVertical: 13,\r\n  },\r\n  inputLabel: {\r\n    fontSize: 16,\r\n    color: '#b27f29',\r\n    marginTop: 8,\r\n    width: 80,\r\n    fontFamily: 'Quicksand-Medium',\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: '#ffffff',\r\n    fontFamily: 'Quicksand-Medium',\r\n    color: '#ffffff',\r\n    paddingHorizontal: 10,\r\n    fontSize: 16,\r\n    width: 200,\r\n    marginLeft: 30,\r\n  },\r\n  fornaxText: {\r\n    fontSize: 48,\r\n    color: '#b27f29',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Bold',\r\n  },\r\n  loginTextbox: {\r\n    fontSize: 14,\r\n    color: '#bdbdbd',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n    flexDirection: 'row',\r\n    alignSelf: 'center',\r\n    alignItems: 'center',\r\n    alignContent: 'center',\r\n    marginTop: 10,\r\n  },\r\n  loginText: {\r\n    fontSize: 14,\r\n    color: '#81c2ff',\r\n    fontFamily: 'Quicksand-Medium',\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: '#b27f29',\r\n    width: 240,\r\n    alignSelf: 'center',\r\n    marginTop: 50,\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    paddingVertical: 20,\r\n  },\r\n  textStyle: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n  },\r\n  verifyModalBox: {\r\n    alignContent: 'center',\r\n    alignSelf: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  topImg: {\r\n    height: 42,\r\n    width: 52,\r\n    alignSelf: 'center',\r\n    marginTop: 30,\r\n  },\r\n  verifyText: {\r\n    fontSize: 16,\r\n    fontFamily: 'Quicksand-Medium',\r\n    textAlign: 'center',\r\n    color: '#000000',\r\n    lineHeight: 25,\r\n    marginVertical: 30,\r\n  },\r\n  buttonCode: {\r\n    backgroundColor: '#363853',\r\n    width: 170,\r\n    alignSelf: 'center',\r\n    marginTop: 50,\r\n    marginBottom: 10,\r\n    borderRadius: 20,\r\n    paddingVertical: 20,\r\n  },\r\n  codeText: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nconst VerifyModal = ({ isModalVisible, setModalVisible }: any) => {\r\n  return (\r\n    <>\r\n      <View style={styles.verifyModalBox}>\r\n        <Image source={require(sendImg)} style={styles.topImg} />\r\n        <Text style={styles.verifyText}>\r\n          Verify your account, we have sent a verification code to your mobile\r\n          number\r\n        </Text>\r\n        <Pressable\r\n          onPress={() => setModalVisible(!isModalVisible)}\r\n          style={styles.buttonCode}>\r\n          <Text style={styles.codeText}>Send Code</Text>\r\n        </Pressable>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SignUp = () => {\r\n  const [isModalVisible, setModalVisible] = useState(true);\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.fornaxBox}>\r\n        <PhoneModal isModalVisible={isModalVisible}>\r\n          <VerifyModal\r\n            isModalVisible={isModalVisible}\r\n            setModalVisible={setModalVisible}\r\n          />\r\n        </PhoneModal>\r\n        <View style={{ marginBottom: 50 }}>\r\n          <Text style={styles.createAccText}>Create an account,</Text>\r\n          <Text style={styles.createAccText}>\r\n            and enjoy transactions in an easier way\r\n          </Text>\r\n        </View>\r\n        <View style={styles.inputBox}>\r\n          <Text style={styles.inputLabel}>Username</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"username\"\r\n            placeholderTextColor=\"#bdbdbd\"\r\n            onChangeText={e => setUser({ ...user, username: e })}\r\n            value={user.username}\r\n          />\r\n        </View>\r\n        <View style={styles.inputBox}>\r\n          <Text style={styles.inputLabel}>Email</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"example@mail.com\"\r\n            placeholderTextColor=\"#bdbdbd\"\r\n            onChangeText={e => setUser({ ...user, email: e })}\r\n            value={user.email}\r\n          />\r\n        </View>\r\n        <View style={styles.inputBox}>\r\n          <Text style={styles.inputLabel}>Password</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"xxxxxxxx\"\r\n            placeholderTextColor=\"#bdbdbd\"\r\n            onChangeText={e => setUser({ ...user, password: e })}\r\n            value={user.password}\r\n          />\r\n        </View>\r\n        <Pressable\r\n          onPress={() => setModalVisible(!isModalVisible)}\r\n          style={[styles.button, styles.buttonClose]}>\r\n          <Text style={styles.textStyle}>Register</Text>\r\n        </Pressable>\r\n        <Text style={styles.loginTextbox}>\r\n          You have account?\r\n          <Pressable style={{ paddingTop: 6 }}>\r\n            <Text style={styles.loginText}> Login</Text>\r\n          </Pressable>\r\n        </Text>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"script"}