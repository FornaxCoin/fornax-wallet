{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _AccessibilityUtil = _interopRequireDefault(require(\"../AccessibilityUtil\"));\n\nvar _css = _interopRequireDefault(require(\"../../exports/StyleSheet/css\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"../../exports/StyleSheet\"));\n\nvar _styleResolver = _interopRequireDefault(require(\"../../exports/StyleSheet/styleResolver\"));\n\nvar _constants = require(\"../../exports/StyleSheet/constants\");\n\nvar _excluded = [\"accessibilityActiveDescendant\", \"accessibilityAtomic\", \"accessibilityAutoComplete\", \"accessibilityBusy\", \"accessibilityChecked\", \"accessibilityColumnCount\", \"accessibilityColumnIndex\", \"accessibilityColumnSpan\", \"accessibilityControls\", \"accessibilityCurrent\", \"accessibilityDescribedBy\", \"accessibilityDetails\", \"accessibilityDisabled\", \"accessibilityErrorMessage\", \"accessibilityExpanded\", \"accessibilityFlowTo\", \"accessibilityHasPopup\", \"accessibilityHidden\", \"accessibilityInvalid\", \"accessibilityKeyShortcuts\", \"accessibilityLabel\", \"accessibilityLabelledBy\", \"accessibilityLevel\", \"accessibilityLiveRegion\", \"accessibilityModal\", \"accessibilityMultiline\", \"accessibilityMultiSelectable\", \"accessibilityOrientation\", \"accessibilityOwns\", \"accessibilityPlaceholder\", \"accessibilityPosInSet\", \"accessibilityPressed\", \"accessibilityReadOnly\", \"accessibilityRequired\", \"accessibilityRole\", \"accessibilityRoleDescription\", \"accessibilityRowCount\", \"accessibilityRowIndex\", \"accessibilityRowSpan\", \"accessibilitySelected\", \"accessibilitySetSize\", \"accessibilitySort\", \"accessibilityValueMax\", \"accessibilityValueMin\", \"accessibilityValueNow\", \"accessibilityValueText\", \"classList\", \"dataSet\", \"focusable\", \"nativeID\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityState\", \"accessibilityValue\"];\nvar emptyObject = {};\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\nvar uppercasePattern = /[A-Z]/g;\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\n\nfunction hyphenateString(str) {\n  return str.replace(uppercasePattern, toHyphenLower);\n}\n\nfunction processIDRefList(idRefList) {\n  return isArray(idRefList) ? idRefList.join(' ') : idRefList;\n}\n\nvar classes = _css.default.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, _constants.STYLE_GROUPS.classicReset);\n\nvar pointerEventsStyles = _StyleSheet.default.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar createDOMProps = function createDOMProps(elementType, props) {\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityActiveDescendant = _props.accessibilityActiveDescendant,\n      accessibilityAtomic = _props.accessibilityAtomic,\n      accessibilityAutoComplete = _props.accessibilityAutoComplete,\n      accessibilityBusy = _props.accessibilityBusy,\n      accessibilityChecked = _props.accessibilityChecked,\n      accessibilityColumnCount = _props.accessibilityColumnCount,\n      accessibilityColumnIndex = _props.accessibilityColumnIndex,\n      accessibilityColumnSpan = _props.accessibilityColumnSpan,\n      accessibilityControls = _props.accessibilityControls,\n      accessibilityCurrent = _props.accessibilityCurrent,\n      accessibilityDescribedBy = _props.accessibilityDescribedBy,\n      accessibilityDetails = _props.accessibilityDetails,\n      accessibilityDisabled = _props.accessibilityDisabled,\n      accessibilityErrorMessage = _props.accessibilityErrorMessage,\n      accessibilityExpanded = _props.accessibilityExpanded,\n      accessibilityFlowTo = _props.accessibilityFlowTo,\n      accessibilityHasPopup = _props.accessibilityHasPopup,\n      accessibilityHidden = _props.accessibilityHidden,\n      accessibilityInvalid = _props.accessibilityInvalid,\n      accessibilityKeyShortcuts = _props.accessibilityKeyShortcuts,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLabelledBy = _props.accessibilityLabelledBy,\n      accessibilityLevel = _props.accessibilityLevel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityModal = _props.accessibilityModal,\n      accessibilityMultiline = _props.accessibilityMultiline,\n      accessibilityMultiSelectable = _props.accessibilityMultiSelectable,\n      accessibilityOrientation = _props.accessibilityOrientation,\n      accessibilityOwns = _props.accessibilityOwns,\n      accessibilityPlaceholder = _props.accessibilityPlaceholder,\n      accessibilityPosInSet = _props.accessibilityPosInSet,\n      accessibilityPressed = _props.accessibilityPressed,\n      accessibilityReadOnly = _props.accessibilityReadOnly,\n      accessibilityRequired = _props.accessibilityRequired,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityRoleDescription = _props.accessibilityRoleDescription,\n      accessibilityRowCount = _props.accessibilityRowCount,\n      accessibilityRowIndex = _props.accessibilityRowIndex,\n      accessibilityRowSpan = _props.accessibilityRowSpan,\n      accessibilitySelected = _props.accessibilitySelected,\n      accessibilitySetSize = _props.accessibilitySetSize,\n      accessibilitySort = _props.accessibilitySort,\n      accessibilityValueMax = _props.accessibilityValueMax,\n      accessibilityValueMin = _props.accessibilityValueMin,\n      accessibilityValueNow = _props.accessibilityValueNow,\n      accessibilityValueText = _props.accessibilityValueText,\n      classList = _props.classList,\n      dataSet = _props.dataSet,\n      focusable = _props.focusable,\n      nativeID = _props.nativeID,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessible = _props.accessible,\n      accessibilityState = _props.accessibilityState,\n      accessibilityValue = _props.accessibilityValue,\n      domProps = (0, _objectWithoutProperties2.default)(_props, _excluded);\n  var disabled = accessibilityState != null && accessibilityState.disabled === true || accessibilityDisabled;\n\n  var role = _AccessibilityUtil.default.propsToAriaRole(props);\n\n  if (accessibilityState != null) {\n    for (var prop in accessibilityState) {\n      var value = accessibilityState[prop];\n\n      if (value != null) {\n        if (prop === 'disabled' || prop === 'hidden') {\n          if (value === true) {\n            domProps[\"aria-\" + prop] = value;\n            domProps[prop] = value;\n          }\n        } else {\n          domProps[\"aria-\" + prop] = value;\n        }\n      }\n    }\n  }\n\n  if (accessibilityValue != null) {\n    for (var _prop in accessibilityValue) {\n      var _value = accessibilityValue[_prop];\n\n      if (_value != null) {\n        domProps[\"aria-value\" + _prop] = _value;\n      }\n    }\n  }\n\n  if (accessibilityActiveDescendant != null) {\n    domProps['aria-activedescendant'] = accessibilityActiveDescendant;\n  }\n\n  if (accessibilityAtomic != null) {\n    domProps['aria-atomic'] = accessibilityAtomic;\n  }\n\n  if (accessibilityAutoComplete != null) {\n    domProps['aria-autocomplete'] = accessibilityAutoComplete;\n  }\n\n  if (accessibilityBusy != null) {\n    domProps['aria-busy'] = accessibilityBusy;\n  }\n\n  if (accessibilityChecked != null) {\n    domProps['aria-checked'] = accessibilityChecked;\n  }\n\n  if (accessibilityColumnCount != null) {\n    domProps['aria-colcount'] = accessibilityColumnCount;\n  }\n\n  if (accessibilityColumnIndex != null) {\n    domProps['aria-colindex'] = accessibilityColumnIndex;\n  }\n\n  if (accessibilityColumnSpan != null) {\n    domProps['aria-colspan'] = accessibilityColumnSpan;\n  }\n\n  if (accessibilityControls != null) {\n    domProps['aria-controls'] = processIDRefList(accessibilityControls);\n  }\n\n  if (accessibilityCurrent != null) {\n    domProps['aria-current'] = accessibilityCurrent;\n  }\n\n  if (accessibilityDescribedBy != null) {\n    domProps['aria-describedby'] = processIDRefList(accessibilityDescribedBy);\n  }\n\n  if (accessibilityDetails != null) {\n    domProps['aria-details'] = accessibilityDetails;\n  }\n\n  if (disabled === true) {\n    domProps['aria-disabled'] = true;\n\n    if (elementType === 'button' || elementType === 'form' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.disabled = true;\n    }\n  }\n\n  if (accessibilityErrorMessage != null) {\n    domProps['aria-errormessage'] = accessibilityErrorMessage;\n  }\n\n  if (accessibilityExpanded != null) {\n    domProps['aria-expanded'] = accessibilityExpanded;\n  }\n\n  if (accessibilityFlowTo != null) {\n    domProps['aria-flowto'] = processIDRefList(accessibilityFlowTo);\n  }\n\n  if (accessibilityHasPopup != null) {\n    domProps['aria-haspopup'] = accessibilityHasPopup;\n  }\n\n  if (accessibilityHidden === true) {\n    domProps['aria-hidden'] = accessibilityHidden;\n  }\n\n  if (accessibilityInvalid != null) {\n    domProps['aria-invalid'] = accessibilityInvalid;\n  }\n\n  if (accessibilityKeyShortcuts != null && Array.isArray(accessibilityKeyShortcuts)) {\n    domProps['aria-keyshortcuts'] = accessibilityKeyShortcuts.join(' ');\n  }\n\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLabelledBy != null) {\n    domProps['aria-labelledby'] = processIDRefList(accessibilityLabelledBy);\n  }\n\n  if (accessibilityLevel != null) {\n    domProps['aria-level'] = accessibilityLevel;\n  }\n\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (accessibilityModal != null) {\n    domProps['aria-modal'] = accessibilityModal;\n  }\n\n  if (accessibilityMultiline != null) {\n    domProps['aria-multiline'] = accessibilityMultiline;\n  }\n\n  if (accessibilityMultiSelectable != null) {\n    domProps['aria-multiselectable'] = accessibilityMultiSelectable;\n  }\n\n  if (accessibilityOrientation != null) {\n    domProps['aria-orientation'] = accessibilityOrientation;\n  }\n\n  if (accessibilityOwns != null) {\n    domProps['aria-owns'] = processIDRefList(accessibilityOwns);\n  }\n\n  if (accessibilityPlaceholder != null) {\n    domProps['aria-placeholder'] = accessibilityPlaceholder;\n  }\n\n  if (accessibilityPosInSet != null) {\n    domProps['aria-posinset'] = accessibilityPosInSet;\n  }\n\n  if (accessibilityPressed != null) {\n    domProps['aria-pressed'] = accessibilityPressed;\n  }\n\n  if (accessibilityReadOnly != null) {\n    domProps['aria-readonly'] = accessibilityReadOnly;\n\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.readOnly = true;\n    }\n  }\n\n  if (accessibilityRequired != null) {\n    domProps['aria-required'] = accessibilityRequired;\n\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.required = true;\n    }\n  }\n\n  if (role != null) {\n    domProps['role'] = role === 'none' ? 'presentation' : role;\n  }\n\n  if (accessibilityRoleDescription != null) {\n    domProps['aria-roledescription'] = accessibilityRoleDescription;\n  }\n\n  if (accessibilityRowCount != null) {\n    domProps['aria-rowcount'] = accessibilityRowCount;\n  }\n\n  if (accessibilityRowIndex != null) {\n    domProps['aria-rowindex'] = accessibilityRowIndex;\n  }\n\n  if (accessibilityRowSpan != null) {\n    domProps['aria-rowspan'] = accessibilityRowSpan;\n  }\n\n  if (accessibilitySelected != null) {\n    domProps['aria-selected'] = accessibilitySelected;\n  }\n\n  if (accessibilitySetSize != null) {\n    domProps['aria-setsize'] = accessibilitySetSize;\n  }\n\n  if (accessibilitySort != null) {\n    domProps['aria-sort'] = accessibilitySort;\n  }\n\n  if (accessibilityValueMax != null) {\n    domProps['aria-valuemax'] = accessibilityValueMax;\n  }\n\n  if (accessibilityValueMin != null) {\n    domProps['aria-valuemin'] = accessibilityValueMin;\n  }\n\n  if (accessibilityValueNow != null) {\n    domProps['aria-valuenow'] = accessibilityValueNow;\n  }\n\n  if (accessibilityValueText != null) {\n    domProps['aria-valuetext'] = accessibilityValueText;\n  }\n\n  if (dataSet != null) {\n    for (var dataProp in dataSet) {\n      if (hasOwnProperty.call(dataSet, dataProp)) {\n        var dataName = hyphenateString(dataProp);\n        var dataValue = dataSet[dataProp];\n\n        if (dataValue != null) {\n          domProps[\"data-\" + dataName] = dataValue;\n        }\n      }\n    }\n  }\n\n  var _focusable = focusable != null ? focusable : accessible;\n\n  if (_focusable === false) {\n    domProps.tabIndex = '-1';\n  }\n\n  if (elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n    if (_focusable === false || accessibilityDisabled === true) {\n      domProps.tabIndex = '-1';\n    }\n  } else if (role === 'button' || role === 'checkbox' || role === 'link' || role === 'radio' || role === 'textbox' || role === 'switch') {\n    if (_focusable !== false) {\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (_focusable === true) {\n      domProps.tabIndex = '0';\n    }\n  }\n\n  var reactNativeStyle = _StyleSheet.default.compose(pointerEvents && pointerEventsStyles[pointerEvents], providedStyle);\n\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = elementType === 'a' || elementType === 'button' || elementType === 'li' || elementType === 'ul' || role === 'heading';\n  var finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList];\n\n  var _styleResolver$resolv = _styleResolver.default.resolve(reactNativeStyle, finalClassList),\n      className = _styleResolver$resolv.className,\n      style = _styleResolver$resolv.style;\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  }\n\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  }\n\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nvar _default = createDOMProps;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/node_modules/react-native-web/src/modules/createDOMProps/index.js"],"names":["emptyObject","hasOwnProperty","Object","prototype","isArray","Array","uppercasePattern","toHyphenLower","match","toLowerCase","hyphenateString","str","replace","processIDRefList","idRefList","join","classes","css","create","reset","backgroundColor","color","font","listStyle","margin","textAlign","textDecoration","cursor","STYLE_GROUPS","classicReset","pointerEventsStyles","StyleSheet","auto","pointerEvents","none","createDOMProps","elementType","props","accessibilityActiveDescendant","accessibilityAtomic","accessibilityAutoComplete","accessibilityBusy","accessibilityChecked","accessibilityColumnCount","accessibilityColumnIndex","accessibilityColumnSpan","accessibilityControls","accessibilityCurrent","accessibilityDescribedBy","accessibilityDetails","accessibilityDisabled","accessibilityErrorMessage","accessibilityExpanded","accessibilityFlowTo","accessibilityHasPopup","accessibilityHidden","accessibilityInvalid","accessibilityKeyShortcuts","accessibilityLabel","accessibilityLabelledBy","accessibilityLevel","accessibilityLiveRegion","accessibilityModal","accessibilityMultiline","accessibilityMultiSelectable","accessibilityOrientation","accessibilityOwns","accessibilityPlaceholder","accessibilityPosInSet","accessibilityPressed","accessibilityReadOnly","accessibilityRequired","accessibilityRole","accessibilityRoleDescription","accessibilityRowCount","accessibilityRowIndex","accessibilityRowSpan","accessibilitySelected","accessibilitySetSize","accessibilitySort","accessibilityValueMax","accessibilityValueMin","accessibilityValueNow","accessibilityValueText","classList","dataSet","focusable","nativeID","providedStyle","style","testID","accessible","accessibilityState","accessibilityValue","domProps","disabled","role","AccessibilityUtil","propsToAriaRole","prop","value","readOnly","required","dataProp","call","dataName","dataValue","_focusable","tabIndex","reactNativeStyle","compose","needsCursor","needsReset","finalClassList","styleResolver","resolve","className","id"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport AccessibilityUtil from '../AccessibilityUtil';\nimport css from '../../exports/StyleSheet/css';\nimport StyleSheet from '../../exports/StyleSheet';\nimport styleResolver from '../../exports/StyleSheet/styleResolver';\nimport { STYLE_GROUPS } from '../../exports/StyleSheet/constants';\n\nconst emptyObject = {};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst isArray = Array.isArray;\n\nconst uppercasePattern = /[A-Z]/g;\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\nfunction hyphenateString(str: string): string {\n  return str.replace(uppercasePattern, toHyphenLower);\n}\nfunction processIDRefList(idRefList: string | Array<string>): string {\n  return isArray(idRefList) ? idRefList.join(' ') : idRefList;\n}\n\n// Reset styles for heading, link, and list DOM elements\nconst classes = css.create(\n  {\n    reset: {\n      backgroundColor: 'transparent',\n      color: 'inherit',\n      font: 'inherit',\n      listStyle: 'none',\n      margin: 0,\n      textAlign: 'inherit',\n      textDecoration: 'none'\n    },\n    cursor: {\n      cursor: 'pointer'\n    }\n  },\n  STYLE_GROUPS.classicReset\n);\n\nconst pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nconst createDOMProps = (elementType, props) => {\n  if (!props) {\n    props = emptyObject;\n  }\n\n  const {\n    accessibilityActiveDescendant,\n    accessibilityAtomic,\n    accessibilityAutoComplete,\n    accessibilityBusy,\n    accessibilityChecked,\n    accessibilityColumnCount,\n    accessibilityColumnIndex,\n    accessibilityColumnSpan,\n    accessibilityControls,\n    accessibilityCurrent,\n    accessibilityDescribedBy,\n    accessibilityDetails,\n    accessibilityDisabled,\n    accessibilityErrorMessage,\n    accessibilityExpanded,\n    accessibilityFlowTo,\n    accessibilityHasPopup,\n    accessibilityHidden,\n    accessibilityInvalid,\n    accessibilityKeyShortcuts,\n    accessibilityLabel,\n    accessibilityLabelledBy,\n    accessibilityLevel,\n    accessibilityLiveRegion,\n    accessibilityModal,\n    accessibilityMultiline,\n    accessibilityMultiSelectable,\n    accessibilityOrientation,\n    accessibilityOwns,\n    accessibilityPlaceholder,\n    accessibilityPosInSet,\n    accessibilityPressed,\n    accessibilityReadOnly,\n    accessibilityRequired,\n    /* eslint-disable */\n    accessibilityRole,\n    /* eslint-enable */\n    accessibilityRoleDescription,\n    accessibilityRowCount,\n    accessibilityRowIndex,\n    accessibilityRowSpan,\n    accessibilitySelected,\n    accessibilitySetSize,\n    accessibilitySort,\n    accessibilityValueMax,\n    accessibilityValueMin,\n    accessibilityValueNow,\n    accessibilityValueText,\n    classList,\n    dataSet,\n    focusable,\n    nativeID,\n    pointerEvents,\n    style: providedStyle,\n    testID,\n    // Deprecated\n    accessible,\n    accessibilityState,\n    accessibilityValue,\n    // Rest\n    ...domProps\n  } = props;\n\n  const disabled =\n    (accessibilityState != null && accessibilityState.disabled === true) || accessibilityDisabled;\n\n  const role = AccessibilityUtil.propsToAriaRole(props);\n\n  // DEPRECATED\n  if (accessibilityState != null) {\n    for (const prop in accessibilityState) {\n      const value = accessibilityState[prop];\n      if (value != null) {\n        if (prop === 'disabled' || prop === 'hidden') {\n          if (value === true) {\n            domProps[`aria-${prop}`] = value;\n            // also set prop directly to pick up host elementType behaviour\n            domProps[prop] = value;\n          }\n        } else {\n          domProps[`aria-${prop}`] = value;\n        }\n      }\n    }\n  }\n  if (accessibilityValue != null) {\n    for (const prop in accessibilityValue) {\n      const value = accessibilityValue[prop];\n      if (value != null) {\n        domProps[`aria-value${prop}`] = value;\n      }\n    }\n  }\n\n  // ACCESSIBILITY\n  if (accessibilityActiveDescendant != null) {\n    domProps['aria-activedescendant'] = accessibilityActiveDescendant;\n  }\n  if (accessibilityAtomic != null) {\n    domProps['aria-atomic'] = accessibilityAtomic;\n  }\n  if (accessibilityAutoComplete != null) {\n    domProps['aria-autocomplete'] = accessibilityAutoComplete;\n  }\n  if (accessibilityBusy != null) {\n    domProps['aria-busy'] = accessibilityBusy;\n  }\n  if (accessibilityChecked != null) {\n    domProps['aria-checked'] = accessibilityChecked;\n  }\n  if (accessibilityColumnCount != null) {\n    domProps['aria-colcount'] = accessibilityColumnCount;\n  }\n  if (accessibilityColumnIndex != null) {\n    domProps['aria-colindex'] = accessibilityColumnIndex;\n  }\n  if (accessibilityColumnSpan != null) {\n    domProps['aria-colspan'] = accessibilityColumnSpan;\n  }\n  if (accessibilityControls != null) {\n    domProps['aria-controls'] = processIDRefList(accessibilityControls);\n  }\n  if (accessibilityCurrent != null) {\n    domProps['aria-current'] = accessibilityCurrent;\n  }\n  if (accessibilityDescribedBy != null) {\n    domProps['aria-describedby'] = processIDRefList(accessibilityDescribedBy);\n  }\n  if (accessibilityDetails != null) {\n    domProps['aria-details'] = accessibilityDetails;\n  }\n  if (disabled === true) {\n    domProps['aria-disabled'] = true;\n    // Enhance with native semantics\n    if (\n      elementType === 'button' ||\n      elementType === 'form' ||\n      elementType === 'input' ||\n      elementType === 'select' ||\n      elementType === 'textarea'\n    ) {\n      domProps.disabled = true;\n    }\n  }\n  if (accessibilityErrorMessage != null) {\n    domProps['aria-errormessage'] = accessibilityErrorMessage;\n  }\n  if (accessibilityExpanded != null) {\n    domProps['aria-expanded'] = accessibilityExpanded;\n  }\n  if (accessibilityFlowTo != null) {\n    domProps['aria-flowto'] = processIDRefList(accessibilityFlowTo);\n  }\n  if (accessibilityHasPopup != null) {\n    domProps['aria-haspopup'] = accessibilityHasPopup;\n  }\n  if (accessibilityHidden === true) {\n    domProps['aria-hidden'] = accessibilityHidden;\n  }\n  if (accessibilityInvalid != null) {\n    domProps['aria-invalid'] = accessibilityInvalid;\n  }\n  if (accessibilityKeyShortcuts != null && Array.isArray(accessibilityKeyShortcuts)) {\n    domProps['aria-keyshortcuts'] = accessibilityKeyShortcuts.join(' ');\n  }\n  if (accessibilityLabel != null) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n  if (accessibilityLabelledBy != null) {\n    domProps['aria-labelledby'] = processIDRefList(accessibilityLabelledBy);\n  }\n  if (accessibilityLevel != null) {\n    domProps['aria-level'] = accessibilityLevel;\n  }\n  if (accessibilityLiveRegion != null) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n  if (accessibilityModal != null) {\n    domProps['aria-modal'] = accessibilityModal;\n  }\n  if (accessibilityMultiline != null) {\n    domProps['aria-multiline'] = accessibilityMultiline;\n  }\n  if (accessibilityMultiSelectable != null) {\n    domProps['aria-multiselectable'] = accessibilityMultiSelectable;\n  }\n  if (accessibilityOrientation != null) {\n    domProps['aria-orientation'] = accessibilityOrientation;\n  }\n  if (accessibilityOwns != null) {\n    domProps['aria-owns'] = processIDRefList(accessibilityOwns);\n  }\n  if (accessibilityPlaceholder != null) {\n    domProps['aria-placeholder'] = accessibilityPlaceholder;\n  }\n  if (accessibilityPosInSet != null) {\n    domProps['aria-posinset'] = accessibilityPosInSet;\n  }\n  if (accessibilityPressed != null) {\n    domProps['aria-pressed'] = accessibilityPressed;\n  }\n  if (accessibilityReadOnly != null) {\n    domProps['aria-readonly'] = accessibilityReadOnly;\n    // Enhance with native semantics\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.readOnly = true;\n    }\n  }\n  if (accessibilityRequired != null) {\n    domProps['aria-required'] = accessibilityRequired;\n    // Enhance with native semantics\n    if (elementType === 'input' || elementType === 'select' || elementType === 'textarea') {\n      domProps.required = true;\n    }\n  }\n  if (role != null) {\n    // 'presentation' synonym has wider browser support\n    domProps['role'] = role === 'none' ? 'presentation' : role;\n  }\n  if (accessibilityRoleDescription != null) {\n    domProps['aria-roledescription'] = accessibilityRoleDescription;\n  }\n  if (accessibilityRowCount != null) {\n    domProps['aria-rowcount'] = accessibilityRowCount;\n  }\n  if (accessibilityRowIndex != null) {\n    domProps['aria-rowindex'] = accessibilityRowIndex;\n  }\n  if (accessibilityRowSpan != null) {\n    domProps['aria-rowspan'] = accessibilityRowSpan;\n  }\n  if (accessibilitySelected != null) {\n    domProps['aria-selected'] = accessibilitySelected;\n  }\n  if (accessibilitySetSize != null) {\n    domProps['aria-setsize'] = accessibilitySetSize;\n  }\n  if (accessibilitySort != null) {\n    domProps['aria-sort'] = accessibilitySort;\n  }\n  if (accessibilityValueMax != null) {\n    domProps['aria-valuemax'] = accessibilityValueMax;\n  }\n  if (accessibilityValueMin != null) {\n    domProps['aria-valuemin'] = accessibilityValueMin;\n  }\n  if (accessibilityValueNow != null) {\n    domProps['aria-valuenow'] = accessibilityValueNow;\n  }\n  if (accessibilityValueText != null) {\n    domProps['aria-valuetext'] = accessibilityValueText;\n  }\n\n  // \"dataSet\" replaced with \"data-*\"\n  if (dataSet != null) {\n    for (const dataProp in dataSet) {\n      if (hasOwnProperty.call(dataSet, dataProp)) {\n        const dataName = hyphenateString(dataProp);\n        const dataValue = dataSet[dataProp];\n        if (dataValue != null) {\n          domProps[`data-${dataName}`] = dataValue;\n        }\n      }\n    }\n  }\n\n  // FOCUS\n  // \"focusable\" indicates that an element may be a keyboard tab-stop.\n  const _focusable = focusable != null ? focusable : accessible;\n  if (_focusable === false) {\n    domProps.tabIndex = '-1';\n  }\n  if (\n    // These native elements are focusable by default\n    elementType === 'a' ||\n    elementType === 'button' ||\n    elementType === 'input' ||\n    elementType === 'select' ||\n    elementType === 'textarea'\n  ) {\n    if (_focusable === false || accessibilityDisabled === true) {\n      domProps.tabIndex = '-1';\n    }\n  } else if (\n    // These roles are made focusable by default\n    role === 'button' ||\n    role === 'checkbox' ||\n    role === 'link' ||\n    role === 'radio' ||\n    role === 'textbox' ||\n    role === 'switch'\n  ) {\n    if (_focusable !== false) {\n      domProps.tabIndex = '0';\n    }\n  } else {\n    // Everything else must explicitly set the prop\n    if (_focusable === true) {\n      domProps.tabIndex = '0';\n    }\n  }\n\n  // STYLE\n  const reactNativeStyle = StyleSheet.compose(\n    pointerEvents && pointerEventsStyles[pointerEvents],\n    providedStyle\n  );\n\n  // Additional style resets for interactive elements\n  const needsCursor = (role === 'button' || role === 'link') && !disabled;\n  const needsReset =\n    elementType === 'a' ||\n    elementType === 'button' ||\n    elementType === 'li' ||\n    elementType === 'ul' ||\n    role === 'heading';\n  // Classic CSS styles\n  const finalClassList = [needsReset && classes.reset, needsCursor && classes.cursor, classList];\n\n  // Resolve styles\n  const { className, style } = styleResolver.resolve(reactNativeStyle, finalClassList);\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  }\n\n  // OTHER\n  // Native element ID\n  if (nativeID != null) {\n    domProps.id = nativeID;\n  }\n  // Automated test IDs\n  if (testID != null) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;\n"]},"metadata":{},"sourceType":"script"}