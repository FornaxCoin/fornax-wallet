{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setWeb3 = exports.setTxnsResponse = exports.setTxnsInfo = exports.setSendTxnStatus = exports.setMnemonic = exports.setDefaultAddress = exports.setAccounts = exports.initWallet = exports.default = void 0;\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar initialState = {\n  mnemonic: '',\n  privateKey: '',\n  ethAddress: '',\n  web3: null,\n  accounts: [],\n  txnInfo: null,\n  defaultAddress: '',\n  txnResponse: null,\n  sendTxnStatus: ''\n};\nvar walletSlice = (0, _toolkit.createSlice)({\n  name: 'wallet',\n  initialState: initialState,\n  reducers: {\n    setMnemonic: function setMnemonic(state, action) {\n      state.mnemonic = action.payload;\n    },\n    initWallet: function initWallet(state, action) {\n      state.privateKey = action.payload.privateKey;\n      state.ethAddress = action.payload.ethAddress;\n    },\n    setWeb3: function setWeb3(state, action) {\n      state.web3 = action.payload;\n    },\n    setAccounts: function setAccounts(state, action) {\n      state.accounts = action.payload;\n    },\n    setTxnsInfo: function setTxnsInfo(state, action) {\n      state.txnInfo = action.payload;\n    },\n    setTxnsResponse: function setTxnsResponse(state, action) {\n      state.txnResponse = action.payload;\n    },\n    setDefaultAddress: function setDefaultAddress(state, action) {\n      state.defaultAddress = action.payload;\n    },\n    setSendTxnStatus: function setSendTxnStatus(state, action) {\n      state.sendTxnStatus = action.payload;\n    }\n  }\n});\nvar _walletSlice$actions = walletSlice.actions,\n    setMnemonic = _walletSlice$actions.setMnemonic,\n    initWallet = _walletSlice$actions.initWallet,\n    setWeb3 = _walletSlice$actions.setWeb3,\n    setAccounts = _walletSlice$actions.setAccounts,\n    setTxnsInfo = _walletSlice$actions.setTxnsInfo,\n    setTxnsResponse = _walletSlice$actions.setTxnsResponse,\n    setDefaultAddress = _walletSlice$actions.setDefaultAddress,\n    setSendTxnStatus = _walletSlice$actions.setSendTxnStatus;\nexports.setSendTxnStatus = setSendTxnStatus;\nexports.setDefaultAddress = setDefaultAddress;\nexports.setTxnsResponse = setTxnsResponse;\nexports.setTxnsInfo = setTxnsInfo;\nexports.setAccounts = setAccounts;\nexports.setWeb3 = setWeb3;\nexports.initWallet = initWallet;\nexports.setMnemonic = setMnemonic;\nvar _default = walletSlice.reducer;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/redux/reducers/Wallet.ts"],"names":["initialState","mnemonic","privateKey","ethAddress","web3","accounts","txnInfo","defaultAddress","txnResponse","sendTxnStatus","walletSlice","name","reducers","setMnemonic","state","action","payload","initWallet","setWeb3","setAccounts","setTxnsInfo","setTxnsResponse","setDefaultAddress","setSendTxnStatus","actions","reducer"],"mappings":";;;;;AAAA;;AAcA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,UAAU,EAAE,EAFO;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,IAAI,EAAE,IAJa;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,OAAO,EAAE,IANU;AAOnBC,EAAAA,cAAc,EAAE,EAPG;AAQnBC,EAAAA,WAAW,EAAE,IARM;AASnBC,EAAAA,aAAa,EAAE;AATI,CAArB;AAYA,IAAMC,WAAW,GAAG,0BAAY;AAC9BC,EAAAA,IAAI,EAAE,QADwB;AAE9BX,EAAAA,YAAY,EAAZA,YAF8B;AAG9BY,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WADQ,uBACIC,KADJ,EACWC,MADX,EACmB;AACzBD,MAAAA,KAAK,CAACb,QAAN,GAAiBc,MAAM,CAACC,OAAxB;AACD,KAHO;AAIRC,IAAAA,UAJQ,sBAIGH,KAJH,EAIUC,MAJV,EAIkB;AACxBD,MAAAA,KAAK,CAACZ,UAAN,GAAmBa,MAAM,CAACC,OAAP,CAAed,UAAlC;AACAY,MAAAA,KAAK,CAACX,UAAN,GAAmBY,MAAM,CAACC,OAAP,CAAeb,UAAlC;AACD,KAPO;AAQRe,IAAAA,OARQ,mBAQAJ,KARA,EAQOC,MARP,EAQe;AACrBD,MAAAA,KAAK,CAACV,IAAN,GAAaW,MAAM,CAACC,OAApB;AACD,KAVO;AAWRG,IAAAA,WAXQ,uBAWIL,KAXJ,EAWWC,MAXX,EAWmB;AACzBD,MAAAA,KAAK,CAACT,QAAN,GAAiBU,MAAM,CAACC,OAAxB;AACD,KAbO;AAcRI,IAAAA,WAdQ,uBAcIN,KAdJ,EAcWC,MAdX,EAcmB;AACzBD,MAAAA,KAAK,CAACR,OAAN,GAAgBS,MAAM,CAACC,OAAvB;AACD,KAhBO;AAiBRK,IAAAA,eAjBQ,2BAiBQP,KAjBR,EAiBeC,MAjBf,EAiBuB;AAC7BD,MAAAA,KAAK,CAACN,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACD,KAnBO;AAoBRM,IAAAA,iBApBQ,6BAoBUR,KApBV,EAoBiBC,MApBjB,EAoByB;AAC/BD,MAAAA,KAAK,CAACP,cAAN,GAAuBQ,MAAM,CAACC,OAA9B;AACD,KAtBO;AAuBRO,IAAAA,gBAvBQ,4BAuBST,KAvBT,EAuBgBC,MAvBhB,EAuBwB;AAC9BD,MAAAA,KAAK,CAACL,aAAN,GAAsBM,MAAM,CAACC,OAA7B;AACD;AAzBO;AAHoB,CAAZ,CAApB;AAgCO,2BASHN,WAAW,CAACc,OATT;AAAA,IACLX,WADK,wBACLA,WADK;AAAA,IAELI,UAFK,wBAELA,UAFK;AAAA,IAGLC,OAHK,wBAGLA,OAHK;AAAA,IAILC,WAJK,wBAILA,WAJK;AAAA,IAKLC,WALK,wBAKLA,WALK;AAAA,IAMLC,eANK,wBAMLA,eANK;AAAA,IAOLC,iBAPK,wBAOLA,iBAPK;AAAA,IAQLC,gBARK,wBAQLA,gBARK;;;;;;;;;eAUQb,WAAW,CAACe,O","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface WalletState {\r\n  mnemonic: string;\r\n  privateKey: string;\r\n  ethAddress: string;\r\n  web3: any;\r\n  accounts: any;\r\n  txnInfo: any;\r\n  txnResponse: any;\r\n  defaultAddress: string;\r\n  sendTxnStatus: string;\r\n}\r\n\r\nconst initialState = {\r\n  mnemonic: '',\r\n  privateKey: '',\r\n  ethAddress: '',\r\n  web3: null,\r\n  accounts: [],\r\n  txnInfo: null,\r\n  defaultAddress: '',\r\n  txnResponse: null,\r\n  sendTxnStatus: '',\r\n} as WalletState;\r\n\r\nconst walletSlice = createSlice({\r\n  name: 'wallet',\r\n  initialState,\r\n  reducers: {\r\n    setMnemonic(state, action) {\r\n      state.mnemonic = action.payload;\r\n    },\r\n    initWallet(state, action) {\r\n      state.privateKey = action.payload.privateKey;\r\n      state.ethAddress = action.payload.ethAddress;\r\n    },\r\n    setWeb3(state, action) {\r\n      state.web3 = action.payload;\r\n    },\r\n    setAccounts(state, action) {\r\n      state.accounts = action.payload;\r\n    },\r\n    setTxnsInfo(state, action) {\r\n      state.txnInfo = action.payload;\r\n    },\r\n    setTxnsResponse(state, action) {\r\n      state.txnResponse = action.payload;\r\n    },\r\n    setDefaultAddress(state, action) {\r\n      state.defaultAddress = action.payload;\r\n    },\r\n    setSendTxnStatus(state, action) {\r\n      state.sendTxnStatus = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setMnemonic,\r\n  initWallet,\r\n  setWeb3,\r\n  setAccounts,\r\n  setTxnsInfo,\r\n  setTxnsResponse,\r\n  setDefaultAddress,\r\n  setSendTxnStatus\r\n} = walletSlice.actions;\r\nexport default walletSlice.reducer;\r\n"]},"metadata":{},"sourceType":"script"}