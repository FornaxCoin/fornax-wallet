{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\node_modules\\\\react-native-gifted-charts\\\\src\\\\BarChart\\\\RenderStackBars.tsx\";\n\nvar RenderStackBars = function RenderStackBars(props) {\n  var item = props.item,\n      containerHeight = props.containerHeight,\n      maxValue = props.maxValue,\n      spacing = props.spacing,\n      rotateLabel = props.rotateLabel;\n  var disablePress = props.disablePress || false;\n\n  var renderLabel = function renderLabel(label, labelTextStyle) {\n    return _react.default.createElement(_reactNative.View, {\n      style: [{\n        width: (item.stacks[0].barWidth || props.barWidth || 30) + spacing / 2,\n        left: -6,\n        position: 'absolute',\n        bottom: rotateLabel ? -40 : -25\n      }, rotateLabel ? props.horizontal ? {\n        transform: [{\n          rotate: '330deg'\n        }]\n      } : {\n        transform: [{\n          rotate: '60deg'\n        }]\n      } : props.horizontal ? {\n        transform: [{\n          rotate: '-90deg'\n        }]\n      } : {}],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, item.labelComponent ? item.labelComponent() : _react.default.createElement(_reactNative.Text, {\n      style: [labelTextStyle],\n      numberOfLines: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, label || ''));\n  };\n\n  var getPosition = function getPosition(index) {\n    var position = 0;\n\n    for (var i = 0; i < index; i++) {\n      position += props.item.stacks[i].value * (containerHeight || 200) / (maxValue || 200);\n    }\n\n    return position;\n  };\n\n  var getTotalHeight = function getTotalHeight() {\n    return props.item.stacks.reduce(function (acc, stack) {\n      return acc + stack.value;\n    }, 0);\n  };\n\n  var static2DSimple = function static2DSimple(item) {\n    return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n      style: [{\n        position: 'absolute',\n        width: item.stacks[0].barWidth || props.barWidth || 30,\n        height: '100%'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, item.stacks.map(function (stackItem, index) {\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        key: index,\n        onPress: stackItem.onPress,\n        disabled: disablePress,\n        style: [{\n          position: 'absolute',\n          bottom: getPosition(index) + (stackItem.marginBottom || 0),\n          width: '100%',\n          height: stackItem.value * (containerHeight || 200) / (maxValue || 200) - (stackItem.marginBottom || 0),\n          backgroundColor: stackItem.color || 'black',\n          borderRadius: stackItem.borderRadius || props.barBorderRadius || 0\n        }, !props.barBorderRadius && !stackItem.borderRadius && {\n          borderTopLeftRadius: stackItem.borderTopLeftRadius || 0,\n          borderTopRightRadius: stackItem.borderTopRightRadius || 0,\n          borderBottomLeftRadius: stackItem.borderBottomLeftRadius || 0,\n          borderBottomRightRadius: stackItem.borderBottomRightRadius || 0\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      });\n    })), item.topLabelComponent && _react.default.createElement(_reactNative.View, {\n      style: [{\n        position: 'absolute',\n        top: (item.barWidth || props.barWidth || 30) * -1,\n        height: item.barWidth || props.barWidth || 30,\n        width: item.barWidth || props.barWidth || 30,\n        justifyContent: props.horizontal && !props.intactTopLabel ? 'center' : 'flex-end',\n        alignItems: 'center'\n      }, props.horizontal && !props.intactTopLabel && {\n        transform: [{\n          rotate: '270deg'\n        }]\n      }, item.topLabelContainerStyle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, item.topLabelComponent()));\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: [{\n      marginBottom: 60,\n      width: item.stacks[0].barWidth || props.barWidth || 30,\n      height: getTotalHeight(),\n      marginRight: spacing\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, props.showVerticalLines && _react.default.createElement(_reactNative.View, {\n    style: {\n      zIndex: props.verticalLinesZIndex,\n      position: 'absolute',\n      height: (containerHeight || 200) + 15,\n      width: props.verticalLinesThickness,\n      bottom: 0,\n      left: (item.barWidth || props.barWidth || 30) / 2,\n      backgroundColor: props.verticalLinesColor\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), props.showXAxisIndices && _react.default.createElement(_reactNative.View, {\n    style: {\n      zIndex: 2,\n      position: 'absolute',\n      height: props.xAxisIndicesHeight,\n      width: props.xAxisIndicesWidth,\n      bottom: 0,\n      left: (item.barWidth || props.barWidth || 30) / 2,\n      backgroundColor: props.xAxisIndicesColor\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }), static2DSimple(item), renderLabel(item.label || '', item.labelTextStyle));\n};\n\nvar _default = RenderStackBars;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/node_modules/react-native-gifted-charts/src/BarChart/RenderStackBars.tsx"],"names":["RenderStackBars","props","item","containerHeight","maxValue","spacing","rotateLabel","disablePress","renderLabel","label","labelTextStyle","width","stacks","barWidth","left","position","bottom","horizontal","transform","rotate","labelComponent","getPosition","index","i","value","getTotalHeight","reduce","acc","stack","static2DSimple","height","map","stackItem","onPress","marginBottom","backgroundColor","color","borderRadius","barBorderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","topLabelComponent","top","justifyContent","intactTopLabel","alignItems","topLabelContainerStyle","marginRight","showVerticalLines","zIndex","verticalLinesZIndex","verticalLinesThickness","verticalLinesColor","showXAxisIndices","xAxisIndicesHeight","xAxisIndicesWidth","xAxisIndicesColor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {View, TouchableOpacity, Text, ColorValue} from 'react-native';\nimport {Style} from 'util';\n\ntype Props = {\n  style?: any;\n  width?: number;\n  height?: number;\n  color?: ColorValue;\n  topLabelComponent?: Component;\n  topLabelContainerStyle?: Style;\n  opacity?: number;\n  labelTextStyle?: any;\n  disablePress?: boolean;\n\n  item: itemType;\n  index: number;\n  containerHeight?: number;\n  maxValue: number;\n  spacing?: number;\n  data?: any;\n  barWidth?: number;\n\n  rotateLabel?: Boolean;\n  showVerticalLines: Boolean;\n  verticalLinesThickness: number;\n  verticalLinesColor: ColorValue;\n  verticalLinesZIndex: number;\n  showXAxisIndices: Boolean;\n  xAxisIndicesHeight: number;\n  xAxisIndicesWidth: number;\n  xAxisIndicesColor: ColorValue;\n  horizontal: Boolean;\n  intactTopLabel: Boolean;\n  barBorderRadius?: number;\n};\ntype itemType = {\n  value?: number;\n  onPress?: any;\n  label?: String;\n  barWidth?: number;\n  labelTextStyle?: any;\n  topLabelComponent?: Function;\n  topLabelContainerStyle?: any;\n  disablePress?: any;\n  capThickness?: number;\n  capColor?: ColorValue;\n  capRadius?: number;\n  labelComponent?: Function;\n  borderRadius?: number;\n  stacks?: Array<any>;\n};\nconst RenderStackBars = (props: Props) => {\n  const {item, containerHeight, maxValue, spacing, rotateLabel} = props;\n  const disablePress = props.disablePress || false;\n  const renderLabel = (label: String, labelTextStyle: any) => {\n    return (\n      <View\n        style={[\n          {\n            width:\n              (item.stacks[0].barWidth || props.barWidth || 30) + spacing / 2,\n            left: -6,\n            position: 'absolute',\n            bottom: rotateLabel ? -40 : -25,\n          },\n          rotateLabel\n            ? props.horizontal\n              ? {transform: [{rotate: '330deg'}]}\n              : {transform: [{rotate: '60deg'}]}\n            : props.horizontal\n            ? {transform: [{rotate: '-90deg'}]}\n            : {},\n        ]}>\n        {item.labelComponent ? (\n          item.labelComponent()\n        ) : (\n          <Text style={[labelTextStyle]} numberOfLines={1}>\n            {label || ''}\n          </Text>\n        )}\n      </View>\n    );\n  };\n\n  const getPosition = (index: number) => {\n    let position = 0;\n    for (let i = 0; i < index; i++) {\n      position +=\n        (props.item.stacks[i].value * (containerHeight || 200)) /\n        (maxValue || 200);\n    }\n    return position;\n  };\n\n  const getTotalHeight = () => {\n    return props.item.stacks.reduce((acc, stack) => acc + stack.value, 0);\n  };\n\n  const static2DSimple = (item: itemType) => {\n    // console.log('comes to static2DSimple', item);\n    return (\n      <>\n        <View\n          style={[\n            {\n              position: 'absolute',\n              width: item.stacks[0].barWidth || props.barWidth || 30,\n              height: '100%',\n            },\n          ]}>\n          {item.stacks.map((stackItem, index) => {\n            return (\n              <TouchableOpacity\n                key={index}\n                onPress={stackItem.onPress}\n                disabled={disablePress}\n                style={[\n                  {\n                    position: 'absolute',\n                    bottom: getPosition(index) + (stackItem.marginBottom || 0),\n                    width: '100%',\n                    height:\n                      (stackItem.value * (containerHeight || 200)) /\n                        (maxValue || 200) -\n                      (stackItem.marginBottom || 0),\n                    backgroundColor: stackItem.color || 'black',\n                    borderRadius:\n                      stackItem.borderRadius || props.barBorderRadius || 0,\n                  },\n                  !props.barBorderRadius &&\n                    !stackItem.borderRadius && {\n                      borderTopLeftRadius: stackItem.borderTopLeftRadius || 0,\n                      borderTopRightRadius: stackItem.borderTopRightRadius || 0,\n                      borderBottomLeftRadius:\n                        stackItem.borderBottomLeftRadius || 0,\n                      borderBottomRightRadius:\n                        stackItem.borderBottomRightRadius || 0,\n                    },\n                ]}\n              />\n            );\n          })}\n        </View>\n        {item.topLabelComponent && (\n          <View\n            style={[\n              {\n                position: 'absolute',\n                top: (item.barWidth || props.barWidth || 30) * -1,\n                height: item.barWidth || props.barWidth || 30,\n                width: item.barWidth || props.barWidth || 30,\n                justifyContent:\n                  props.horizontal && !props.intactTopLabel\n                    ? 'center'\n                    : 'flex-end',\n                alignItems: 'center',\n              },\n              props.horizontal &&\n                !props.intactTopLabel && {transform: [{rotate: '270deg'}]},\n              item.topLabelContainerStyle,\n            ]}>\n            {item.topLabelComponent()}\n          </View>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <View\n      style={[\n        {\n          // overflow: 'visible',\n          marginBottom: 60,\n          width: item.stacks[0].barWidth || props.barWidth || 30,\n          height: getTotalHeight(),\n          marginRight: spacing,\n        },\n      ]}>\n      {props.showVerticalLines && (\n        <View\n          style={{\n            zIndex: props.verticalLinesZIndex,\n            position: 'absolute',\n            height: (containerHeight || 200) + 15,\n            width: props.verticalLinesThickness,\n            bottom: 0,\n            left: (item.barWidth || props.barWidth || 30) / 2,\n            backgroundColor: props.verticalLinesColor,\n          }}\n        />\n      )}\n      {props.showXAxisIndices && (\n        <View\n          style={{\n            zIndex: 2,\n            position: 'absolute',\n            height: props.xAxisIndicesHeight,\n            width: props.xAxisIndicesWidth,\n            bottom: 0,\n            left: (item.barWidth || props.barWidth || 30) / 2,\n            backgroundColor: props.xAxisIndicesColor,\n          }}\n        />\n      )}\n      {static2DSimple(item)}\n      {renderLabel(item.label || '', item.labelTextStyle)}\n    </View>\n  );\n};\n\nexport default RenderStackBars;\n"]},"metadata":{},"sourceType":"script"}