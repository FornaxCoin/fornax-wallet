{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateEmail = exports.getWeb3 = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _hdwalletProvider = _interopRequireDefault(require(\"@truffle/hdwallet-provider\"));\n\nvar _web = _interopRequireDefault(require(\"web3\"));\n\nvar web3Config = {\n  providerOrUrl: 'wss://node.watchfornax.com/ws',\n  network_id: 13936,\n  confirmations: 10,\n  timeoutBlocks: 200,\n  skipDryRun: true\n};\n\nvar getWeb3 = function getWeb3(mnemonicPhrase) {\n  try {\n    var provider = new _hdwalletProvider.default((0, _extends2.default)({\n      mnemonic: {\n        phrase: mnemonicPhrase.trim()\n      }\n    }, web3Config));\n    var web3 = new _web.default(provider);\n    return web3;\n  } catch (error) {\n    console.log('Web3 Connection Failed');\n  }\n};\n\nexports.getWeb3 = getWeb3;\n\nvar validateEmail = function validateEmail(email) {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nexports.validateEmail = validateEmail;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/utils/common.ts"],"names":["web3Config","providerOrUrl","network_id","confirmations","timeoutBlocks","skipDryRun","getWeb3","mnemonicPhrase","provider","HDWalletProvider","mnemonic","phrase","trim","web3","Web3","error","console","log","validateEmail","email","re","test","String","toLowerCase"],"mappings":";;;;;;;;;AAAA;;AACA;;AAGA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,aAAa,EAAE,+BADE;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,aAAa,EAAE,EAHE;AAIjBC,EAAAA,aAAa,EAAE,GAJE;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAAnB;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,cAAD,EAA4B;AAC1C,MAAI;AACF,QAAMC,QAAQ,GAAG,IAAIC,yBAAJ;AACfC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,MAAM,EAAEJ,cAAc,CAACK,IAAf;AADA;AADK,OAIZZ,UAJY,EAAjB;AAMA,QAAMa,IAAI,GAAG,IAAIC,YAAJ,CAASN,QAAT,CAAb;AACA,WAAOK,IAAP;AACD,GATD,CASE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;AACF,CAbD;;;;AAeA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAgB;AACpC,MAAMC,EAAE,GAAG,yJAAX;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAR,CAAP;AACD,CAHD","sourcesContent":["import HDWalletProvider from '@truffle/hdwallet-provider';\r\nimport Web3 from 'web3';\r\n// const HDWalletProvider = require('@truffle/hdwallet-provider');\r\n\r\nconst web3Config = {\r\n  providerOrUrl: 'wss://node.watchfornax.com/ws',\r\n  network_id: 13936,\r\n  confirmations: 10,\r\n  timeoutBlocks: 200,\r\n  skipDryRun: true,\r\n};\r\n\r\nconst getWeb3 = (mnemonicPhrase: string) => {\r\n  try {\r\n    const provider = new HDWalletProvider({\r\n      mnemonic: {\r\n        phrase: mnemonicPhrase.trim(),\r\n      },\r\n      ...web3Config,\r\n    });\r\n    const web3 = new Web3(provider);\r\n    return web3;\r\n  } catch (error) {\r\n    console.log('Web3 Connection Failed');\r\n  }\r\n};\r\n\r\nconst validateEmail = (email: any) => {\r\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());  \r\n}\r\n\r\nexport { getWeb3, validateEmail };\r\n"]},"metadata":{},"sourceType":"script"}