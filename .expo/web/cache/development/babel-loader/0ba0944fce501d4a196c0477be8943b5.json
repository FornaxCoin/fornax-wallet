{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Wallet = require(\"../redux/reducers/Wallet\");\n\nvar _reactNativeFlashMessage = require(\"react-native-flash-message\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\src\\\\screens\\\\ImportCard.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\nvar backLines = '../../assets/images/Group_37background.png';\nvar backCard = '../../assets/images/Group_36card.png';\n\nvar styles = _reactNative.StyleSheet.create({\n  fornaxBox: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  txnText: {\n    marginLeft: 17,\n    fontSize: 16,\n    color: '#ffffff',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium',\n    marginTop: -5\n  },\n  buttonClose: {\n    backgroundColor: '#b27f29',\n    width: 240,\n    alignSelf: 'center'\n  },\n  button: {\n    borderRadius: 20,\n    paddingVertical: 18,\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('5'),\n    marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('10')\n  },\n  textStyle: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center',\n    marginBottom: 10\n  },\n  backIcon: {\n    marginLeft: 26,\n    marginTop: 32\n  },\n  fornaxIcon: {\n    marginBottom: 30\n  },\n  fornaxInnerBox: {\n    flex: 0,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('5'),\n    marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('4')\n  },\n  inputBox: {\n    width: 300,\n    marginVertical: 13,\n    marginTop: 300\n  },\n  inputLabel: {\n    fontSize: 16,\n    color: '#b27f29',\n    marginTop: 8,\n    marginBottom: 10,\n    fontFamily: 'Quicksand-Medium'\n  },\n  input: {\n    height: 40,\n    borderBottomWidth: 2,\n    borderBottomColor: '#ffffff',\n    fontFamily: 'Quicksand-Medium',\n    color: '#ffffff',\n    fontSize: 16\n  },\n  center: {\n    top: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(-5),\n    zIndex: -99,\n    position: 'absolute',\n    alignSelf: 'center'\n  }\n});\n\nvar ImportCard = function ImportCard(props) {\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var navigate = props.navigation.navigate;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      privateKey = _useState2[0],\n      setPrivateKey = _useState2[1];\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (_ref) {\n    var wallet = _ref.wallet;\n    return {\n      web3: wallet == null ? void 0 : wallet.web3,\n      accounts: wallet == null ? void 0 : wallet.accounts\n    };\n  }),\n      web3 = _useSelector.web3,\n      accounts = _useSelector.accounts;\n\n  var storeDataAsync = function _callee(account) {\n    var _accounts, accountList;\n\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _accounts = [];\n            _context.next = 4;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('accountList'));\n\n          case 4:\n            accountList = _context.sent;\n\n            if (accountList !== null) {\n              _accounts.push.apply(_accounts, (0, _toConsumableArray2.default)(JSON.parse(accountList)));\n\n              _accounts.push(account);\n            }\n\n            _context.next = 8;\n            return _regenerator.default.awrap(_asyncStorage.default.setItem('accountList', JSON.stringify(_accounts)));\n\n          case 8:\n            dispatch((0, _Wallet.setAccounts)(_accounts));\n            navigate('Dashboard');\n            _context.next = 14;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var getBalance = function _callee3(account) {\n    return _regenerator.default.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            web3.eth.getBalance(account == null ? void 0 : account.address).then(function _callee2(bal) {\n              var balance;\n              return _regenerator.default.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!(bal >= 0)) {\n                        _context2.next = 5;\n                        break;\n                      }\n\n                      _context2.next = 3;\n                      return _regenerator.default.awrap(web3.utils.fromWei(bal, 'ether'));\n\n                    case 3:\n                      balance = _context2.sent;\n                      storeDataAsync((0, _extends2.default)({}, account, {\n                        balance: balance\n                      }));\n\n                    case 5:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }, function (error) {\n              console.log(error, 'getBalance');\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ignoreLength = true;\n\n  var handleImport = function _callee4() {\n    var found, account;\n    return _regenerator.default.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n\n            if (!web3) {\n              _context4.next = 16;\n              break;\n            }\n\n            found = accounts.length > 0 && accounts.find(function (acc) {\n              return acc.privateKey === privateKey;\n            });\n\n            if (!found) {\n              _context4.next = 8;\n              break;\n            }\n\n            getBalance(found);\n            (0, _reactNativeFlashMessage.showMessage)({\n              message: \"Adress already Exist!\",\n              description: \"This address is already exist\",\n              type: \"info\"\n            });\n            _context4.next = 16;\n            break;\n\n          case 8:\n            if (!(privateKey.toString().trim().length === 64)) {\n              _context4.next = 15;\n              break;\n            }\n\n            _context4.next = 11;\n            return _regenerator.default.awrap(web3.eth.accounts.privateKeyToAccount(privateKey.trim(), [ignoreLength]));\n\n          case 11:\n            account = _context4.sent;\n            getBalance(account);\n            _context4.next = 16;\n            break;\n\n          case 15:\n            (0, _reactNativeFlashMessage.showMessage)({\n              message: \"Private Key Invalid!\",\n              description: \"Please enter valid Private key!\",\n              type: \"info\"\n            });\n\n          case 16:\n            _context4.next = 22;\n            break;\n\n          case 18:\n            _context4.prev = 18;\n            _context4.t0 = _context4[\"catch\"](0);\n            (0, _reactNativeFlashMessage.showMessage)({\n              message: \"Private Key Invalid!\",\n              description: \"Please enter valid Private key!\",\n              type: \"info\"\n            });\n            console.log(_context4.t0);\n\n          case 22:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 18]], Promise);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('AddCard');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.backIcon,\n    source: require(BackIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }))), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxInnerBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.center,\n    source: require(backLines),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Image, {\n    style: styles.center,\n    source: require(backCard),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, \"Import Card\")), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.inputLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Private Key\"), _react.default.createElement(_reactNative.TextInput, {\n    style: styles.input,\n    placeholder: \"Private Key\",\n    placeholderTextColor: \"#bdbdbd\",\n    onChangeText: function onChangeText(e) {\n      return setPrivateKey(e);\n    },\n    value: privateKey,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.Pressable, {\n    onPress: handleImport,\n    style: [styles.button, styles.buttonClose],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.txnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, \"Continue\"))));\n};\n\nvar _default = ImportCard;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/screens/ImportCard.tsx"],"names":["BackIcon","backLines","backCard","styles","StyleSheet","create","fornaxBox","flex","flexDirection","alignItems","justifyContent","txnText","marginLeft","fontSize","color","textAlign","fontFamily","marginTop","buttonClose","backgroundColor","width","alignSelf","button","borderRadius","paddingVertical","marginBottom","textStyle","lineHeight","backIcon","fornaxIcon","fornaxInnerBox","inputBox","marginVertical","inputLabel","input","height","borderBottomWidth","borderBottomColor","center","top","zIndex","position","ImportCard","props","dispatch","navigate","navigation","privateKey","setPrivateKey","wallet","web3","accounts","storeDataAsync","account","AsyncStorage","getItem","accountList","push","JSON","parse","setItem","stringify","getBalance","eth","address","then","bal","utils","fromWei","balance","error","console","log","ignoreLength","handleImport","found","length","find","acc","message","description","type","toString","trim","privateKeyToAccount","require","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Image,\r\n  Pressable,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setAccounts } from '../redux/reducers/Wallet';\r\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\r\nimport Wallet from 'ethereumjs-wallet'\r\n\r\nconst BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\r\nconst backLines = '../../assets/images/Group_37background.png';\r\nconst backCard = '../../assets/images/Group_36card.png';\r\n\r\nconst styles = StyleSheet.create({\r\n  fornaxBox: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  txnText: {\r\n    marginLeft: 17,\r\n    fontSize: 16,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n    marginTop: -5,\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: '#b27f29',\r\n    width: 240,\r\n    alignSelf: 'center',\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    paddingVertical: 18,\r\n    marginTop: hp('5'),\r\n    marginBottom: hp('10'),\r\n  },\r\n  textStyle: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  backIcon: {\r\n    marginLeft: 26,\r\n    marginTop: 32,\r\n  },\r\n  fornaxIcon: {\r\n    marginBottom: 30,\r\n  },\r\n  fornaxInnerBox: {\r\n    flex: 0,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    marginTop: hp('5'),\r\n    marginBottom: hp('4'),\r\n  },\r\n  inputBox: {\r\n    width: 300,\r\n    marginVertical: 13,\r\n    marginTop: 300,\r\n  },\r\n  inputLabel: {\r\n    fontSize: 16,\r\n    color: '#b27f29',\r\n    marginTop: 8,\r\n    marginBottom: 10,\r\n    fontFamily: 'Quicksand-Medium',\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: '#ffffff',\r\n    fontFamily: 'Quicksand-Medium',\r\n    color: '#ffffff',\r\n    fontSize: 16,\r\n  },\r\n  center: {\r\n    top: hp(-5),\r\n    zIndex: -99,\r\n    position: 'absolute',\r\n    alignSelf: 'center',\r\n  },\r\n});\r\n\r\nconst ImportCard = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = props.navigation.navigate;\r\n  const [privateKey, setPrivateKey] = useState('');\r\n\r\n  const { web3, accounts } = useSelector(({ wallet }: any) => {\r\n    return {\r\n      web3: wallet?.web3,\r\n      accounts: wallet?.accounts,\r\n    };\r\n  });\r\n\r\n  const storeDataAsync = async (account: any) => {\r\n    try {\r\n      const accounts: any = [];\r\n      const accountList = await AsyncStorage.getItem('accountList');\r\n      if (accountList !== null) {\r\n        accounts.push(...JSON.parse(accountList));\r\n        accounts.push(account);\r\n      }\r\n      await AsyncStorage.setItem('accountList', JSON.stringify(accounts));\r\n      dispatch(setAccounts(accounts));\r\n      navigate('Dashboard');\r\n    } catch (error) {\r\n      // Error saving data 0xde863f561914f42e185fa0dff531c5bb5ae35423bd3fea130493545df324e533\r\n    }\r\n  };\r\n\r\n  const getBalance = async (account: any) => {\r\n    web3.eth.getBalance(account?.address).then(\r\n      async (bal: any) => {\r\n        if (bal >= 0) {\r\n          const balance = await web3.utils.fromWei(bal, 'ether');\r\n          storeDataAsync({ ...account, balance });\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(error, 'getBalance');\r\n      },\r\n    );\r\n  };\r\n\r\n  const ignoreLength: any = true;\r\n\r\n  const handleImport = async () => {\r\n    try {\r\n      if (web3) {\r\n        const found = accounts.length > 0 && accounts.find((acc: any) => acc.privateKey === privateKey)\r\n        if(found) {\r\n          getBalance(found);\r\n          showMessage({\r\n            message: \"Adress already Exist!\",\r\n            description: \"This address is already exist\",\r\n            type: \"info\",\r\n          });\r\n        } else {\r\n          if (privateKey.toString().trim().length === 64) {\r\n            const account = await web3.eth.accounts.privateKeyToAccount(\r\n              privateKey.trim(),\r\n              [ignoreLength],\r\n            );\r\n            getBalance(account);\r\n          } else {\r\n            showMessage({\r\n              message: \"Private Key Invalid!\",\r\n              description: \"Please enter valid Private key!\",\r\n              type: \"info\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      showMessage({\r\n        message: \"Private Key Invalid!\",\r\n        description: \"Please enter valid Private key!\",\r\n        type: \"info\",\r\n      });\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <Pressable onPress={() => navigate('AddCard')}>\r\n          <Image style={styles.backIcon} source={require(BackIcon)} />\r\n        </Pressable>\r\n      </View>\r\n      <View style={styles.fornaxInnerBox}>\r\n        <View>\r\n          <Image style={styles.center} source={require(backLines)} />\r\n          <Image style={styles.center} source={require(backCard)} />\r\n        </View>\r\n        <Text style={styles.textStyle}>Import Card</Text>\r\n      </View>\r\n      <View style={styles.fornaxBox}>\r\n        <View style={styles.inputBox}>\r\n          <Text style={styles.inputLabel}>Private Key</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Private Key\"\r\n            placeholderTextColor=\"#bdbdbd\"\r\n            onChangeText={e => setPrivateKey(e)}\r\n            value={privateKey}\r\n          />\r\n        </View>\r\n        <Pressable\r\n          onPress={handleImport}\r\n          style={[styles.button, styles.buttonClose]}>\r\n          <Text style={styles.txnText}>Continue</Text>\r\n        </Pressable>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImportCard;\r\n"]},"metadata":{},"sourceType":"script"}