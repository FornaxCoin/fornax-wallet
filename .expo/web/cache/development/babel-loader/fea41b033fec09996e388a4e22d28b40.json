{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _bip = require(\"bip39\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _Wallet = require(\"../redux/reducers/Wallet\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _common = require(\"../utils/common\");\n\nvar _reactNativeSpinkit = _interopRequireDefault(require(\"react-native-spinkit\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\src\\\\screens\\\\WalletSetup.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar SettingImage = '../../assets/images/Settingmaga.png';\nvar BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\n\nvar styles = _reactNative.StyleSheet.create({\n  fornaxBox: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 0\n  },\n  secondaryTxnText: {\n    color: '#363853'\n  },\n  txnText: {\n    marginLeft: 17,\n    fontSize: 16,\n    color: '#ffffff',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium',\n    marginTop: -5\n  },\n  buttonClose: {\n    backgroundColor: '#b27f29',\n    width: 240,\n    alignSelf: 'center',\n    marginTop: 25\n  },\n  button: {\n    borderRadius: 20,\n    paddingVertical: 18\n  },\n  secondaryButton: {\n    backgroundColor: '#fff',\n    color: '#b27f29',\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('30')\n  },\n  textStyle: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center'\n  },\n  backIcon: {\n    marginLeft: 26,\n    marginTop: 32\n  },\n  fornaxIcon: {\n    marginBottom: 44\n  },\n  fornaxInnerBox: {\n    flex: 0,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('5'),\n    marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('4')\n  },\n  fornaxMiniText: {\n    fontSize: 16,\n    color: '#bdbdbd',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium'\n  },\n  loaderBack: {\n    flex: 1,\n    backgroundColor: '#00000096',\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 10,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    top: 0\n  }\n});\n\nvar WalletSetup = function WalletSetup(props) {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      loader = _useState2[0],\n      setLoader = _useState2[1];\n\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var navigate = props.navigation.navigate;\n\n  var storeDataAsync = function _callee(account, mnemonicPhrase) {\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.multiRemove(['accountList', 'mnemonicPhrase']));\n\n          case 3:\n            _context.next = 5;\n            return _regenerator.default.awrap(_asyncStorage.default.multiSet([['accountList', JSON.stringify([account])], ['mnemonicPhrase', mnemonicPhrase]]));\n\n          case 5:\n            setLoader(false);\n            navigate('Dashboard');\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            setLoader(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var getBalance = function _callee3(web3, account, mnemonicPhrase) {\n    return _regenerator.default.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            web3.eth.getBalance(account == null ? void 0 : account.address).then(function _callee2(bal) {\n              var balance;\n              return _regenerator.default.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!(bal >= 0)) {\n                        _context2.next = 6;\n                        break;\n                      }\n\n                      _context2.next = 3;\n                      return _regenerator.default.awrap(web3.utils.fromWei(bal, 'ether'));\n\n                    case 3:\n                      balance = _context2.sent;\n                      console.log(balance, \"balance\");\n                      storeDataAsync((0, _extends2.default)({}, account, {\n                        balance: balance\n                      }), mnemonicPhrase);\n\n                    case 6:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }, function (error) {\n              setLoader(false);\n              console.log(error, 'getBalance');\n            });\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleCreateWallet = function _callee4() {\n    var mnemonicPhrase, web3, account;\n    return _regenerator.default.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setLoader(true);\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _regenerator.default.awrap((0, _bip.generateMnemonic)());\n\n          case 4:\n            mnemonicPhrase = _context4.sent;\n            web3 = (0, _common.getWeb3)(mnemonicPhrase);\n\n            if (!web3) {\n              _context4.next = 12;\n              break;\n            }\n\n            dispatch((0, _Wallet.setWeb3)(web3));\n            _context4.next = 10;\n            return _regenerator.default.awrap(web3.eth.accounts.create());\n\n          case 10:\n            account = _context4.sent;\n            getBalance(web3, account, mnemonicPhrase);\n\n          case 12:\n            _context4.next = 18;\n            break;\n\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](1);\n            setLoader(false);\n            console.log(_context4.t0);\n\n          case 18:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[1, 14]], Promise);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, loader && _react.default.createElement(_reactNative.View, {\n    style: styles.loaderBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeSpinkit.default, {\n    isVisible: true,\n    size: 50,\n    type: '9CubeGrid',\n    color: \"#b27f29\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: {\n      zIndex: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('Dashboard');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.backIcon,\n    source: require(BackIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }))), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxInnerBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.fornaxIcon,\n    source: require(SettingImage),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Wallet Setup\"), _react.default.createElement(_reactNative.Text, {\n    style: styles.fornaxMiniText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"Import an existing wallet or create a new one\")), _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('Import');\n    },\n    style: [styles.button, styles.buttonClose, styles.secondaryButton],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [styles.txnText, styles.secondaryTxnText],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"Import using Secret\"), _react.default.createElement(_reactNative.Text, {\n    style: [styles.txnText, styles.secondaryTxnText, {\n      marginTop: 5\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"Recovery Phrase\")), _react.default.createElement(_reactNative.Pressable, {\n    onPress: handleCreateWallet,\n    style: [styles.button, styles.buttonClose, {\n      marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('10')\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.txnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"Create a new Wallet\"))));\n};\n\nvar _default = WalletSetup;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/screens/WalletSetup.tsx"],"names":["SettingImage","BackIcon","styles","StyleSheet","create","fornaxBox","flex","flexDirection","alignItems","justifyContent","zIndex","secondaryTxnText","color","txnText","marginLeft","fontSize","textAlign","fontFamily","marginTop","buttonClose","backgroundColor","width","alignSelf","button","borderRadius","paddingVertical","secondaryButton","textStyle","lineHeight","backIcon","fornaxIcon","marginBottom","fornaxInnerBox","fornaxMiniText","loaderBack","position","right","left","bottom","top","WalletSetup","props","loader","setLoader","dispatch","navigate","navigation","storeDataAsync","account","mnemonicPhrase","AsyncStorage","multiRemove","multiSet","JSON","stringify","getBalance","web3","eth","address","then","bal","utils","fromWei","balance","console","log","error","handleCreateWallet","accounts","require"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Image, Pressable, StyleSheet, Text, View } from 'react-native';\r\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nimport { generateMnemonic } from 'bip39';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { setWeb3 } from '../redux/reducers/Wallet';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getWeb3 } from '../utils/common';\r\nimport Spinner from 'react-native-spinkit';\r\n\r\nconst SettingImage = '../../assets/images/Settingmaga.png';\r\nconst BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\r\n\r\nconst styles = StyleSheet.create({\r\n  fornaxBox: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    zIndex: 0\r\n  },\r\n  secondaryTxnText: {\r\n    color: '#363853',\r\n  },\r\n  txnText: {\r\n    marginLeft: 17,\r\n    fontSize: 16,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n    marginTop: -5,\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: '#b27f29',\r\n    width: 240,\r\n    alignSelf: 'center',\r\n    marginTop: 25,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    paddingVertical: 18,\r\n  },\r\n  secondaryButton: {\r\n    backgroundColor: '#fff',\r\n    color: '#b27f29',\r\n    marginTop: hp('30'),\r\n  },\r\n  textStyle: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n  },\r\n  backIcon: {\r\n    marginLeft: 26,\r\n    marginTop: 32,\r\n  },\r\n  fornaxIcon: {\r\n    marginBottom: 44,\r\n  },\r\n  fornaxInnerBox: {\r\n    flex: 0,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    marginTop: hp('5'),\r\n    marginBottom: hp('4'),\r\n  },\r\n  fornaxMiniText: {\r\n    fontSize: 16,\r\n    color: '#bdbdbd',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n  },\r\n  loaderBack: {\r\n    flex: 1,\r\n    backgroundColor: '#00000096',\r\n    position: 'absolute',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 10,\r\n    right: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    top: 0\r\n  },\r\n});\r\n\r\nconst WalletSetup = (props: any) => {\r\n  const [loader, setLoader] = useState(false)\r\n  const dispatch = useDispatch();\r\n  const navigate = props.navigation.navigate;\r\n\r\n  const storeDataAsync = async (account: any, mnemonicPhrase: string) => {\r\n    try {\r\n      await AsyncStorage.multiRemove(['accountList', 'mnemonicPhrase']);\r\n      await AsyncStorage.multiSet([\r\n        ['accountList', JSON.stringify([account])],\r\n        ['mnemonicPhrase', mnemonicPhrase],\r\n      ]);\r\n      setLoader(false);\r\n      navigate('Dashboard');\r\n    } catch (error) {\r\n      setLoader(false);\r\n      // Error saving data\r\n    }\r\n  };\r\n\r\n  const getBalance = async (web3: any, account: any, mnemonicPhrase: any) => {\r\n    web3.eth.getBalance(account?.address).then(\r\n      async (bal: any) => {\r\n        if (bal >= 0) {\r\n          const balance = await web3.utils.fromWei(bal, 'ether');\r\n          console.log(balance, \"balance\");\r\n          storeDataAsync({ ...account, balance }, mnemonicPhrase);\r\n        }\r\n      },\r\n      (error: any) => {\r\n        setLoader(false);\r\n        console.log(error, 'getBalance');\r\n      },\r\n    );\r\n  };\r\n\r\n  const handleCreateWallet = async () => {\r\n    setLoader(true);\r\n    try {\r\n      const mnemonicPhrase = await generateMnemonic();\r\n      const web3 = getWeb3(mnemonicPhrase);\r\n      if (web3) {\r\n        dispatch(setWeb3(web3));\r\n        const account = await web3.eth.accounts.create();\r\n        getBalance(web3, account, mnemonicPhrase);\r\n      }\r\n    } catch (err) {\r\n      setLoader(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loader && (\r\n        <View style={styles.loaderBack}>\r\n          <Spinner isVisible={true} size={50} type={'9CubeGrid'} color=\"#b27f29\"/>\r\n        </View>\r\n      )}\r\n      <View style={{ zIndex: 0 }}>\r\n        <Pressable onPress={() => navigate('Dashboard')}>\r\n          <Image style={styles.backIcon} source={require(BackIcon)} />\r\n        </Pressable>\r\n      </View>\r\n      <View style={styles.fornaxBox}>\r\n        <View style={styles.fornaxInnerBox}>\r\n          <Image style={styles.fornaxIcon} source={require(SettingImage)} />\r\n          <Text style={styles.textStyle}>Wallet Setup</Text>\r\n          <Text style={styles.fornaxMiniText}>\r\n            Import an existing wallet or create a new one\r\n          </Text>\r\n        </View>\r\n        <Pressable\r\n          onPress={() => navigate('Import')}\r\n          style={[styles.button, styles.buttonClose, styles.secondaryButton]}>\r\n          <Text style={[styles.txnText, styles.secondaryTxnText]}>\r\n            Import using Secret\r\n          </Text>\r\n          <Text\r\n            style={[styles.txnText, styles.secondaryTxnText, { marginTop: 5 }]}>\r\n            Recovery Phrase\r\n          </Text>\r\n        </Pressable>\r\n        <Pressable\r\n          onPress={handleCreateWallet}\r\n          style={[styles.button, styles.buttonClose, { marginBottom: hp('10') }]}>\r\n          <Text style={styles.txnText}>Create a new Wallet</Text>\r\n        </Pressable>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WalletSetup;\r\n"]},"metadata":{},"sourceType":"script"}