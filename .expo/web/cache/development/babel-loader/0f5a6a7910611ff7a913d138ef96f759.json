{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _reactNativeQrcodeScanner = _interopRequireDefault(require(\"react-native-qrcode-scanner\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\src\\\\screens\\\\Pay.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar PayImage = '../../assets/images/pay.png';\nvar BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\nvar qrCodeWidth = (0, _reactNativeResponsiveScreen.heightPercentageToDP)('34');\n\nvar styles = _reactNative.StyleSheet.create({\n  fornaxBox: {\n    flex: 0,\n    flexDirection: 'column',\n    justifyContent: 'flex-start'\n  },\n  textStyle: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center'\n  },\n  backIcon: {\n    marginLeft: 26,\n    marginTop: 32\n  },\n  fornaxIcon: {\n    marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(3)\n  },\n  fornaxInnerBox: {\n    flex: 0,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('5'),\n    marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('4')\n  },\n  fornaxMiniText: {\n    fontSize: 16,\n    color: '#bdbdbd',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium',\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(1.8)\n  },\n  inputBox: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    height: 60,\n    borderRadius: 15,\n    fontFamily: 'Quicksand-Medium',\n    backgroundColor: '#ffffff',\n    color: '#bdbdbd',\n    fontSize: 16,\n    width: 340,\n    marginBottom: 20\n  },\n  input: {\n    fontFamily: 'Quicksand-Medium',\n    fontSize: 16,\n    width: 340,\n    paddingHorizontal: 20\n  },\n  qrCodeImg: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    marginBottom: 20,\n    height: qrCodeWidth,\n    width: qrCodeWidth,\n    borderWidth: 5,\n    borderColor: 'aliceblue',\n    borderRadius: 30,\n    backgroundColor: 'aliceblue'\n  },\n  topLine: {\n    height: 6,\n    backgroundColor: '#021124',\n    width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('49'),\n    position: 'absolute',\n    top: -6\n  },\n  leftLine: {\n    width: 6,\n    backgroundColor: '#021124',\n    height: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('23'),\n    position: 'absolute',\n    left: -6,\n    top: 40\n  },\n  rightLine: {\n    width: 6,\n    backgroundColor: '#021124',\n    height: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('23'),\n    position: 'absolute',\n    right: -6,\n    top: 40\n  },\n  bottomLine: {\n    height: 6,\n    backgroundColor: '#021124',\n    width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('49'),\n    position: 'absolute',\n    bottom: -6\n  },\n  centerText: {\n    flex: 1,\n    fontSize: 18,\n    padding: 42,\n    color: '#777'\n  },\n  cameraContainer: {\n    height: qrCodeWidth - 70,\n    width: qrCodeWidth - 70\n  }\n});\n\nvar Pay = function Pay(props) {\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var navigate = props.navigation.navigate;\n  var scanner = (0, _react.useRef)(null);\n\n  var _useSelector = (0, _reactRedux.useSelector)(function (_ref) {\n    var wallet = _ref.wallet;\n    return {\n      web3: wallet == null ? void 0 : wallet.web3,\n      accounts: wallet == null ? void 0 : wallet.accounts,\n      defaultAdress: wallet == null ? void 0 : wallet.defaultAdress\n    };\n  }),\n      accounts = _useSelector.accounts,\n      defaultAdress = _useSelector.defaultAdress;\n\n  var onSuccess = function onSuccess(e) {\n    _reactNative.Linking.openURL(e.data).catch(function (err) {\n      return console.error('An error occured', err);\n    });\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('Dashboard');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.backIcon,\n    source: require(BackIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }))), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxInnerBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.fornaxIcon,\n    source: require(PayImage),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Pay Me\"), _react.default.createElement(_reactNative.Text, {\n    style: styles.fornaxMiniText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Scan QR code\"), _react.default.createElement(_reactNative.Text, {\n    style: styles.fornaxMiniText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"Please move your camera \", \"\\n\", \" over the QR Code\")), _react.default.createElement(_reactNative.View, {\n    style: styles.qrCodeImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeQrcodeScanner.default, {\n    reactivate: true,\n    showMarker: false,\n    ref: scanner,\n    containerStyle: styles.cameraContainer,\n    cameraStyle: styles.cameraContainer,\n    onRead: onSuccess,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.fornaxMiniText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Or pay your bill\"))));\n};\n\nvar _default = Pay;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/screens/Pay.tsx"],"names":["PayImage","BackIcon","qrCodeWidth","styles","StyleSheet","create","fornaxBox","flex","flexDirection","justifyContent","textStyle","fontSize","color","lineHeight","fontFamily","textAlign","backIcon","marginLeft","marginTop","fornaxIcon","marginBottom","fornaxInnerBox","alignItems","fornaxMiniText","inputBox","height","borderRadius","backgroundColor","width","input","paddingHorizontal","qrCodeImg","alignSelf","borderWidth","borderColor","topLine","position","top","leftLine","left","rightLine","right","bottomLine","bottom","centerText","padding","cameraContainer","Pay","props","dispatch","navigate","navigation","scanner","wallet","web3","accounts","defaultAdress","onSuccess","e","Linking","openURL","data","catch","err","console","error","require"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport { Image, Linking, Pressable, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport {\r\n  heightPercentageToDP as hp,\r\n  widthPercentageToDP as wp,\r\n} from 'react-native-responsive-screen';\r\nimport QRCodeScanner from 'react-native-qrcode-scanner';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst PayImage = '../../assets/images/pay.png';\r\nconst BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\r\nconst  qrCodeWidth = hp('34');\r\nconst styles = StyleSheet.create({\r\n  fornaxBox: {\r\n    flex: 0,\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  textStyle: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n  },\r\n  backIcon: {\r\n    marginLeft: 26,\r\n    marginTop: 32,\r\n  },\r\n  fornaxIcon: {\r\n    // width:80,\r\n    // height:80,\r\n    // width:  hp(9),\r\n    // height: hp(9),\r\n    // marginBottom: 30,\r\n    marginBottom: hp(3),\r\n  },\r\n  fornaxInnerBox: {\r\n    flex: 0,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    marginTop: hp('5'),\r\n    marginBottom: hp('4'),\r\n  },\r\n  fornaxMiniText: {\r\n    fontSize: 16,\r\n    color: '#bdbdbd',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n    // marginTop: 20,\r\n    marginTop: hp(1.8),\r\n  },\r\n  inputBox: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    height: 60,\r\n    borderRadius: 15,\r\n    fontFamily: 'Quicksand-Medium',\r\n    backgroundColor: '#ffffff',\r\n    color: '#bdbdbd',\r\n    fontSize: 16,\r\n    width: 340,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    fontFamily: 'Quicksand-Medium',\r\n    fontSize: 16,\r\n    width: 340,\r\n    paddingHorizontal: 20,\r\n  },\r\n  qrCodeImg: {\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    marginBottom: 20,\r\n    height:qrCodeWidth,\r\n    width: qrCodeWidth,\r\n    borderWidth: 5,\r\n    borderColor: 'aliceblue',\r\n    borderRadius: 30,\r\n    backgroundColor: 'aliceblue',\r\n  },\r\n  topLine: {\r\n    height: 6,\r\n    backgroundColor: '#021124',\r\n    width: wp('49'),\r\n    position: 'absolute',\r\n    top: -6,\r\n  },\r\n  leftLine: {\r\n    width: 6,\r\n    backgroundColor: '#021124',\r\n    height: hp('23'),\r\n    position: 'absolute',\r\n    left: -6,\r\n    top: 40,\r\n  },\r\n  rightLine: {\r\n    width: 6,\r\n    backgroundColor: '#021124',\r\n    height: hp('23'),\r\n    position: 'absolute',\r\n    right: -6,\r\n    top: 40,\r\n  },\r\n  bottomLine: {\r\n    height: 6,\r\n    backgroundColor: '#021124',\r\n    width: wp('49'),\r\n    position: 'absolute',\r\n    bottom: -6,\r\n  },\r\n  centerText: {\r\n    flex: 1,\r\n    fontSize: 18,\r\n    padding: 42,\r\n    color: '#777'\r\n  },\r\n  cameraContainer: {\r\n    height: qrCodeWidth -70,\r\n    width: qrCodeWidth-70,\r\n  }\r\n});\r\n\r\nconst Pay = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = props.navigation.navigate;\r\n  let scanner = useRef(null);\r\n\r\n  const { accounts, defaultAdress } = useSelector(({ wallet }: any) => {\r\n    return {\r\n      web3: wallet?.web3,\r\n      accounts: wallet?.accounts,\r\n      defaultAdress: wallet?.defaultAdress,\r\n    };\r\n  });\r\n\r\n  const onSuccess = (e: any) => {\r\n    Linking.openURL(e.data).catch(err =>\r\n      console.error('An error occured', err)\r\n    );\r\n    // const found = accounts.find((acc: any) => acc.address === defaultAdress);\r\n    // dispatch(setTxnsInfo({ from: { ...found }, to: e.data}));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <Pressable onPress={() => navigate('Dashboard')}>\r\n          <Image style={styles.backIcon} source={require(BackIcon)} />\r\n        </Pressable>\r\n      </View>\r\n      <View style={styles.fornaxBox}>\r\n        <View style={styles.fornaxInnerBox}>\r\n          <Image style={styles.fornaxIcon} source={require(PayImage)} />\r\n          <Text style={styles.textStyle}>Pay Me</Text>\r\n          <Text style={styles.fornaxMiniText}>Scan QR code</Text>\r\n          <Text style={styles.fornaxMiniText}>Please move your camera {\"\\n\"} over the QR Code</Text>\r\n        </View>\r\n        <View style={styles.qrCodeImg}>\r\n          {/*<View style={styles.topLine} />*/}\r\n          {/*<View style={styles.leftLine} />*/}\r\n          <QRCodeScanner\r\n            reactivate={true}\r\n            showMarker={false}\r\n            ref={scanner}\r\n            containerStyle={styles.cameraContainer}\r\n            cameraStyle={styles.cameraContainer}\r\n            onRead={onSuccess}\r\n          />\r\n          {/*<View style={styles.rightLine} />*/}\r\n          {/*<View style={styles.bottomLine} />*/}\r\n        </View>\r\n        <View>\r\n          <Text style={styles.fornaxMiniText}>Or pay your bill</Text>\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pay;\r\n"]},"metadata":{},"sourceType":"script"}