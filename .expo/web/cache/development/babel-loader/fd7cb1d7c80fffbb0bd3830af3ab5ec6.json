{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeSvg = _interopRequireWildcard(require(\"react-native-svg\"));\n\nvar _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\node_modules\\\\react-native-gifted-charts\\\\src\\\\Components\\\\lineSvg.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction Rule(props) {\n  var _props$config = props.config,\n      thickness = _props$config.thickness,\n      width = _props$config.width,\n      color = _props$config.color,\n      type = _props$config.type,\n      dashWidth = _props$config.dashWidth,\n      dashGap = _props$config.dashGap;\n\n  if (type === 'solid') {\n    return React.createElement(_reactNativeSvg.default, (0, _extends2.default)({\n      height: thickness,\n      width: width\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }), React.createElement(_reactNativeSvg.G, {\n      fill: \"lightgray\",\n      stroke: color,\n      strokeWidth: thickness,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, React.createElement(_reactNativeSvg.Path, {\n      d: \"M0 \" + thickness / 2 + \"h\" + width,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return React.createElement(_reactNativeSvg.default, (0, _extends2.default)({\n    height: thickness,\n    width: width\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), React.createElement(_reactNativeSvg.G, {\n    fill: \"lightgray\",\n    stroke: color,\n    strokeWidth: thickness,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNativeSvg.Path, {\n    strokeDasharray: dashWidth + \",\" + dashGap,\n    d: \"M0 \" + thickness / 2 + \"h\" + width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar _default = Rule;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/node_modules/react-native-gifted-charts/src/Components/lineSvg.tsx"],"names":["Rule","props","config","thickness","width","color","type","dashWidth","dashGap"],"mappings":";;;;;;;;;AAAA;;AAEA;;;;;;;;AAeA,SAASA,IAAT,CAAcC,KAAd,EAAiC;AAC/B,sBAA4DA,KAAK,CAACC,MAAlE;AAAA,MAAOC,SAAP,iBAAOA,SAAP;AAAA,MAAkBC,KAAlB,iBAAkBA,KAAlB;AAAA,MAAyBC,KAAzB,iBAAyBA,KAAzB;AAAA,MAAgCC,IAAhC,iBAAgCA,IAAhC;AAAA,MAAsCC,SAAtC,iBAAsCA,SAAtC;AAAA,MAAiDC,OAAjD,iBAAiDA,OAAjD;;AACA,MAAIF,IAAI,KAAK,OAAb,EAAsB;AACpB,WACE,oBAAC,uBAAD;AAAK,MAAA,MAAM,EAAEH,SAAb;AAAwB,MAAA,KAAK,EAAEC;AAA/B,OAA0CH,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,iBAAD;AAAG,MAAA,IAAI,EAAC,WAAR;AAAoB,MAAA,MAAM,EAAEI,KAA5B;AAAmC,MAAA,WAAW,EAAEF,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,oBAAD;AAAM,MAAA,CAAC,UAAQA,SAAS,GAAG,CAApB,SAAyBC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AACD,SACE,oBAAC,uBAAD;AAAK,IAAA,MAAM,EAAED,SAAb;AAAwB,IAAA,KAAK,EAAEC;AAA/B,KAA0CH,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,iBAAD;AAAG,IAAA,IAAI,EAAC,WAAR;AAAoB,IAAA,MAAM,EAAEI,KAA5B;AAAmC,IAAA,WAAW,EAAEF,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AACE,IAAA,eAAe,EAAKI,SAAL,SAAkBC,OADnC;AAEE,IAAA,CAAC,UAAQL,SAAS,GAAG,CAApB,SAAyBC,KAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAUD;;eAEcJ,I","sourcesContent":["import * as React from 'react';\nimport {ColorValue} from 'react-native';\nimport Svg, {G, Path} from 'react-native-svg';\n\ntype ruleProps = {\n  thickness: number;\n  width: number;\n  color: ColorValue | String | any;\n  type: String;\n  dashWidth: number;\n  dashGap: number;\n};\n\ntype configType = {\n  config: ruleProps;\n};\n\nfunction Rule(props: configType) {\n  const {thickness, width, color, type, dashWidth, dashGap} = props.config;\n  if (type === 'solid') {\n    return (\n      <Svg height={thickness} width={width} {...props}>\n        <G fill=\"lightgray\" stroke={color} strokeWidth={thickness}>\n          <Path d={`M0 ${thickness / 2}h${width}`} />\n        </G>\n      </Svg>\n    );\n  }\n  return (\n    <Svg height={thickness} width={width} {...props}>\n      <G fill=\"lightgray\" stroke={color} strokeWidth={thickness}>\n        <Path\n          strokeDasharray={`${dashWidth},${dashGap}`}\n          d={`M0 ${thickness / 2}h${width}`}\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport default Rule;\n"]},"metadata":{},"sourceType":"script"}