{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\src\\\\screens\\\\Intro.tsx\";\n\nvar styles = _reactNative.StyleSheet.create({\n  fornaxBox: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 165\n  },\n  fornaxText: {\n    fontSize: 48,\n    color: '#b27f29',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Bold'\n  },\n  txnText: {\n    fontSize: 16,\n    color: '#ffffff',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium',\n    marginTop: 4\n  },\n  buttonClose: {\n    backgroundColor: '#b27f29',\n    width: 240,\n    alignSelf: 'center',\n    marginTop: 185\n  },\n  button: {\n    borderRadius: 20,\n    paddingVertical: 18\n  },\n  textStyle: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center'\n  }\n});\n\nvar Intro = function Intro(props) {\n  var navigate = props.navigation.navigate;\n\n  var handleStarted = function _callee() {\n    var registerUser;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('registerUser'));\n\n          case 2:\n            registerUser = _context.sent;\n\n            if (registerUser === null) {\n              navigate('Signup');\n            } else {\n              navigate('Login');\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.fornaxText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Fornax Wallet\"), _react.default.createElement(_reactNative.Text, {\n    style: styles.txnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Easy way for all your transactions\"), _react.default.createElement(_reactNative.Pressable, {\n    onPress: handleStarted,\n    style: [styles.button, styles.buttonClose],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Get Started\"))));\n};\n\nvar _default = Intro;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/screens/Intro.tsx"],"names":["styles","StyleSheet","create","fornaxBox","flex","flexDirection","alignItems","justifyContent","marginTop","fornaxText","fontSize","color","textAlign","fontFamily","txnText","buttonClose","backgroundColor","width","alignSelf","button","borderRadius","paddingVertical","textStyle","lineHeight","Intro","props","navigate","navigation","handleStarted","AsyncStorage","getItem","registerUser"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;AAEA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,SAAS,EAAE;AALF,GADoB;AAQ/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,KAAK,EAAE,SAFG;AAGVC,IAAAA,SAAS,EAAE,QAHD;AAIVC,IAAAA,UAAU,EAAE;AAJF,GARmB;AAc/BC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,KAAK,EAAE,SAFA;AAGPC,IAAAA,SAAS,EAAE,QAHJ;AAIPC,IAAAA,UAAU,EAAE,kBAJL;AAKPL,IAAAA,SAAS,EAAE;AALJ,GAdsB;AAqB/BO,EAAAA,WAAW,EAAE;AACXC,IAAAA,eAAe,EAAE,SADN;AAEXC,IAAAA,KAAK,EAAE,GAFI;AAGXC,IAAAA,SAAS,EAAE,QAHA;AAIXV,IAAAA,SAAS,EAAE;AAJA,GArBkB;AA2B/BW,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAE,EADR;AAENC,IAAAA,eAAe,EAAE;AAFX,GA3BuB;AA+B/BC,EAAAA,SAAS,EAAE;AACTZ,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,KAAK,EAAE,SAFE;AAGTY,IAAAA,UAAU,EAAE,EAHH;AAITV,IAAAA,UAAU,EAAE,gBAJH;AAKTD,IAAAA,SAAS,EAAE;AALF;AA/BoB,CAAlB,CAAf;;AAwCA,IAAMY,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAgB;AAC5B,MAAMC,QAAQ,GAAGD,KAAK,CAACE,UAAN,CAAiBD,QAAlC;;AAEA,MAAME,aAAa,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACOC,sBAAaC,OAAb,CAAqB,cAArB,CADP;;AAAA;AACdC,YAAAA,YADc;;AAEpB,gBAAIA,YAAY,KAAK,IAArB,EAA2B;AACzBL,cAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,aAFD,MAEO;AACLA,cAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AASA,SACE,4DACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE1B,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACS,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACc,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFF,EAGE,6BAAC,sBAAD;AACE,IAAA,OAAO,EAAEc,aADX;AAEE,IAAA,KAAK,EAAE,CAAC5B,MAAM,CAACmB,MAAR,EAAgBnB,MAAM,CAACe,WAAvB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACsB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CAHF,CADF,CADF;AAaD,CAzBD;;eA2BeE,K","sourcesContent":["import React from 'react';\r\nimport { Pressable, StyleSheet, Text, View } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst styles = StyleSheet.create({\r\n  fornaxBox: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 165,\r\n  },\r\n  fornaxText: {\r\n    fontSize: 48,\r\n    color: '#b27f29',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Bold',\r\n  },\r\n  txnText: {\r\n    fontSize: 16,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n    marginTop: 4,\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: '#b27f29',\r\n    width: 240,\r\n    alignSelf: 'center',\r\n    marginTop: 185,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    paddingVertical: 18,\r\n  },\r\n  textStyle: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nconst Intro = (props: any) => {\r\n  const navigate = props.navigation.navigate;\r\n\r\n  const handleStarted = async () => {\r\n    const registerUser = await AsyncStorage.getItem('registerUser');\r\n    if (registerUser === null) {\r\n      navigate('Signup');\r\n    } else {\r\n      navigate('Login');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.fornaxBox}>\r\n        <Text style={styles.fornaxText}>Fornax Wallet</Text>\r\n        <Text style={styles.txnText}>Easy way for all your transactions</Text>\r\n        <Pressable\r\n          onPress={handleStarted}\r\n          style={[styles.button, styles.buttonClose]}>\r\n          <Text style={styles.textStyle}>Get Started</Text>\r\n        </Pressable>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n"]},"metadata":{},"sourceType":"script"}