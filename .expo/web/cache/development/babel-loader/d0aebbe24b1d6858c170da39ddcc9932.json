{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _CardCarousel = _interopRequireDefault(require(\"../components/CardCarousel\"));\n\nvar _MainTab = _interopRequireDefault(require(\"../components/MainTab\"));\n\nvar _NaviTab = _interopRequireDefault(require(\"../components/NaviTab\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Wallet = require(\"../redux/reducers/Wallet\");\n\nvar _common = require(\"../utils/common\");\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _reactNativeSpinkit = _interopRequireDefault(require(\"react-native-spinkit\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\src\\\\screens\\\\Dashboard.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar BellIcon = '../../assets/images/bell.png';\nvar SettingIcon = '../../assets/images/setting.png';\n\nvar styles = _reactNative.StyleSheet.create({\n  fornaxBox: {\n    flex: 1,\n    flexDirection: 'column',\n    marginTop: 30,\n    marginHorizontal: 20,\n    zIndex: 0\n  },\n  navBar: {\n    flexDirection: 'row',\n    alignContent: 'flex-end',\n    alignSelf: 'flex-end',\n    position: 'relative'\n  },\n  bellImg: {\n    width: 24,\n    height: 26,\n    marginHorizontal: 27\n  },\n  settingImg: {\n    width: 26,\n    height: 26\n  },\n  fornaxText: {\n    fontSize: 28,\n    color: '#b27f29',\n    textAlign: 'left',\n    fontFamily: 'Quicksand-Bold',\n    marginTop: 5,\n    marginBottom: 5\n  },\n  cardCarousel: {\n    height: 216,\n    width: 450\n  },\n  tabBox: {\n    height: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(45),\n    marginBottom: 30\n  },\n  badge: {\n    width: 7,\n    height: 7,\n    borderRadius: 20,\n    backgroundColor: '#ff3333',\n    position: 'absolute',\n    right: 40,\n    top: 0\n  },\n  loaderBack: {\n    flex: 1,\n    backgroundColor: '#00000057',\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 10,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    top: 0\n  },\n  navTabBox: {\n    height: 70\n  },\n  colco: {\n    position: \"absolute\",\n    width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)(90),\n    bottom: 5\n  },\n  innerContainer: {\n    flexDirection: 'column'\n  },\n  extrahight: {\n    height: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(10)\n  }\n});\n\nvar Dashboard = function Dashboard(props) {\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      loader = _useState2[0],\n      setLoader = _useState2[1];\n\n  var navigate = props.navigation.navigate;\n\n  var checkAccount = function _callee() {\n    var value, data;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('accountList'));\n\n          case 3:\n            value = _context.sent;\n\n            if (value != null) {\n              data = JSON.parse(value);\n              dispatch((0, _Wallet.setAccounts)(data));\n              setLoader(false);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('Account Error', _context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var connectWallet = function _callee2() {\n    var mnemonicPhrase, web3;\n    return _regenerator.default.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('mnemonicPhrase'));\n\n          case 3:\n            mnemonicPhrase = _context2.sent;\n            web3 = mnemonicPhrase && (0, _common.getWeb3)(mnemonicPhrase);\n\n            if (web3) {\n              checkAccount();\n              dispatch((0, _Wallet.setWeb3)(web3));\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  (0, _react.useEffect)(function () {\n    connectWallet();\n    setLoader(true);\n  }, []);\n  return _react.default.createElement(_react.default.Fragment, null, loader && _react.default.createElement(_reactNative.View, {\n    style: styles.loaderBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeSpinkit.default, {\n    isVisible: true,\n    size: 50,\n    type: '9CubeGrid',\n    color: \"#b27f29\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.navBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.badge,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('Notifications');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    source: require(BellIcon),\n    style: styles.bellImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('Settings');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    source: require(SettingIcon),\n    style: styles.settingImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }))), _react.default.createElement(_reactNative.Text, {\n    style: styles.fornaxText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, \"Dashboard\"), !loader && _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.ScrollView, {\n    style: styles.innerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.cardCarousel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_CardCarousel.default, {\n    navigate: navigate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.tabBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_MainTab.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.extrahight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.colco,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.navTabBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_NaviTab.default, {\n    navigate: navigate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nvar _default = Dashboard;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/screens/Dashboard.tsx"],"names":["BellIcon","SettingIcon","styles","StyleSheet","create","fornaxBox","flex","flexDirection","marginTop","marginHorizontal","zIndex","navBar","alignContent","alignSelf","position","bellImg","width","height","settingImg","fornaxText","fontSize","color","textAlign","fontFamily","marginBottom","cardCarousel","tabBox","badge","borderRadius","backgroundColor","right","top","loaderBack","justifyContent","alignItems","left","bottom","navTabBox","colco","innerContainer","extrahight","Dashboard","props","dispatch","loader","setLoader","navigate","navigation","checkAccount","AsyncStorage","getItem","value","data","JSON","parse","console","log","connectWallet","mnemonicPhrase","web3","require"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Image, Pressable, StyleSheet, ScrollView, Text, View } from 'react-native';\r\nimport CardCarousel from '../components/CardCarousel';\r\nimport MainTab from '../components/MainTab';\r\nimport NavTab from '../components/NaviTab';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setAccounts, setWeb3 } from '../redux/reducers/Wallet';\r\nimport { getWeb3 } from '../utils/common';\r\nimport { heightPercentageToDP as hp , widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\nimport Spinner from 'react-native-spinkit';\r\n\r\nconst BellIcon = '../../assets/images/bell.png';\r\nconst SettingIcon = '../../assets/images/setting.png';\r\n\r\nconst styles = StyleSheet.create({\r\n  fornaxBox: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    // justifyContent: 'space-between',\r\n    marginTop: 30,\r\n    marginHorizontal: 20,\r\n    zIndex: 0,\r\n  },\r\n  navBar: {\r\n    flexDirection: 'row',\r\n    alignContent: 'flex-end',\r\n    alignSelf: 'flex-end',\r\n    position: 'relative',\r\n  },\r\n  bellImg: {\r\n    width: 24,\r\n    height: 26,\r\n    marginHorizontal: 27,\r\n  },\r\n  settingImg: {\r\n    width: 26,\r\n    height: 26,\r\n  },\r\n  fornaxText: {\r\n    fontSize: 28,\r\n    color: '#b27f29',\r\n    textAlign: 'left',\r\n    fontFamily: 'Quicksand-Bold',\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n  },\r\n  cardCarousel: {\r\n    height:216,\r\n    // backgroundColor:'red',\r\n    width: 450,\r\n  },\r\n  tabBox: {\r\n    // height: 310,\r\n    // backgroundColor:'red',\r\n    height: hp(45),\r\n    marginBottom: 30,\r\n  },\r\n  badge: {\r\n    width: 7,\r\n    height: 7,\r\n    borderRadius: 20,\r\n    backgroundColor: '#ff3333',\r\n    position: 'absolute',\r\n    right: 40,\r\n    top: 0,\r\n  },\r\n  loaderBack: {\r\n    flex: 1,\r\n    backgroundColor: '#00000057',\r\n    position: 'absolute',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 10,\r\n    right: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    top: 0\r\n  },\r\n  navTabBox: {\r\n    height: 70,\r\n    //new\r\n    // position: 'absolute',\r\n    // bottom: 0,\r\n  },\r\n  colco:{\r\n    // backgroundColor: 'red',\r\n    position:\"absolute\",\r\n    width:wp(90),\r\n    bottom: 5,\r\n  },\r\n  innerContainer:{\r\n    // backgroundColor:'blue',\r\n    // flex: 1,\r\n    flexDirection: 'column',\r\n    // height:hp(50),\r\n    // overflow:\"scroll\",\r\n    // paddingBottom:50,\r\n  },\r\n  extrahight:{\r\n    height:hp(10),\r\n  }\r\n});\r\n\r\nconst Dashboard = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const [loader, setLoader] = useState(true);\r\n  const navigate = props.navigation.navigate;\r\n\r\n  // const getBalances = async (data: any, web3: any) => {\r\n  //   return data.map(async (account: any, index: any) => {\r\n  //     web3.eth.getBalance(account?.address).then(\r\n  //       (balance: any) => {\r\n  //         if (balance >= 0) {\r\n  //           data[index] = Object.assign({ balance }, data[index]);\r\n  //           // dispatch(setAccounts(data));\r\n  //           console.log(balance, data[index], index, \"balance\");\r\n  //         }\r\n  //       },\r\n  //       (error: any) => {\r\n  //         console.log(error, 'getallBalance');\r\n  //       },\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  const checkAccount = async () => {\r\n    try {\r\n      const value = await AsyncStorage.getItem('accountList');\r\n      if (value != null) {\r\n        const data = JSON.parse(value);\r\n        dispatch(setAccounts(data));\r\n        setLoader(false);\r\n        // const _bal =\r\n        //   data?.length > 0 && (await web3.eth.getBalance(data[0]?.address));\r\n        // console.log(_bal);\r\n        // await getBalances(data, web3);\r\n      }\r\n    } catch (err) {\r\n      console.log('Account Error', err);\r\n    }\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      // await AsyncStorage.removeItem('registerUser');\r\n      const mnemonicPhrase = await AsyncStorage.getItem('mnemonicPhrase');\r\n      const web3 = mnemonicPhrase && getWeb3(mnemonicPhrase);\r\n      if (web3) {\r\n        checkAccount();\r\n        // await web3.eth.accounts.wallet.clear();\r\n        // await AsyncStorage.removeItem('accountList');\r\n        dispatch(setWeb3(web3));\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectWallet();\r\n    setLoader(true);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loader && (\r\n        <View style={styles.loaderBack}>\r\n          <Spinner isVisible={true} size={50} type={'9CubeGrid'} color=\"#b27f29\"/>\r\n        </View>\r\n      )}\r\n      <View style={styles.fornaxBox}>\r\n        <View style={styles.navBar}>\r\n          <View style={styles.badge} />\r\n          <Pressable onPress={() => navigate('Notifications')}>\r\n            <Image source={require(BellIcon)} style={styles.bellImg} />\r\n          </Pressable>\r\n          <Pressable onPress={() => navigate('Settings')}>\r\n            <Image source={require(SettingIcon)} style={styles.settingImg} />\r\n          </Pressable>\r\n        </View>\r\n        <Text style={styles.fornaxText}>Dashboard</Text>\r\n        {!loader && (\r\n          <>\r\n            <ScrollView style={styles.innerContainer}>\r\n              <View style={styles.cardCarousel}>\r\n                <CardCarousel navigate={navigate} />\r\n              </View>\r\n              <View style={styles.tabBox}>\r\n                <MainTab />\r\n              </View>\r\n              <View style={styles.extrahight}>\r\n\r\n              </View>\r\n            </ScrollView>\r\n            <View style={styles.colco}>\r\n              <View style={styles.navTabBox}>\r\n                <NavTab navigate={navigate} />\r\n              </View>\r\n            </View>\r\n          </>\r\n        )}\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"script"}