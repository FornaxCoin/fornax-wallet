{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _join2 = _interopRequireDefault(require(\"lodash/join\"));\n\nvar _Wallet = require(\"../redux/reducers/Wallet\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _common = require(\"../utils/common\");\n\nvar _reactNativeFlashMessage = require(\"react-native-flash-message\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\src\\\\screens\\\\ImportWallet.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar bip39 = require('bip39');\n\nvar SettingImage = '../../assets/images/Settingmaga.png';\nvar BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\n\nvar styles = _reactNative.StyleSheet.create({\n  fornaxBox: {\n    flex: 0,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  txnText: {\n    marginLeft: 17,\n    fontSize: 16,\n    color: '#ffffff',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium',\n    marginTop: -5\n  },\n  buttonClose: {\n    backgroundColor: '#b27f29',\n    width: 240,\n    alignSelf: 'center'\n  },\n  button: {\n    borderRadius: 20,\n    paddingVertical: 18,\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('1'),\n    marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('6')\n  },\n  textStyle: {\n    fontSize: 20,\n    color: '#ffffff',\n    lineHeight: 23,\n    fontFamily: 'Quicksand-Bold',\n    textAlign: 'center',\n    marginBottom: 10\n  },\n  backIcon: {\n    marginLeft: 26,\n    marginTop: 32\n  },\n  fornaxIcon: {\n    marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('3')\n  },\n  fornaxInnerBox: {\n    flex: 0,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('1'),\n    marginBottom: (0, _reactNativeResponsiveScreen.heightPercentageToDP)('2')\n  },\n  fornaxMiniText: {\n    fontSize: 18,\n    color: '#bdbdbd',\n    textAlign: 'center',\n    fontFamily: 'Quicksand-Medium',\n    width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('80')\n  },\n  seedBox: {\n    borderWidth: 2,\n    borderRadius: 20,\n    borderStyle: 'dotted',\n    borderColor: '#b27f29',\n    marginVertical: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(1),\n    paddingHorizontal: 10,\n    width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('30'),\n    height: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('10')\n  },\n  seedCountText: {\n    color: '#b27f29',\n    fontSize: 14,\n    marginRight: 8\n  },\n  seedText: {\n    fontSize: 14,\n    includeFontPadding: true,\n    color: '#ffffff',\n    textAlign: 'center'\n  },\n  seedList: {\n    flexDirection: 'column',\n    marginBottom: 10\n  },\n  seedListBox: {\n    width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)('75'),\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});\n\nvar seedArray = ['', '', '', '', '', '', '', '', '', '', '', ''];\n\nvar ImportWallet = function ImportWallet(props) {\n  var dispatch = (0, _reactRedux.useDispatch)();\n  var navigate = props.navigation.navigate;\n\n  var _useState = (0, _react.useState)(seedArray),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      seed = _useState2[0],\n      setSeed = _useState2[1];\n\n  var handleSeeds = function handleSeeds(e, index) {\n    seed[index] = e;\n    setSeed((0, _toConsumableArray2.default)(seed));\n  };\n\n  var storeDataAsync = function _callee(account, mnemonicPhrase) {\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.multiRemove(['accountList', 'mnemonicPhrase']));\n\n          case 3:\n            _context.next = 5;\n            return _regenerator.default.awrap(_asyncStorage.default.multiSet([['accountList', JSON.stringify([account])], ['mnemonicPhrase', mnemonicPhrase]]));\n\n          case 5:\n            navigate('Dashboard');\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var getBalance = function getBalance(web3, account, mnemonicPhrase) {\n    web3.eth.getBalance(account == null ? void 0 : account.address).then(function _callee2(bal) {\n      var balance;\n      return _regenerator.default.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(bal >= 0)) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regenerator.default.awrap(web3.utils.fromWei(bal, 'ether'));\n\n            case 3:\n              balance = _context2.sent;\n              storeDataAsync((0, _extends2.default)({}, account, {\n                balance: balance\n              }), mnemonicPhrase);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }, function (error) {\n      console.log(error, 'getBalance');\n    });\n  };\n\n  var handleImport = function _callee3() {\n    var mnemonicPhrase, web3, account;\n    return _regenerator.default.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            mnemonicPhrase = (0, _join2.default)(seed, ' ');\n            _context3.prev = 1;\n\n            if (!bip39.validateMnemonic(mnemonicPhrase.toString().toLowerCase().trim())) {\n              _context3.next = 13;\n              break;\n            }\n\n            (0, _reactNativeFlashMessage.hideMessage)();\n            web3 = (0, _common.getWeb3)(mnemonicPhrase);\n\n            if (!web3) {\n              _context3.next = 11;\n              break;\n            }\n\n            dispatch((0, _Wallet.setWeb3)(web3));\n            _context3.next = 9;\n            return _regenerator.default.awrap(web3.eth.accounts.create());\n\n          case 9:\n            account = _context3.sent;\n            getBalance(web3, account, mnemonicPhrase);\n\n          case 11:\n            _context3.next = 14;\n            break;\n\n          case 13:\n            (0, _reactNativeFlashMessage.showMessage)({\n              message: \"Import Phrase Failed!!!\",\n              description: \"Please enter correct mnemonic phrase\",\n              type: \"danger\"\n            });\n\n          case 14:\n            _context3.next = 20;\n            break;\n\n          case 16:\n            _context3.prev = 16;\n            _context3.t0 = _context3[\"catch\"](1);\n            (0, _reactNativeFlashMessage.hideMessage)();\n            console.log(_context3.t0);\n\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 16]], Promise);\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Pressable, {\n    onPress: function onPress() {\n      return navigate('WalletSetup');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.backIcon,\n    source: require(BackIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }))), _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.fornaxInnerBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.fornaxIcon,\n    source: require(SettingImage),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, \"Import Wallet\"), _react.default.createElement(_reactNative.Text, {\n    style: styles.fornaxMiniText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, \"Write down your Secret Recovery Phrase\")), _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.seedListBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.seedList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, seedArray.map(function (sed, index) {\n    if (index <= 5) {\n      return _react.default.createElement(_reactNative.View, {\n        key: index,\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          alignContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.seedCountText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 23\n        }\n      }, index + 1, \".\"), _react.default.createElement(_reactNative.View, {\n        style: styles.seedBox,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.seedText,\n        placeholder: sed,\n        placeholderTextColor: \"#bdbdbd\",\n        onChangeText: function onChangeText(e) {\n          return handleSeeds(e, index);\n        },\n        value: seed[index],\n        autoCapitalize: 'none',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }\n      })));\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.seedList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, seedArray.map(function (sed, index) {\n    if (index >= 6) {\n      return _react.default.createElement(_reactNative.View, {\n        key: index,\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          alignContent: 'center',\n          marginLeft: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.seedCountText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 23\n        }\n      }, index + 1, \".\"), _react.default.createElement(_reactNative.View, {\n        style: styles.seedBox,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.seedText,\n        placeholder: sed,\n        placeholderTextColor: \"#bdbdbd\",\n        onChangeText: function onChangeText(e) {\n          return handleSeeds(e, index);\n        },\n        value: seed[index],\n        autoCapitalize: 'none',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      })));\n    }\n  }))), _react.default.createElement(_reactNative.Pressable, {\n    onPress: handleImport,\n    style: [styles.button, styles.buttonClose],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.txnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, \"Continue\")))));\n};\n\nvar _default = ImportWallet;\nexports.default = _default;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/src/screens/ImportWallet.tsx"],"names":["bip39","require","SettingImage","BackIcon","styles","StyleSheet","create","fornaxBox","flex","flexDirection","alignItems","justifyContent","txnText","marginLeft","fontSize","color","textAlign","fontFamily","marginTop","buttonClose","backgroundColor","width","alignSelf","button","borderRadius","paddingVertical","marginBottom","textStyle","lineHeight","backIcon","fornaxIcon","fornaxInnerBox","fornaxMiniText","seedBox","borderWidth","borderStyle","borderColor","marginVertical","paddingHorizontal","height","seedCountText","marginRight","seedText","includeFontPadding","seedList","seedListBox","seedArray","ImportWallet","props","dispatch","navigate","navigation","seed","setSeed","handleSeeds","e","index","storeDataAsync","account","mnemonicPhrase","AsyncStorage","multiRemove","multiSet","JSON","stringify","getBalance","web3","eth","address","then","bal","utils","fromWei","balance","error","console","log","handleImport","validateMnemonic","toString","toLowerCase","trim","accounts","message","description","type","map","sed","alignContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Image,\r\n  Pressable,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { \r\n  heightPercentageToDP as hp, \r\n  widthPercentageToDP as wp \r\n} from 'react-native-responsive-screen';\r\nimport _join from 'lodash/join';\r\nimport { setWeb3 } from '../redux/reducers/Wallet';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getWeb3 } from '../utils/common';\r\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\r\n\r\nconst bip39 = require('bip39');\r\n\r\nconst SettingImage = '../../assets/images/Settingmaga.png';\r\nconst BackIcon = '../../assets/images/Iconly_Curved_Arrow.png';\r\n\r\nconst styles = StyleSheet.create({\r\n  fornaxBox: {\r\n    flex: 0,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  txnText: {\r\n    marginLeft: 17,\r\n    fontSize: 16,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n    marginTop: -5,\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: '#b27f29',\r\n    width: 240,\r\n    alignSelf: 'center',\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    paddingVertical: 18,\r\n    marginTop: hp('1'),\r\n    marginBottom: hp('6'),\r\n  },\r\n  textStyle: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n    lineHeight: 23,\r\n    fontFamily: 'Quicksand-Bold',\r\n    textAlign: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  backIcon: {\r\n    marginLeft: 26,\r\n    marginTop: 32,\r\n  },\r\n  fornaxIcon: {\r\n    marginBottom: hp('3'),\r\n  },\r\n  fornaxInnerBox: {\r\n    flex: 0,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    marginTop: hp('1'),\r\n    marginBottom: hp('2'),\r\n  },\r\n  fornaxMiniText: {\r\n    fontSize: 18,\r\n    color: '#bdbdbd',\r\n    textAlign: 'center',\r\n    fontFamily: 'Quicksand-Medium',\r\n    width: wp('80'),\r\n  },\r\n  seedBox: {\r\n    borderWidth: 2,\r\n    borderRadius: 20,\r\n    borderStyle: 'dotted',\r\n    borderColor: '#b27f29',\r\n    marginVertical: hp(1),\r\n    paddingHorizontal: 10,\r\n    width: wp('30'),\r\n    height: wp('10'),\r\n  },\r\n  seedCountText: {\r\n    color: '#b27f29',\r\n    fontSize: 14,\r\n    marginRight: 8,\r\n  },\r\n  seedText: {\r\n    fontSize: 14,\r\n    includeFontPadding: true,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n  },\r\n  seedList: {\r\n    flexDirection: 'column',\r\n    marginBottom: 10,\r\n  },\r\n  seedListBox: {\r\n    width: wp('75'),\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\nconst seedArray = ['', '', '', '', '', '', '', '', '', '', '', ''];\r\n\r\nconst ImportWallet = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = props.navigation.navigate;\r\n  const [seed, setSeed] = useState<any>(seedArray);\r\n\r\n  const handleSeeds = (e: any, index: number) => {\r\n    seed[index] = e;\r\n    setSeed([...seed]);\r\n  };\r\n\r\n  const storeDataAsync = async (account: any, mnemonicPhrase: string) => {\r\n    try {\r\n      await AsyncStorage.multiRemove(['accountList', 'mnemonicPhrase']);\r\n      await AsyncStorage.multiSet([\r\n        ['accountList', JSON.stringify([account])],\r\n        ['mnemonicPhrase', mnemonicPhrase],\r\n      ]);\r\n      navigate('Dashboard');\r\n    } catch (error) {\r\n      // Error saving data\r\n    }\r\n  };\r\n\r\n  const getBalance = (web3: any, account: any, mnemonicPhrase: any) => {\r\n    web3.eth.getBalance(account?.address).then(\r\n      async (bal: any) => {\r\n        if (bal >= 0) {\r\n          const balance = await web3.utils.fromWei(bal, 'ether');\r\n          storeDataAsync({ ...account, balance }, mnemonicPhrase);\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(error, 'getBalance');\r\n      },\r\n    );\r\n  };\r\n\r\n  const handleImport = async () => {\r\n    const mnemonicPhrase = _join(seed, ' ');\r\n    try {\r\n      if (bip39.validateMnemonic(mnemonicPhrase.toString().toLowerCase().trim())) {\r\n        hideMessage();\r\n        const web3 = getWeb3(mnemonicPhrase);\r\n        if (web3) {\r\n          dispatch(setWeb3(web3));\r\n          const account = await web3.eth.accounts.create();\r\n          getBalance(web3, account, mnemonicPhrase);\r\n        }\r\n      } else {\r\n        showMessage({\r\n          message: \"Import Phrase Failed!!!\",\r\n          description: \"Please enter correct mnemonic phrase\",\r\n          type: \"danger\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      hideMessage();\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <Pressable onPress={() => navigate('WalletSetup')}>\r\n          <Image style={styles.backIcon} source={require(BackIcon)} />\r\n        </Pressable>\r\n      </View>\r\n      <View style={styles.fornaxBox}>\r\n        <View style={styles.fornaxInnerBox}>\r\n          <Image style={styles.fornaxIcon} source={require(SettingImage)} />\r\n          <Text style={styles.textStyle}>Import Wallet</Text>\r\n          <Text style={styles.fornaxMiniText}>\r\n            Write down your Secret Recovery Phrase\r\n          </Text>\r\n        </View>\r\n        <View>\r\n          <View style={styles.seedListBox}>\r\n            <View style={styles.seedList}>\r\n              {seedArray.map((sed: any, index: any) => {\r\n                if (index <= 5) {\r\n                  return (\r\n                    <View key={index} style={{ flexDirection: 'row', alignItems: 'center', alignContent: 'center' }}>\r\n                      <Text style={styles.seedCountText}>{index + 1}.</Text>\r\n                      <View style={styles.seedBox}>\r\n                        <TextInput\r\n                          style={styles.seedText}\r\n                          placeholder={sed}\r\n                          placeholderTextColor=\"#bdbdbd\"\r\n                          onChangeText={e => handleSeeds(e, index)}\r\n                          value={seed[index]}\r\n                          autoCapitalize={'none'}\r\n                        />\r\n                      </View>\r\n                    </View>\r\n                  );\r\n                }\r\n              })}\r\n            </View>\r\n            <View style={styles.seedList}>\r\n              {seedArray.map((sed: any, index: any) => {\r\n                if (index >= 6) {\r\n                  return (\r\n                    <View key={index} style={{ flexDirection: 'row', alignItems: 'center', alignContent: 'center', marginLeft: 10 }}>\r\n                      <Text style={styles.seedCountText}>{index + 1}.</Text>\r\n                      <View style={styles.seedBox}>\r\n                        <TextInput\r\n                          style={styles.seedText}\r\n                          placeholder={sed}\r\n                          placeholderTextColor=\"#bdbdbd\"\r\n                          onChangeText={e => handleSeeds(e, index)}\r\n                          value={seed[index]}\r\n                          autoCapitalize={'none'}\r\n                        />\r\n                      </View>\r\n                    </View>\r\n                  );\r\n                }\r\n              })}\r\n            </View>\r\n          </View>\r\n          <Pressable\r\n            onPress={handleImport}\r\n            style={[styles.button, styles.buttonClose]}>\r\n            <Text style={styles.txnText}>Continue</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImportWallet;\r\n"]},"metadata":{},"sourceType":"script"}