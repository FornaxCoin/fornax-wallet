{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BarChart = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = require(\"./styles\");\n\nvar _RenderBars = _interopRequireDefault(require(\"./RenderBars\"));\n\nvar _RenderStackBars = _interopRequireDefault(require(\"./RenderStackBars\"));\n\nvar _lineSvg = _interopRequireDefault(require(\"../Components/lineSvg\"));\n\nvar _utils = require(\"../utils\");\n\nvar _reactNativeSvg = _interopRequireWildcard(require(\"react-native-svg\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Project\\\\qaim\\\\fornax-wallet\\\\node_modules\\\\react-native-gifted-charts\\\\src\\\\BarChart\\\\index.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar BarChart = function BarChart(props) {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      points = _useState2[0],\n      setPoints = _useState2[1];\n\n  var showLine = props.showLine || false;\n  var defaultLineConfig = {\n    curved: false,\n    isAnimated: false,\n    thickness: 1,\n    color: 'black',\n    hideDataPoints: false,\n    dataPointsShape: 'circular',\n    dataPointsWidth: 2,\n    dataPointsHeight: 2,\n    dataPointsColor: 'black',\n    dataPointsRadius: 3,\n    textColor: 'gray',\n    textFontSize: 10,\n    textShiftX: 0,\n    textShiftY: 0,\n    shiftY: 0,\n    delay: 0\n  };\n  var lineConfig = props.lineConfig ? {\n    curved: props.lineConfig.curved || defaultLineConfig.curved,\n    isAnimated: props.lineConfig.isAnimated || defaultLineConfig.isAnimated,\n    thickness: props.lineConfig.thickness || defaultLineConfig.thickness,\n    color: props.lineConfig.color || defaultLineConfig.color,\n    hideDataPoints: props.lineConfig.hideDataPoints || defaultLineConfig.hideDataPoints,\n    dataPointsShape: props.lineConfig.dataPointsShape || defaultLineConfig.dataPointsShape,\n    dataPointsHeight: props.lineConfig.dataPointsHeight || defaultLineConfig.dataPointsHeight,\n    dataPointsWidth: props.lineConfig.dataPointsWidth || defaultLineConfig.dataPointsWidth,\n    dataPointsColor: props.lineConfig.dataPointsColor || defaultLineConfig.dataPointsColor,\n    dataPointsRadius: props.lineConfig.dataPointsRadius || defaultLineConfig.dataPointsRadius,\n    textColor: props.lineConfig.textColor || defaultLineConfig.textColor,\n    textFontSize: props.lineConfig.textFontSize || defaultLineConfig.textFontSize,\n    textShiftX: props.lineConfig.textShiftX || defaultLineConfig.textShiftX,\n    textShiftY: props.lineConfig.textShiftY || defaultLineConfig.textShiftY,\n    shiftY: props.lineConfig.shiftY || defaultLineConfig.shiftY,\n    delay: props.lineConfig.delay || defaultLineConfig.delay\n  } : defaultLineConfig;\n  var containerHeight = props.height || 200;\n  var noOfSections = props.noOfSections || 10;\n  var horizSections = [{\n    value: '0'\n  }];\n  var stepHeight = props.stepHeight || containerHeight / noOfSections;\n  var data = (0, _react.useMemo)(function () {\n    return props.data || [];\n  }, [props.data]);\n  var spacing = props.spacing === 0 ? 0 : props.spacing ? props.spacing : 20;\n  var labelWidth = props.labelWidth || 0;\n  var totalWidth = spacing;\n  var maxItem = 0;\n\n  if (props.stackData) {\n    props.stackData.forEach(function (stackItem) {\n      var stackSum = stackItem.stacks.reduce(function (acc, stack) {\n        return acc + stack.value;\n      }, 0);\n\n      if (stackSum > maxItem) {\n        maxItem = stackSum;\n      }\n\n      totalWidth += (stackItem.stacks[0].barWidth || props.barWidth || 30) + spacing;\n    });\n  } else {\n    data.forEach(function (item) {\n      if (item.value > maxItem) {\n        maxItem = item.value;\n      }\n\n      totalWidth += (item.barWidth || props.barWidth || 30) + (item.spacing === 0 ? 0 : item.spacing || spacing);\n    });\n  }\n\n  if (props.showFractionalValues || props.roundToDigits) {\n    maxItem *= 10 * (props.roundToDigits || 1);\n    maxItem = maxItem + (10 - maxItem % 10);\n    maxItem /= 10 * (props.roundToDigits || 1);\n    maxItem = parseFloat(maxItem.toFixed(props.roundToDigits || 1));\n  } else {\n    maxItem = maxItem + (10 - maxItem % 10);\n  }\n\n  var maxValue = props.maxValue || maxItem;\n  var stepValue = props.stepValue || maxValue / noOfSections;\n  var disableScroll = props.disableScroll || false;\n  var showScrollIndicator = props.showScrollIndicator || false;\n  var initialSpacing = props.initialSpacing === 0 ? 0 : props.initialSpacing || 40;\n  var side = props.side || '';\n  var rotateLabel = props.rotateLabel || false;\n  var isAnimated = props.isAnimated || false;\n  var animationDuration = props.animationDuration || 800;\n  var opacity = props.opacity || 1;\n  var isThreeD = props.isThreeD || false;\n  var showVerticalLines = props.showVerticalLines || false;\n  var rulesThickness = props.rulesThickness === 0 ? 0 : props.rulesThickness || 1;\n  var rulesColor = props.rulesColor || 'lightgray';\n  var verticalLinesThickness = props.verticalLinesThickness === 0 ? 0 : props.verticalLinesThickness || 1;\n  var verticalLinesColor = props.verticalLinesColor || 'lightgray';\n  var verticalLinesZIndex = props.verticalLinesZIndex || -1;\n  var showYAxisIndices = props.showYAxisIndices || false;\n  var showXAxisIndices = props.showXAxisIndices || false;\n  var yAxisIndicesHeight = props.yAxisIndicesHeight || 2;\n  var xAxisIndicesHeight = props.xAxisIndicesHeight || 2;\n  var yAxisIndicesWidth = props.yAxisIndicesWidth || 4;\n  var xAxisIndicesWidth = props.xAxisIndicesWidth || 4;\n  var xAxisIndicesColor = props.xAxisIndicesColor || 'black';\n  var yAxisIndicesColor = props.yAxisIndicesColor || 'black';\n  var xAxisThickness = props.xAxisThickness === 0 ? props.xAxisThickness : props.xAxisThickness || 1;\n  var xAxisColor = props.xAxisColor || 'black';\n  var hideRules = props.hideRules || false;\n  var yAxisThickness = props.yAxisThickness === 0 ? props.yAxisThickness : props.yAxisThickness || 1;\n  var yAxisColor = props.yAxisColor || 'black';\n  var yAxisTextStyle = props.yAxisTextStyle;\n  var showFractionalValues = props.showFractionalValues || false;\n  var yAxisLabelWidth = props.yAxisLabelWidth || 35;\n  var hideYAxisText = props.hideYAxisText || false;\n  var backgroundColor = props.backgroundColor || 'transparent';\n  var horizontal = props.horizontal || false;\n  var yAxisAtTop = props.yAxisAtTop || false;\n  var intactTopLabel = props.intactTopLabel || false;\n  var hideOrigin = props.hideOrigin || false;\n  var rulesType = props.rulesType || 'line';\n  var dashWidth = props.dashWidth === 0 ? 0 : props.dashWidth || 4;\n  var dashGap = props.dashGap === 0 ? 0 : props.dashGap || 8;\n  var heightValue = (0, _react.useMemo)(function () {\n    return new _reactNative.Animated.Value(0);\n  }, []);\n  var opacValue = (0, _react.useMemo)(function () {\n    return new _reactNative.Animated.Value(0);\n  }, []);\n  var widthValue = (0, _react.useMemo)(function () {\n    return new _reactNative.Animated.Value(0);\n  }, []);\n  var labelsAppear = (0, _react.useCallback)(function () {\n    opacValue.setValue(0);\n\n    _reactNative.Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: _reactNative.Easing.ease,\n      useNativeDriver: false\n    }).start();\n  }, [opacValue]);\n  var decreaseWidth = (0, _react.useCallback)(function () {\n    widthValue.setValue(0);\n\n    _reactNative.Animated.timing(widthValue, {\n      toValue: 1,\n      duration: animationDuration,\n      easing: _reactNative.Easing.linear,\n      useNativeDriver: false\n    }).start();\n  }, [animationDuration, widthValue]);\n  (0, _react.useEffect)(function () {\n    if (showLine) {\n      var pp = '';\n\n      if (!lineConfig.curved) {\n        for (var i = 0; i < data.length; i++) {\n          var currentBarWidth = data && data[i] && data[i].barWidth || props.barWidth || 30;\n          pp += 'L' + (yAxisLabelWidth + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth / 2 + (currentBarWidth + spacing) * i) + ' ' + (containerHeight - lineConfig.shiftY + 10 - data[i].value * containerHeight / maxValue) + ' ';\n        }\n\n        setPoints(pp.replace('L', 'M'));\n      } else {\n        var p1Array = [];\n\n        for (var _i = 0; _i < data.length; _i++) {\n          var _currentBarWidth = data && data[_i] && data[_i].barWidth || props.barWidth || 30;\n\n          p1Array.push([yAxisLabelWidth + 6 - (initialSpacing - _currentBarWidth / 2) - lineConfig.dataPointsWidth / 2 + (_currentBarWidth + spacing) * _i, containerHeight - lineConfig.shiftY + 10 - data[_i].value * containerHeight / maxValue]);\n          var xx = (0, _utils.svgPath)(p1Array, _utils.bezierCommand);\n          setPoints(xx);\n        }\n      }\n\n      if (lineConfig.isAnimated) {\n        setTimeout(function () {\n          return decreaseWidth();\n        }, lineConfig.delay || 0);\n      }\n    }\n\n    setTimeout(function () {\n      return labelsAppear();\n    }, animationDuration);\n  }, [animationDuration, containerHeight, data, decreaseWidth, initialSpacing, labelsAppear, lineConfig.curved, lineConfig.dataPointsWidth, lineConfig.shiftY, lineConfig.isAnimated, lineConfig.delay, maxValue, props.barWidth, showLine, spacing, yAxisLabelWidth]);\n  var defaultReferenceConfig = {\n    thickness: rulesThickness,\n    width: horizontal ? props.width || totalWidth : (props.width || totalWidth) + 11,\n    color: 'black',\n    type: rulesType,\n    dashWidth: dashWidth,\n    dashGap: dashGap\n  };\n  var showReferenceLine1 = props.showReferenceLine1 || false;\n  var referenceLine1Position = props.referenceLine1Position === 0 ? 0 : props.referenceLine1Position || containerHeight / 2;\n  var referenceLine1Config = props.referenceLine1Config ? {\n    thickness: props.referenceLine1Config.thickness || rulesThickness,\n    width: horizontal ? props.referenceLine1Config.width || props.width || totalWidth : (props.referenceLine1Config.width || props.width || totalWidth) + 11,\n    color: props.referenceLine1Config.color || 'black',\n    type: props.referenceLine1Config.type || rulesType,\n    dashWidth: props.referenceLine1Config.dashWidth || dashWidth,\n    dashGap: props.referenceLine1Config.dashGap || dashGap\n  } : defaultReferenceConfig;\n  var showReferenceLine2 = props.showReferenceLine2 || false;\n  var referenceLine2Position = props.referenceLine2Position === 0 ? 0 : props.referenceLine2Position || 3 * containerHeight / 2;\n  var referenceLine2Config = props.referenceLine2Config ? {\n    thickness: props.referenceLine2Config.thickness || rulesThickness,\n    width: horizontal ? props.referenceLine2Config.width || props.width || totalWidth : (props.referenceLine2Config.width || props.width || totalWidth) + 11,\n    color: props.referenceLine2Config.color || 'black',\n    type: props.referenceLine2Config.type || rulesType,\n    dashWidth: props.referenceLine2Config.dashWidth || dashWidth,\n    dashGap: props.referenceLine2Config.dashGap || dashGap\n  } : defaultReferenceConfig;\n  var showReferenceLine3 = props.showReferenceLine3 || false;\n  var referenceLine3Position = props.referenceLine3Position === 0 ? 0 : props.referenceLine3Position || containerHeight / 3;\n  var referenceLine3Config = props.referenceLine3Config ? {\n    thickness: props.referenceLine3Config.thickness || rulesThickness,\n    width: horizontal ? props.referenceLine3Config.width || props.width || totalWidth : (props.referenceLine3Config.width || props.width || totalWidth) + 11,\n    color: props.referenceLine3Config.color || 'black',\n    type: props.referenceLine3Config.type || rulesType,\n    dashWidth: props.referenceLine3Config.dashWidth || dashWidth,\n    dashGap: props.referenceLine3Config.dashGap || dashGap\n  } : defaultReferenceConfig;\n  horizSections.pop();\n\n  for (var i = 0; i <= noOfSections; i++) {\n    var _props$yAxisLabelText;\n\n    var value = maxValue - stepValue * i;\n\n    if (props.showFractionalValues || props.roundToDigits) {\n      value = parseFloat(value.toFixed(props.roundToDigits || 1));\n    }\n\n    horizSections.push({\n      value: props.yAxisLabelTexts ? (_props$yAxisLabelText = props.yAxisLabelTexts[noOfSections - i]) != null ? _props$yAxisLabelText : value.toString() : value.toString()\n    });\n  }\n\n  var animatedHeight = heightValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%']\n  });\n  var appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1]\n  });\n  var animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth]\n  });\n\n  var renderHorizSections = function renderHorizSections() {\n    return _react.default.createElement(_react.default.Fragment, null, horizSections.map(function (sectionItems, index) {\n      return _react.default.createElement(_reactNative.View, {\n        key: index,\n        style: [_styles.styles.horizBar, {\n          width: horizontal ? props.width || totalWidth : props.width || totalWidth + 11\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [_styles.styles.leftLabel, {\n          borderRightWidth: yAxisThickness,\n          borderColor: yAxisColor\n        }, horizontal && !yAxisAtTop && {\n          transform: [{\n            translateX: totalWidth + yAxisThickness\n          }]\n        }, {\n          height: index === noOfSections ? stepHeight / 2 : stepHeight,\n          width: yAxisLabelWidth\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 15\n        }\n      }, !hideYAxisText ? _react.default.createElement(_reactNative.Text, {\n        numberOfLines: 1,\n        ellipsizeMode: 'clip',\n        style: [yAxisTextStyle, index === noOfSections && {\n          marginBottom: stepHeight / -2\n        }, horizontal && {\n          transform: [{\n            rotate: '270deg'\n          }, {\n            translateY: yAxisAtTop ? 0 : 50\n          }]\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 19\n        }\n      }, showFractionalValues ? sectionItems.value ? sectionItems.value : hideOrigin ? '' : '0' : sectionItems.value ? sectionItems.value.toString().split('.')[0] : hideOrigin ? '' : '0') : null), _react.default.createElement(_reactNative.View, {\n        style: [index === noOfSections ? _styles.styles.lastLeftPart : _styles.styles.leftPart, {\n          backgroundColor: backgroundColor\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 15\n        }\n      }, index === noOfSections ? _react.default.createElement(_reactNative.View, {\n        style: [_styles.styles.lastLine, {\n          height: xAxisThickness,\n          backgroundColor: xAxisColor\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 19\n        }\n      }) : hideRules ? null : _react.default.createElement(_lineSvg.default, {\n        config: {\n          thickness: rulesThickness,\n          color: rulesColor,\n          width: horizontal ? props.width || totalWidth : (props.width || totalWidth) + 11,\n          dashWidth: dashWidth,\n          dashGap: dashGap,\n          type: rulesType\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 19\n        }\n      }), index === 0 && showReferenceLine1 ? _react.default.createElement(_reactNative.View, {\n        style: {\n          position: 'absolute',\n          bottom: referenceLine1Position * containerHeight / maxValue + stepHeight / 2 - referenceLine1Config.thickness / 2,\n          transform: [{\n            translateY: containerHeight\n          }]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_lineSvg.default, {\n        config: referenceLine1Config,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 21\n        }\n      })) : null, index === 0 && showReferenceLine2 ? _react.default.createElement(_reactNative.View, {\n        style: {\n          position: 'absolute',\n          bottom: referenceLine2Position * containerHeight / maxValue + stepHeight / 2 - referenceLine2Config.thickness / 2,\n          transform: [{\n            translateY: containerHeight\n          }]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_lineSvg.default, {\n        config: referenceLine2Config,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 21\n        }\n      })) : null, index === 0 && showReferenceLine3 ? _react.default.createElement(_reactNative.View, {\n        style: {\n          position: 'absolute',\n          bottom: referenceLine3Position * containerHeight / maxValue + stepHeight / 2 - referenceLine3Config.thickness / 2,\n          transform: [{\n            translateY: containerHeight\n          }]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_lineSvg.default, {\n        config: referenceLine3Config,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 21\n        }\n      })) : null, showYAxisIndices && index !== noOfSections ? _react.default.createElement(_reactNative.View, {\n        style: [{\n          position: 'absolute',\n          height: yAxisIndicesHeight,\n          width: yAxisIndicesWidth,\n          left: yAxisIndicesWidth / -2,\n          backgroundColor: yAxisIndicesColor\n        }, horizontal && !yAxisAtTop && {\n          transform: [{\n            translateX: totalWidth + yAxisThickness\n          }]\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 19\n        }\n      }) : null));\n    }));\n  };\n\n  var renderSpecificVerticalLines = function renderSpecificVerticalLines(dataForRender) {\n    return dataForRender.map(function (item, index) {\n      if (item.showVerticalLine) {\n        var currentBarWidth = item.barWidth || props.barWidth || 30;\n        return _react.default.createElement(_reactNativeSvg.Rect, {\n          x: yAxisLabelWidth + 6 - (item.verticalLineThickness || 1) / 2 - 1 - (initialSpacing - currentBarWidth / 2) + (currentBarWidth + spacing) * index,\n          y: containerHeight - lineConfig.shiftY - item.value * containerHeight / maxValue + 9,\n          width: item.verticalLineThickness || 1,\n          height: item.value * containerHeight / maxValue + lineConfig.shiftY,\n          fill: item.verticalLineColor || 'lightgray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 11\n          }\n        });\n      }\n\n      return null;\n    });\n  };\n\n  var renderDataPoints = function renderDataPoints() {\n    return data.map(function (item, index) {\n      var currentBarWidth = item.barWidth || props.barWidth || 30;\n\n      if (lineConfig.dataPointsShape === 'rectangular') {\n        return _react.default.createElement(_react.Fragment, {\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 11\n          }\n        }, _react.default.createElement(_reactNativeSvg.Rect, {\n          x: yAxisLabelWidth + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth + (currentBarWidth + spacing) * index,\n          y: containerHeight - lineConfig.shiftY - lineConfig.dataPointsHeight / 2 + 10 - item.value * containerHeight / maxValue,\n          width: lineConfig.dataPointsWidth,\n          height: lineConfig.dataPointsHeight,\n          fill: lineConfig.dataPointsColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 13\n          }\n        }), item.dataPointText && _react.default.createElement(_reactNativeSvg.Text, {\n          fill: item.textColor || lineConfig.textColor,\n          fontSize: item.textFontSize || lineConfig.textFontSize,\n          x: yAxisLabelWidth + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth + (currentBarWidth + spacing) * index + (item.textShiftX || lineConfig.textShiftX || 0),\n          y: containerHeight - lineConfig.shiftY - lineConfig.dataPointsHeight / 2 + 10 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }\n        }, item.dataPointText));\n      }\n\n      return _react.default.createElement(_react.Fragment, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeSvg.Circle, {\n        cx: yAxisLabelWidth + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth / 2 + (currentBarWidth + spacing) * index,\n        cy: containerHeight - lineConfig.shiftY + 10 - item.value * containerHeight / maxValue,\n        r: lineConfig.dataPointsRadius,\n        fill: lineConfig.dataPointsColor,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }\n      }), item.dataPointText && _react.default.createElement(_reactNativeSvg.Text, {\n        fill: item.textColor || lineConfig.textColor,\n        fontSize: item.textFontSize || lineConfig.textFontSize,\n        x: yAxisLabelWidth + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth + (currentBarWidth + spacing) * index + (item.textShiftX || lineConfig.textShiftX || 0),\n        y: containerHeight - lineConfig.shiftY - lineConfig.dataPointsHeight / 2 + 10 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }\n      }, item.dataPointText));\n    });\n  };\n\n  var renderSpecificDataPoints = function renderSpecificDataPoints(dataForRender) {\n    return dataForRender.map(function (item, index) {\n      var currentBarWidth = item.barWidth || props.barWidth || 30;\n\n      if (item.showDataPoint) {\n        if (item.dataPointShape === 'rectangular') {\n          return _react.default.createElement(_react.Fragment, {\n            key: index,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 13\n            }\n          }, _react.default.createElement(_reactNativeSvg.Rect, {\n            x: initialSpacing - (item.dataPointWidth || 2) / 2 - 1 + (currentBarWidth + spacing) * index,\n            y: containerHeight - lineConfig.shiftY - (item.dataPointHeight || 2) / 2 + 10 - item.value * containerHeight / maxValue,\n            width: item.dataPointWidth || 2,\n            height: item.dataPointHeight || 2,\n            fill: item.dataPointColor || 'black',\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 15\n            }\n          }), item.dataPointText && _react.default.createElement(_reactNativeSvg.Text, {\n            fill: item.textColor || 'black',\n            fontSize: item.textFontSize || 10,\n            x: initialSpacing - (item.dataPointWidth || 2) + spacing * index + (item.textShiftX || lineConfig.textShiftX || 0),\n            y: containerHeight - lineConfig.shiftY - (item.dataPointHeight || 2) / 2 + 10 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 17\n            }\n          }, item.dataPointText));\n        } else {\n          return _react.default.createElement(_react.Fragment, {\n            key: index,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 13\n            }\n          }, _react.default.createElement(_reactNativeSvg.Circle, {\n            cx: initialSpacing - (item.dataPointWidth || 2) / 2 + spacing * index,\n            cy: containerHeight - lineConfig.shiftY + 10 - item.value * containerHeight / maxValue,\n            r: item.dataPointRadius || 3,\n            fill: item.dataPointColor || 'black',\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 15\n            }\n          }), item.dataPointText && _react.default.createElement(_reactNativeSvg.Text, {\n            fill: item.textColor || 'black',\n            fontSize: item.textFontSize || 10,\n            x: initialSpacing - (item.dataPointWidth || 2) + spacing * index + (item.textShiftX || lineConfig.textShiftX || 0),\n            y: containerHeight - lineConfig.shiftY - (item.dataPointHeight || 2) / 2 + 10 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 17\n            }\n          }, item.dataPointText));\n        }\n      }\n\n      return null;\n    });\n  };\n\n  var renderAnimatedLine = function renderAnimatedLine() {\n    return _react.default.createElement(_reactNative.Animated.View, {\n      style: {\n        position: 'absolute',\n        height: containerHeight + 10,\n        bottom: 60,\n        width: animatedWidth,\n        zIndex: -1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNativeSvg.default, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNativeSvg.Path, {\n      d: points,\n      fill: \"none\",\n      stroke: lineConfig.color,\n      strokeWidth: lineConfig.thickness,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 11\n      }\n    }), renderSpecificVerticalLines(data), !lineConfig.hideDataPoints ? renderDataPoints() : renderSpecificDataPoints(data)));\n  };\n\n  var renderLine = function renderLine() {\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        position: 'absolute',\n        height: containerHeight + 10,\n        bottom: 60,\n        width: totalWidth,\n        zIndex: -1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNativeSvg.default, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 938,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNativeSvg.Path, {\n      d: points,\n      fill: \"none\",\n      stroke: lineConfig.color,\n      strokeWidth: lineConfig.thickness,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 11\n      }\n    }), renderSpecificVerticalLines(data), !lineConfig.hideDataPoints ? renderDataPoints() : renderSpecificDataPoints(data)));\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: [_styles.styles.container, {\n      height: containerHeight\n    }, props.width && {\n      width: props.width\n    }, horizontal && {\n      transform: [{\n        rotate: '90deg'\n      }, {\n        translateY: -15\n      }]\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 5\n    }\n  }, props.hideAxesAndRules !== true && renderHorizSections(), _react.default.createElement(_reactNative.ScrollView, {\n    style: [{\n      marginLeft: 36,\n      position: 'absolute',\n      bottom: stepHeight * -0.5 - 60 + xAxisThickness\n    }, props.width && {\n      width: props.width - 11\n    }, horizontal && {\n      width: totalWidth\n    }],\n    scrollEnabled: !disableScroll,\n    contentContainerStyle: [{\n      height: containerHeight + 130,\n      paddingLeft: initialSpacing,\n      alignItems: 'flex-end'\n    }, !props.width && {\n      width: totalWidth\n    }],\n    showsHorizontalScrollIndicator: showScrollIndicator,\n    horizontal: true,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_react.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 9\n    }\n  }, showLine ? lineConfig.isAnimated ? renderAnimatedLine() : renderLine() : null, props.stackData ? props.stackData.map(function (item, index) {\n    return _react.default.createElement(_RenderStackBars.default, {\n      key: index,\n      item: item,\n      index: index,\n      containerHeight: containerHeight,\n      maxValue: maxValue,\n      spacing: spacing,\n      barWidth: props.barWidth,\n      opacity: opacity,\n      disablePress: props.disablePress,\n      rotateLabel: rotateLabel,\n      showVerticalLines: showVerticalLines,\n      verticalLinesThickness: verticalLinesThickness,\n      verticalLinesColor: verticalLinesColor,\n      verticalLinesZIndex: verticalLinesZIndex,\n      showXAxisIndices: showXAxisIndices,\n      xAxisIndicesHeight: xAxisIndicesHeight,\n      xAxisIndicesWidth: xAxisIndicesWidth,\n      xAxisIndicesColor: xAxisIndicesColor,\n      horizontal: horizontal,\n      intactTopLabel: intactTopLabel,\n      barBorderRadius: props.barBorderRadius,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 19\n      }\n    });\n  }) : data.map(function (item, index) {\n    return _react.default.createElement(_RenderBars.default, {\n      key: index,\n      item: item,\n      index: index,\n      containerHeight: containerHeight,\n      maxValue: maxValue,\n      spacing: item.spacing === 0 ? 0 : item.spacing || spacing,\n      side: side,\n      data: data,\n      barWidth: props.barWidth,\n      sideWidth: props.sideWidth,\n      labelWidth: labelWidth,\n      opacity: opacity,\n      isThreeD: isThreeD,\n      isAnimated: isAnimated,\n      animationDuration: animationDuration,\n      rotateLabel: rotateLabel,\n      animatedHeight: animatedHeight,\n      appearingOpacity: appearingOpacity,\n      roundedTop: props.roundedTop,\n      roundedBottom: props.roundedBottom,\n      disablePress: props.disablePress,\n      frontColor: props.frontColor,\n      sideColor: props.sideColor,\n      topColor: props.topColor,\n      showGradient: props.showGradient,\n      gradientColor: props.gradientColor,\n      activeOpacity: props.activeOpacity,\n      cappedBars: props.cappedBars,\n      capThickness: props.capThickness,\n      capColor: props.capColor,\n      capRadius: props.capRadius,\n      showVerticalLines: showVerticalLines,\n      verticalLinesThickness: verticalLinesThickness,\n      verticalLinesColor: verticalLinesColor,\n      verticalLinesZIndex: verticalLinesZIndex,\n      showXAxisIndices: showXAxisIndices,\n      xAxisIndicesHeight: xAxisIndicesHeight,\n      xAxisIndicesWidth: xAxisIndicesWidth,\n      xAxisIndicesColor: xAxisIndicesColor,\n      horizontal: horizontal,\n      intactTopLabel: intactTopLabel,\n      barBorderRadius: props.barBorderRadius,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 17\n      }\n    });\n  }))));\n};\n\nexports.BarChart = BarChart;","map":{"version":3,"sources":["D:/Project/qaim/fornax-wallet/node_modules/react-native-gifted-charts/src/BarChart/index.tsx"],"names":["BarChart","props","points","setPoints","showLine","defaultLineConfig","curved","isAnimated","thickness","color","hideDataPoints","dataPointsShape","dataPointsWidth","dataPointsHeight","dataPointsColor","dataPointsRadius","textColor","textFontSize","textShiftX","textShiftY","shiftY","delay","lineConfig","containerHeight","height","noOfSections","horizSections","value","stepHeight","data","spacing","labelWidth","totalWidth","maxItem","stackData","forEach","stackItem","stackSum","stacks","reduce","acc","stack","barWidth","item","showFractionalValues","roundToDigits","parseFloat","toFixed","maxValue","stepValue","disableScroll","showScrollIndicator","initialSpacing","side","rotateLabel","animationDuration","opacity","isThreeD","showVerticalLines","rulesThickness","rulesColor","verticalLinesThickness","verticalLinesColor","verticalLinesZIndex","showYAxisIndices","showXAxisIndices","yAxisIndicesHeight","xAxisIndicesHeight","yAxisIndicesWidth","xAxisIndicesWidth","xAxisIndicesColor","yAxisIndicesColor","xAxisThickness","xAxisColor","hideRules","yAxisThickness","yAxisColor","yAxisTextStyle","yAxisLabelWidth","hideYAxisText","backgroundColor","horizontal","yAxisAtTop","intactTopLabel","hideOrigin","rulesType","dashWidth","dashGap","heightValue","Animated","Value","opacValue","widthValue","labelsAppear","setValue","timing","toValue","duration","easing","Easing","ease","useNativeDriver","start","decreaseWidth","linear","pp","i","length","currentBarWidth","replace","p1Array","push","xx","bezierCommand","setTimeout","defaultReferenceConfig","width","type","showReferenceLine1","referenceLine1Position","referenceLine1Config","showReferenceLine2","referenceLine2Position","referenceLine2Config","showReferenceLine3","referenceLine3Position","referenceLine3Config","pop","yAxisLabelTexts","toString","animatedHeight","interpolate","inputRange","outputRange","appearingOpacity","animatedWidth","renderHorizSections","map","sectionItems","index","styles","horizBar","leftLabel","borderRightWidth","borderColor","transform","translateX","marginBottom","rotate","translateY","split","lastLeftPart","leftPart","lastLine","position","bottom","left","renderSpecificVerticalLines","dataForRender","showVerticalLine","verticalLineThickness","verticalLineColor","renderDataPoints","dataPointText","renderSpecificDataPoints","showDataPoint","dataPointShape","dataPointWidth","dataPointHeight","dataPointColor","dataPointRadius","renderAnimatedLine","zIndex","renderLine","container","hideAxesAndRules","marginLeft","paddingLeft","alignItems","disablePress","barBorderRadius","sideWidth","roundedTop","roundedBottom","frontColor","sideColor","topColor","showGradient","gradientColor","activeOpacity","cappedBars","capThickness","capColor","capRadius"],"mappings":";;;;;;;;;AAAA;;AAOA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AA+IO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAsB;AAC5C,kBAA4B,qBAAS,EAAT,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAN,IAAkB,KAAnC;AACA,MAAMC,iBAAiB,GAAG;AACxBC,IAAAA,MAAM,EAAE,KADgB;AAExBC,IAAAA,UAAU,EAAE,KAFY;AAGxBC,IAAAA,SAAS,EAAE,CAHa;AAIxBC,IAAAA,KAAK,EAAE,OAJiB;AAKxBC,IAAAA,cAAc,EAAE,KALQ;AAMxBC,IAAAA,eAAe,EAAE,UANO;AAOxBC,IAAAA,eAAe,EAAE,CAPO;AAQxBC,IAAAA,gBAAgB,EAAE,CARM;AASxBC,IAAAA,eAAe,EAAE,OATO;AAUxBC,IAAAA,gBAAgB,EAAE,CAVM;AAWxBC,IAAAA,SAAS,EAAE,MAXa;AAYxBC,IAAAA,YAAY,EAAE,EAZU;AAaxBC,IAAAA,UAAU,EAAE,CAbY;AAcxBC,IAAAA,UAAU,EAAE,CAdY;AAexBC,IAAAA,MAAM,EAAE,CAfgB;AAgBxBC,IAAAA,KAAK,EAAE;AAhBiB,GAA1B;AAkBA,MAAMC,UAAU,GAAGrB,KAAK,CAACqB,UAAN,GACf;AACEhB,IAAAA,MAAM,EAAEL,KAAK,CAACqB,UAAN,CAAiBhB,MAAjB,IAA2BD,iBAAiB,CAACC,MADvD;AAEEC,IAAAA,UAAU,EAAEN,KAAK,CAACqB,UAAN,CAAiBf,UAAjB,IAA+BF,iBAAiB,CAACE,UAF/D;AAGEC,IAAAA,SAAS,EAAEP,KAAK,CAACqB,UAAN,CAAiBd,SAAjB,IAA8BH,iBAAiB,CAACG,SAH7D;AAIEC,IAAAA,KAAK,EAAER,KAAK,CAACqB,UAAN,CAAiBb,KAAjB,IAA0BJ,iBAAiB,CAACI,KAJrD;AAKEC,IAAAA,cAAc,EACZT,KAAK,CAACqB,UAAN,CAAiBZ,cAAjB,IAAmCL,iBAAiB,CAACK,cANzD;AAOEC,IAAAA,eAAe,EACbV,KAAK,CAACqB,UAAN,CAAiBX,eAAjB,IAAoCN,iBAAiB,CAACM,eAR1D;AASEE,IAAAA,gBAAgB,EACdZ,KAAK,CAACqB,UAAN,CAAiBT,gBAAjB,IACAR,iBAAiB,CAACQ,gBAXtB;AAYED,IAAAA,eAAe,EACbX,KAAK,CAACqB,UAAN,CAAiBV,eAAjB,IAAoCP,iBAAiB,CAACO,eAb1D;AAcEE,IAAAA,eAAe,EACbb,KAAK,CAACqB,UAAN,CAAiBR,eAAjB,IAAoCT,iBAAiB,CAACS,eAf1D;AAgBEC,IAAAA,gBAAgB,EACdd,KAAK,CAACqB,UAAN,CAAiBP,gBAAjB,IACAV,iBAAiB,CAACU,gBAlBtB;AAmBEC,IAAAA,SAAS,EAAEf,KAAK,CAACqB,UAAN,CAAiBN,SAAjB,IAA8BX,iBAAiB,CAACW,SAnB7D;AAoBEC,IAAAA,YAAY,EACVhB,KAAK,CAACqB,UAAN,CAAiBL,YAAjB,IAAiCZ,iBAAiB,CAACY,YArBvD;AAsBEC,IAAAA,UAAU,EAAEjB,KAAK,CAACqB,UAAN,CAAiBJ,UAAjB,IAA+Bb,iBAAiB,CAACa,UAtB/D;AAuBEC,IAAAA,UAAU,EAAElB,KAAK,CAACqB,UAAN,CAAiBH,UAAjB,IAA+Bd,iBAAiB,CAACc,UAvB/D;AAwBEC,IAAAA,MAAM,EAAEnB,KAAK,CAACqB,UAAN,CAAiBF,MAAjB,IAA2Bf,iBAAiB,CAACe,MAxBvD;AAyBEC,IAAAA,KAAK,EAAEpB,KAAK,CAACqB,UAAN,CAAiBD,KAAjB,IAA0BhB,iBAAiB,CAACgB;AAzBrD,GADe,GA4BfhB,iBA5BJ;AA6BA,MAAMkB,eAAe,GAAGtB,KAAK,CAACuB,MAAN,IAAgB,GAAxC;AACA,MAAMC,YAAY,GAAGxB,KAAK,CAACwB,YAAN,IAAsB,EAA3C;AACA,MAAMC,aAAa,GAAG,CAAC;AAACC,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAtB;AACA,MAAMC,UAAU,GAAG3B,KAAK,CAAC2B,UAAN,IAAoBL,eAAe,GAAGE,YAAzD;AACA,MAAMI,IAAI,GAAG,oBAAQ;AAAA,WAAM5B,KAAK,CAAC4B,IAAN,IAAc,EAApB;AAAA,GAAR,EAAgC,CAAC5B,KAAK,CAAC4B,IAAP,CAAhC,CAAb;AACA,MAAMC,OAAO,GAAG7B,KAAK,CAAC6B,OAAN,KAAkB,CAAlB,GAAsB,CAAtB,GAA0B7B,KAAK,CAAC6B,OAAN,GAAgB7B,KAAK,CAAC6B,OAAtB,GAAgC,EAA1E;AACA,MAAMC,UAAU,GAAG9B,KAAK,CAAC8B,UAAN,IAAoB,CAAvC;AAEA,MAAIC,UAAU,GAAGF,OAAjB;AACA,MAAIG,OAAO,GAAG,CAAd;;AACA,MAAIhC,KAAK,CAACiC,SAAV,EAAqB;AACnBjC,IAAAA,KAAK,CAACiC,SAAN,CAAgBC,OAAhB,CAAwB,UAAAC,SAAS,EAAI;AAEnC,UAAIC,QAAQ,GAAGD,SAAS,CAACE,MAAV,CAAiBC,MAAjB,CACb,UAACC,GAAD,EAAMC,KAAN;AAAA,eAAgBD,GAAG,GAAGC,KAAK,CAACd,KAA5B;AAAA,OADa,EAEb,CAFa,CAAf;;AAKA,UAAIU,QAAQ,GAAGJ,OAAf,EAAwB;AACtBA,QAAAA,OAAO,GAAGI,QAAV;AACD;;AACDL,MAAAA,UAAU,IACR,CAACI,SAAS,CAACE,MAAV,CAAiB,CAAjB,EAAoBI,QAApB,IAAgCzC,KAAK,CAACyC,QAAtC,IAAkD,EAAnD,IAAyDZ,OAD3D;AAGD,KAbD;AAcD,GAfD,MAeO;AACLD,IAAAA,IAAI,CAACM,OAAL,CAAa,UAACQ,IAAD,EAAoB;AAC/B,UAAIA,IAAI,CAAChB,KAAL,GAAaM,OAAjB,EAA0B;AACxBA,QAAAA,OAAO,GAAGU,IAAI,CAAChB,KAAf;AACD;;AACDK,MAAAA,UAAU,IACR,CAACW,IAAI,CAACD,QAAL,IAAiBzC,KAAK,CAACyC,QAAvB,IAAmC,EAApC,KACCC,IAAI,CAACb,OAAL,KAAiB,CAAjB,GAAqB,CAArB,GAAyBa,IAAI,CAACb,OAAL,IAAgBA,OAD1C,CADF;AAID,KARD;AASD;;AACD,MAAI7B,KAAK,CAAC2C,oBAAN,IAA8B3C,KAAK,CAAC4C,aAAxC,EAAuD;AACrDZ,IAAAA,OAAO,IAAI,MAAMhC,KAAK,CAAC4C,aAAN,IAAuB,CAA7B,CAAX;AACAZ,IAAAA,OAAO,GAAGA,OAAO,IAAI,KAAMA,OAAO,GAAG,EAApB,CAAjB;AACAA,IAAAA,OAAO,IAAI,MAAMhC,KAAK,CAAC4C,aAAN,IAAuB,CAA7B,CAAX;AACAZ,IAAAA,OAAO,GAAGa,UAAU,CAACb,OAAO,CAACc,OAAR,CAAgB9C,KAAK,CAAC4C,aAAN,IAAuB,CAAvC,CAAD,CAApB;AACD,GALD,MAKO;AACLZ,IAAAA,OAAO,GAAGA,OAAO,IAAI,KAAMA,OAAO,GAAG,EAApB,CAAjB;AACD;;AAED,MAAMe,QAAQ,GAAG/C,KAAK,CAAC+C,QAAN,IAAkBf,OAAnC;AAEA,MAAMgB,SAAS,GAAGhD,KAAK,CAACgD,SAAN,IAAmBD,QAAQ,GAAGvB,YAAhD;AACA,MAAMyB,aAAa,GAAGjD,KAAK,CAACiD,aAAN,IAAuB,KAA7C;AACA,MAAMC,mBAAmB,GAAGlD,KAAK,CAACkD,mBAAN,IAA6B,KAAzD;AACA,MAAMC,cAAc,GAClBnD,KAAK,CAACmD,cAAN,KAAyB,CAAzB,GAA6B,CAA7B,GAAiCnD,KAAK,CAACmD,cAAN,IAAwB,EAD3D;AAGA,MAAMC,IAAI,GAAGpD,KAAK,CAACoD,IAAN,IAAc,EAA3B;AACA,MAAMC,WAAW,GAAGrD,KAAK,CAACqD,WAAN,IAAqB,KAAzC;AACA,MAAM/C,UAAU,GAAGN,KAAK,CAACM,UAAN,IAAoB,KAAvC;AACA,MAAMgD,iBAAiB,GAAGtD,KAAK,CAACsD,iBAAN,IAA2B,GAArD;AAEA,MAAMC,OAAO,GAAGvD,KAAK,CAACuD,OAAN,IAAiB,CAAjC;AACA,MAAMC,QAAQ,GAAGxD,KAAK,CAACwD,QAAN,IAAkB,KAAnC;AAEA,MAAMC,iBAAiB,GAAGzD,KAAK,CAACyD,iBAAN,IAA2B,KAArD;AACA,MAAMC,cAAc,GAClB1D,KAAK,CAAC0D,cAAN,KAAyB,CAAzB,GAA6B,CAA7B,GAAiC1D,KAAK,CAAC0D,cAAN,IAAwB,CAD3D;AAEA,MAAMC,UAAU,GAAG3D,KAAK,CAAC2D,UAAN,IAAoB,WAAvC;AACA,MAAMC,sBAAsB,GAC1B5D,KAAK,CAAC4D,sBAAN,KAAiC,CAAjC,GAAqC,CAArC,GAAyC5D,KAAK,CAAC4D,sBAAN,IAAgC,CAD3E;AAEA,MAAMC,kBAAkB,GAAG7D,KAAK,CAAC6D,kBAAN,IAA4B,WAAvD;AACA,MAAMC,mBAAmB,GAAG9D,KAAK,CAAC8D,mBAAN,IAA6B,CAAC,CAA1D;AAEA,MAAMC,gBAAgB,GAAG/D,KAAK,CAAC+D,gBAAN,IAA0B,KAAnD;AACA,MAAMC,gBAAgB,GAAGhE,KAAK,CAACgE,gBAAN,IAA0B,KAAnD;AACA,MAAMC,kBAAkB,GAAGjE,KAAK,CAACiE,kBAAN,IAA4B,CAAvD;AACA,MAAMC,kBAAkB,GAAGlE,KAAK,CAACkE,kBAAN,IAA4B,CAAvD;AACA,MAAMC,iBAAiB,GAAGnE,KAAK,CAACmE,iBAAN,IAA2B,CAArD;AACA,MAAMC,iBAAiB,GAAGpE,KAAK,CAACoE,iBAAN,IAA2B,CAArD;AACA,MAAMC,iBAAiB,GAAGrE,KAAK,CAACqE,iBAAN,IAA2B,OAArD;AACA,MAAMC,iBAAiB,GAAGtE,KAAK,CAACsE,iBAAN,IAA2B,OAArD;AAEA,MAAMC,cAAc,GAClBvE,KAAK,CAACuE,cAAN,KAAyB,CAAzB,GACIvE,KAAK,CAACuE,cADV,GAEIvE,KAAK,CAACuE,cAAN,IAAwB,CAH9B;AAIA,MAAMC,UAAU,GAAGxE,KAAK,CAACwE,UAAN,IAAoB,OAAvC;AAEA,MAAMC,SAAS,GAAGzE,KAAK,CAACyE,SAAN,IAAmB,KAArC;AAEA,MAAMC,cAAc,GAClB1E,KAAK,CAAC0E,cAAN,KAAyB,CAAzB,GACI1E,KAAK,CAAC0E,cADV,GAEI1E,KAAK,CAAC0E,cAAN,IAAwB,CAH9B;AAIA,MAAMC,UAAU,GAAG3E,KAAK,CAAC2E,UAAN,IAAoB,OAAvC;AACA,MAAMC,cAAc,GAAG5E,KAAK,CAAC4E,cAA7B;AACA,MAAMjC,oBAAoB,GAAG3C,KAAK,CAAC2C,oBAAN,IAA8B,KAA3D;AACA,MAAMkC,eAAe,GAAG7E,KAAK,CAAC6E,eAAN,IAAyB,EAAjD;AACA,MAAMC,aAAa,GAAG9E,KAAK,CAAC8E,aAAN,IAAuB,KAA7C;AAEA,MAAMC,eAAe,GAAG/E,KAAK,CAAC+E,eAAN,IAAyB,aAAjD;AACA,MAAMC,UAAU,GAAGhF,KAAK,CAACgF,UAAN,IAAoB,KAAvC;AACA,MAAMC,UAAU,GAAGjF,KAAK,CAACiF,UAAN,IAAoB,KAAvC;AACA,MAAMC,cAAc,GAAGlF,KAAK,CAACkF,cAAN,IAAwB,KAA/C;AACA,MAAMC,UAAU,GAAGnF,KAAK,CAACmF,UAAN,IAAoB,KAAvC;AAEA,MAAMC,SAAS,GAAGpF,KAAK,CAACoF,SAAN,IAAmB,MAArC;AACA,MAAMC,SAAS,GAAGrF,KAAK,CAACqF,SAAN,KAAoB,CAApB,GAAwB,CAAxB,GAA4BrF,KAAK,CAACqF,SAAN,IAAmB,CAAjE;AACA,MAAMC,OAAO,GAAGtF,KAAK,CAACsF,OAAN,KAAkB,CAAlB,GAAsB,CAAtB,GAA0BtF,KAAK,CAACsF,OAAN,IAAiB,CAA3D;AAEA,MAAMC,WAAW,GAAG,oBAAQ;AAAA,WAAM,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CAAN;AAAA,GAAR,EAAqC,EAArC,CAApB;AACA,MAAMC,SAAS,GAAG,oBAAQ;AAAA,WAAM,IAAIF,sBAASC,KAAb,CAAmB,CAAnB,CAAN;AAAA,GAAR,EAAqC,EAArC,CAAlB;AACA,MAAME,UAAU,GAAG,oBAAQ;AAAA,WAAM,IAAIH,sBAASC,KAAb,CAAmB,CAAnB,CAAN;AAAA,GAAR,EAAqC,EAArC,CAAnB;AAEA,MAAMG,YAAY,GAAG,wBAAY,YAAM;AACrCF,IAAAA,SAAS,CAACG,QAAV,CAAmB,CAAnB;;AACAL,0BAASM,MAAT,CAAgBJ,SAAhB,EAA2B;AACzBK,MAAAA,OAAO,EAAE,CADgB;AAEzBC,MAAAA,QAAQ,EAAE,GAFe;AAGzBC,MAAAA,MAAM,EAAEC,oBAAOC,IAHU;AAIzBC,MAAAA,eAAe,EAAE;AAJQ,KAA3B,EAKGC,KALH;AAMD,GARoB,EAQlB,CAACX,SAAD,CARkB,CAArB;AAmBA,MAAMY,aAAa,GAAG,wBAAY,YAAM;AACtCX,IAAAA,UAAU,CAACE,QAAX,CAAoB,CAApB;;AACAL,0BAASM,MAAT,CAAgBH,UAAhB,EAA4B;AAC1BI,MAAAA,OAAO,EAAE,CADiB;AAE1BC,MAAAA,QAAQ,EAAE1C,iBAFgB;AAG1B2C,MAAAA,MAAM,EAAEC,oBAAOK,MAHW;AAI1BH,MAAAA,eAAe,EAAE;AAJS,KAA5B,EAKGC,KALH;AAMD,GARqB,EAQnB,CAAC/C,iBAAD,EAAoBqC,UAApB,CARmB,CAAtB;AAWA,wBAAU,YAAM;AACd,QAAIxF,QAAJ,EAAc;AACZ,UAAIqG,EAAE,GAAG,EAAT;;AACA,UAAI,CAACnF,UAAU,CAAChB,MAAhB,EAAwB;AACtB,aAAK,IAAIoG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7E,IAAI,CAAC8E,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,cAAME,eAAe,GAClB/E,IAAI,IAAIA,IAAI,CAAC6E,CAAD,CAAZ,IAAmB7E,IAAI,CAAC6E,CAAD,CAAJ,CAAQhE,QAA5B,IAAyCzC,KAAK,CAACyC,QAA/C,IAA2D,EAD7D;AAEA+D,UAAAA,EAAE,IACA,OACC3B,eAAe,GACd,CADD,IAEE1B,cAAc,GAAGwD,eAAe,GAAG,CAFrC,IAGCtF,UAAU,CAACV,eAAX,GAA6B,CAH9B,GAIC,CAACgG,eAAe,GAAG9E,OAAnB,IAA8B4E,CALhC,IAMA,GANA,IAOCnF,eAAe,GACdD,UAAU,CAACF,MADZ,GAEC,EAFD,GAGES,IAAI,CAAC6E,CAAD,CAAJ,CAAQ/E,KAAR,GAAgBJ,eAAjB,GAAoCyB,QAVtC,IAWA,GAZF;AAaD;;AACD7C,QAAAA,SAAS,CAACsG,EAAE,CAACI,OAAH,CAAW,GAAX,EAAgB,GAAhB,CAAD,CAAT;AACD,OAnBD,MAmBO;AACL,YAAIC,OAAO,GAAG,EAAd;;AACA,aAAK,IAAIJ,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG7E,IAAI,CAAC8E,MAAzB,EAAiCD,EAAC,EAAlC,EAAsC;AACpC,cAAME,gBAAe,GAClB/E,IAAI,IAAIA,IAAI,CAAC6E,EAAD,CAAZ,IAAmB7E,IAAI,CAAC6E,EAAD,CAAJ,CAAQhE,QAA5B,IAAyCzC,KAAK,CAACyC,QAA/C,IAA2D,EAD7D;;AAEAoE,UAAAA,OAAO,CAACC,IAAR,CAAa,CACXjC,eAAe,GACb,CADF,IAEG1B,cAAc,GAAGwD,gBAAe,GAAG,CAFtC,IAGEtF,UAAU,CAACV,eAAX,GAA6B,CAH/B,GAIE,CAACgG,gBAAe,GAAG9E,OAAnB,IAA8B4E,EALrB,EAMXnF,eAAe,GACbD,UAAU,CAACF,MADb,GAEE,EAFF,GAGGS,IAAI,CAAC6E,EAAD,CAAJ,CAAQ/E,KAAR,GAAgBJ,eAAjB,GAAoCyB,QAT3B,CAAb;AAWA,cAAIgE,EAAE,GAAG,oBAAQF,OAAR,EAAiBG,oBAAjB,CAAT;AACA9G,UAAAA,SAAS,CAAC6G,EAAD,CAAT;AACD;AACF;;AACD,UAAI1F,UAAU,CAACf,UAAf,EAA2B;AACzB2G,QAAAA,UAAU,CAAC;AAAA,iBAAMX,aAAa,EAAnB;AAAA,SAAD,EAAwBjF,UAAU,CAACD,KAAX,IAAoB,CAA5C,CAAV;AACD;AACF;;AAED6F,IAAAA,UAAU,CAAC;AAAA,aAAMrB,YAAY,EAAlB;AAAA,KAAD,EAAuBtC,iBAAvB,CAAV;AACD,GAhDD,EAgDG,CACDA,iBADC,EAEDhC,eAFC,EAGDM,IAHC,EAID0E,aAJC,EAKDnD,cALC,EAMDyC,YANC,EAODvE,UAAU,CAAChB,MAPV,EAQDgB,UAAU,CAACV,eARV,EASDU,UAAU,CAACF,MATV,EAUDE,UAAU,CAACf,UAVV,EAWDe,UAAU,CAACD,KAXV,EAYD2B,QAZC,EAcD/C,KAAK,CAACyC,QAdL,EAeDtC,QAfC,EAgBD0B,OAhBC,EAiBDgD,eAjBC,CAhDH;AAoEA,MAAMqC,sBAAsB,GAAG;AAC7B3G,IAAAA,SAAS,EAAEmD,cADkB;AAE7ByD,IAAAA,KAAK,EAAEnC,UAAU,GACbhF,KAAK,CAACmH,KAAN,IAAepF,UADF,GAEb,CAAC/B,KAAK,CAACmH,KAAN,IAAepF,UAAhB,IAA8B,EAJL;AAK7BvB,IAAAA,KAAK,EAAE,OALsB;AAM7B4G,IAAAA,IAAI,EAAEhC,SANuB;AAO7BC,IAAAA,SAAS,EAAEA,SAPkB;AAQ7BC,IAAAA,OAAO,EAAEA;AARoB,GAA/B;AAWA,MAAM+B,kBAAkB,GAAGrH,KAAK,CAACqH,kBAAN,IAA4B,KAAvD;AACA,MAAMC,sBAAsB,GAC1BtH,KAAK,CAACsH,sBAAN,KAAiC,CAAjC,GACI,CADJ,GAEItH,KAAK,CAACsH,sBAAN,IAAgChG,eAAe,GAAG,CAHxD;AAIA,MAAMiG,oBAAoB,GAAGvH,KAAK,CAACuH,oBAAN,GACzB;AACEhH,IAAAA,SAAS,EAAEP,KAAK,CAACuH,oBAAN,CAA2BhH,SAA3B,IAAwCmD,cADrD;AAEEyD,IAAAA,KAAK,EAAEnC,UAAU,GACbhF,KAAK,CAACuH,oBAAN,CAA2BJ,KAA3B,IAAoCnH,KAAK,CAACmH,KAA1C,IAAmDpF,UADtC,GAEb,CAAC/B,KAAK,CAACuH,oBAAN,CAA2BJ,KAA3B,IAAoCnH,KAAK,CAACmH,KAA1C,IAAmDpF,UAApD,IACA,EALN;AAMEvB,IAAAA,KAAK,EAAER,KAAK,CAACuH,oBAAN,CAA2B/G,KAA3B,IAAoC,OAN7C;AAOE4G,IAAAA,IAAI,EAAEpH,KAAK,CAACuH,oBAAN,CAA2BH,IAA3B,IAAmChC,SAP3C;AAQEC,IAAAA,SAAS,EAAErF,KAAK,CAACuH,oBAAN,CAA2BlC,SAA3B,IAAwCA,SARrD;AASEC,IAAAA,OAAO,EAAEtF,KAAK,CAACuH,oBAAN,CAA2BjC,OAA3B,IAAsCA;AATjD,GADyB,GAYzB4B,sBAZJ;AAcA,MAAMM,kBAAkB,GAAGxH,KAAK,CAACwH,kBAAN,IAA4B,KAAvD;AACA,MAAMC,sBAAsB,GAC1BzH,KAAK,CAACyH,sBAAN,KAAiC,CAAjC,GACI,CADJ,GAEIzH,KAAK,CAACyH,sBAAN,IAAiC,IAAInG,eAAL,GAAwB,CAH9D;AAIA,MAAMoG,oBAAoB,GAAG1H,KAAK,CAAC0H,oBAAN,GACzB;AACEnH,IAAAA,SAAS,EAAEP,KAAK,CAAC0H,oBAAN,CAA2BnH,SAA3B,IAAwCmD,cADrD;AAEEyD,IAAAA,KAAK,EAAEnC,UAAU,GACbhF,KAAK,CAAC0H,oBAAN,CAA2BP,KAA3B,IAAoCnH,KAAK,CAACmH,KAA1C,IAAmDpF,UADtC,GAEb,CAAC/B,KAAK,CAAC0H,oBAAN,CAA2BP,KAA3B,IAAoCnH,KAAK,CAACmH,KAA1C,IAAmDpF,UAApD,IACA,EALN;AAMEvB,IAAAA,KAAK,EAAER,KAAK,CAAC0H,oBAAN,CAA2BlH,KAA3B,IAAoC,OAN7C;AAOE4G,IAAAA,IAAI,EAAEpH,KAAK,CAAC0H,oBAAN,CAA2BN,IAA3B,IAAmChC,SAP3C;AAQEC,IAAAA,SAAS,EAAErF,KAAK,CAAC0H,oBAAN,CAA2BrC,SAA3B,IAAwCA,SARrD;AASEC,IAAAA,OAAO,EAAEtF,KAAK,CAAC0H,oBAAN,CAA2BpC,OAA3B,IAAsCA;AATjD,GADyB,GAYzB4B,sBAZJ;AAcA,MAAMS,kBAAkB,GAAG3H,KAAK,CAAC2H,kBAAN,IAA4B,KAAvD;AACA,MAAMC,sBAAsB,GAC1B5H,KAAK,CAAC4H,sBAAN,KAAiC,CAAjC,GACI,CADJ,GAEI5H,KAAK,CAAC4H,sBAAN,IAAgCtG,eAAe,GAAG,CAHxD;AAIA,MAAMuG,oBAAoB,GAAG7H,KAAK,CAAC6H,oBAAN,GACzB;AACEtH,IAAAA,SAAS,EAAEP,KAAK,CAAC6H,oBAAN,CAA2BtH,SAA3B,IAAwCmD,cADrD;AAEEyD,IAAAA,KAAK,EAAEnC,UAAU,GACbhF,KAAK,CAAC6H,oBAAN,CAA2BV,KAA3B,IAAoCnH,KAAK,CAACmH,KAA1C,IAAmDpF,UADtC,GAEb,CAAC/B,KAAK,CAAC6H,oBAAN,CAA2BV,KAA3B,IAAoCnH,KAAK,CAACmH,KAA1C,IAAmDpF,UAApD,IACA,EALN;AAMEvB,IAAAA,KAAK,EAAER,KAAK,CAAC6H,oBAAN,CAA2BrH,KAA3B,IAAoC,OAN7C;AAOE4G,IAAAA,IAAI,EAAEpH,KAAK,CAAC6H,oBAAN,CAA2BT,IAA3B,IAAmChC,SAP3C;AAQEC,IAAAA,SAAS,EAAErF,KAAK,CAAC6H,oBAAN,CAA2BxC,SAA3B,IAAwCA,SARrD;AASEC,IAAAA,OAAO,EAAEtF,KAAK,CAAC6H,oBAAN,CAA2BvC,OAA3B,IAAsCA;AATjD,GADyB,GAYzB4B,sBAZJ;AAcAzF,EAAAA,aAAa,CAACqG,GAAd;;AACA,OAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIjF,YAArB,EAAmCiF,CAAC,EAApC,EAAwC;AAAA;;AACtC,QAAI/E,KAAK,GAAGqB,QAAQ,GAAGC,SAAS,GAAGyD,CAAnC;;AACA,QAAIzG,KAAK,CAAC2C,oBAAN,IAA8B3C,KAAK,CAAC4C,aAAxC,EAAuD;AACrDlB,MAAAA,KAAK,GAAGmB,UAAU,CAACnB,KAAK,CAACoB,OAAN,CAAc9C,KAAK,CAAC4C,aAAN,IAAuB,CAArC,CAAD,CAAlB;AACD;;AACDnB,IAAAA,aAAa,CAACqF,IAAd,CAAmB;AACjBpF,MAAAA,KAAK,EAAE1B,KAAK,CAAC+H,eAAN,4BACH/H,KAAK,CAAC+H,eAAN,CAAsBvG,YAAY,GAAGiF,CAArC,CADG,oCACwC/E,KAAK,CAACsG,QAAN,EADxC,GAEHtG,KAAK,CAACsG,QAAN;AAHa,KAAnB;AAKD;;AAED,MAAMC,cAAc,GAAG1C,WAAW,CAAC2C,WAAZ,CAAwB;AAC7CC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADiC;AAE7CC,IAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,MAAP;AAFgC,GAAxB,CAAvB;AAIA,MAAMC,gBAAgB,GAAG3C,SAAS,CAACwC,WAAV,CAAsB;AAC7CC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADiC;AAE7CC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFgC,GAAtB,CAAzB;AAKA,MAAME,aAAa,GAAG3C,UAAU,CAACuC,WAAX,CAAuB;AAC3CC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD+B;AAE3CC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAIrG,UAAJ;AAF8B,GAAvB,CAAtB;;AAKA,MAAMwG,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,WACE,4DACG9G,aAAa,CAAC+G,GAAd,CAAkB,UAACC,YAAD,EAAeC,KAAf,EAAyB;AAC1C,aACE,6BAAC,iBAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAE,CACLC,eAAOC,QADF,EAEL;AACEzB,UAAAA,KAAK,EAAEnC,UAAU,GACbhF,KAAK,CAACmH,KAAN,IAAepF,UADF,GAEb/B,KAAK,CAACmH,KAAN,IAAepF,UAAU,GAAG;AAHlC,SAFK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE,CACL4G,eAAOE,SADF,EAEL;AACEC,UAAAA,gBAAgB,EAAEpE,cADpB;AAEEqE,UAAAA,WAAW,EAAEpE;AAFf,SAFK,EAMLK,UAAU,IACR,CAACC,UADH,IACiB;AACb+D,UAAAA,SAAS,EAAE,CAAC;AAACC,YAAAA,UAAU,EAAElH,UAAU,GAAG2C;AAA1B,WAAD;AADE,SAPZ,EAUL;AACEnD,UAAAA,MAAM,EACJmH,KAAK,KAAKlH,YAAV,GAAyBG,UAAU,GAAG,CAAtC,GAA0CA,UAF9C;AAGEwF,UAAAA,KAAK,EAAEtC;AAHT,SAVK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiBG,CAACC,aAAD,GACC,6BAAC,iBAAD;AACE,QAAA,aAAa,EAAE,CADjB;AAEE,QAAA,aAAa,EAAE,MAFjB;AAGE,QAAA,KAAK,EAAE,CACLF,cADK,EAEL8D,KAAK,KAAKlH,YAAV,IAA0B;AAAC0H,UAAAA,YAAY,EAAEvH,UAAU,GAAG,CAAC;AAA7B,SAFrB,EAGLqD,UAAU,IAAI;AACZgE,UAAAA,SAAS,EAAE,CACT;AAACG,YAAAA,MAAM,EAAE;AAAT,WADS,EAET;AAACC,YAAAA,UAAU,EAAEnE,UAAU,GAAG,CAAH,GAAO;AAA9B,WAFS;AADC,SAHT,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaGtC,oBAAoB,GACjB8F,YAAY,CAAC/G,KAAb,GACE+G,YAAY,CAAC/G,KADf,GAEEyD,UAAU,GACV,EADU,GAEV,GALe,GAMjBsD,YAAY,CAAC/G,KAAb,GACA+G,YAAY,CAAC/G,KAAb,CAAmBsG,QAAnB,GAA8BqB,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,CADA,GAEAlE,UAAU,GACV,EADU,GAEV,GAvBN,CADD,GA0BG,IA3CN,CAVF,EAuDE,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE,CACLuD,KAAK,KAAKlH,YAAV,GACImH,eAAOW,YADX,GAEIX,eAAOY,QAHN,EAIL;AAACxE,UAAAA,eAAe,EAAEA;AAAlB,SAJK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG2D,KAAK,KAAKlH,YAAV,GACC,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE,CACLmH,eAAOa,QADF,EAEL;AAACjI,UAAAA,MAAM,EAAEgD,cAAT;AAAyBQ,UAAAA,eAAe,EAAEP;AAA1C,SAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAOGC,SAAS,GAAG,IAAH,GACX,6BAAC,gBAAD;AACE,QAAA,MAAM,EAAE;AACNlE,UAAAA,SAAS,EAAEmD,cADL;AAENlD,UAAAA,KAAK,EAAEmD,UAFD;AAGNwD,UAAAA,KAAK,EAAEnC,UAAU,GACbhF,KAAK,CAACmH,KAAN,IAAepF,UADF,GAEb,CAAC/B,KAAK,CAACmH,KAAN,IAAepF,UAAhB,IAA8B,EAL5B;AAMNsD,UAAAA,SAAS,EAAEA,SANL;AAONC,UAAAA,OAAO,EAAEA,OAPH;AAQN8B,UAAAA,IAAI,EAAEhC;AARA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EA4BGsD,KAAK,KAAK,CAAV,IAAerB,kBAAf,GACC,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE;AACLoC,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,MAAM,EACHpC,sBAAsB,GAAGhG,eAA1B,GAA6CyB,QAA7C,GACApB,UAAU,GAAG,CADb,GAEA4F,oBAAoB,CAAChH,SAArB,GAAiC,CAL9B;AAMLyI,UAAAA,SAAS,EAAE,CAAC;AAACI,YAAAA,UAAU,EAAE9H;AAAb,WAAD;AANN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,6BAAC,gBAAD;AAAM,QAAA,MAAM,EAAEiG,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADD,GAYG,IAxCN,EAyCGmB,KAAK,KAAK,CAAV,IAAelB,kBAAf,GACC,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE;AACLiC,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,MAAM,EACHjC,sBAAsB,GAAGnG,eAA1B,GAA6CyB,QAA7C,GACApB,UAAU,GAAG,CADb,GAEA+F,oBAAoB,CAACnH,SAArB,GAAiC,CAL9B;AAMLyI,UAAAA,SAAS,EAAE,CAAC;AAACI,YAAAA,UAAU,EAAE9H;AAAb,WAAD;AANN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,6BAAC,gBAAD;AAAM,QAAA,MAAM,EAAEoG,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADD,GAYG,IArDN,EAsDGgB,KAAK,KAAK,CAAV,IAAef,kBAAf,GACC,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE;AACL8B,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,MAAM,EACH9B,sBAAsB,GAAGtG,eAA1B,GAA6CyB,QAA7C,GACApB,UAAU,GAAG,CADb,GAEAkG,oBAAoB,CAACtH,SAArB,GAAiC,CAL9B;AAMLyI,UAAAA,SAAS,EAAE,CAAC;AAACI,YAAAA,UAAU,EAAE9H;AAAb,WAAD;AANN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,6BAAC,gBAAD;AAAM,QAAA,MAAM,EAAEuG,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADD,GAYG,IAlEN,EAmEG9D,gBAAgB,IAAI2E,KAAK,KAAKlH,YAA9B,GACC,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE,CACL;AACEiI,UAAAA,QAAQ,EAAE,UADZ;AAEElI,UAAAA,MAAM,EAAE0C,kBAFV;AAGEkD,UAAAA,KAAK,EAAEhD,iBAHT;AAIEwF,UAAAA,IAAI,EAAExF,iBAAiB,GAAG,CAAC,CAJ7B;AAKEY,UAAAA,eAAe,EAAET;AALnB,SADK,EAQLU,UAAU,IACR,CAACC,UADH,IACiB;AACb+D,UAAAA,SAAS,EAAE,CACT;AAACC,YAAAA,UAAU,EAAElH,UAAU,GAAG2C;AAA1B,WADS;AADE,SATZ,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAkBG,IArFN,CAvDF,CADF;AAiJD,KAlJA,CADH,CADF;AAuJD,GAxJD;;AA0JA,MAAMkF,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,aAAD,EAAwB;AAC1D,WAAOA,aAAa,CAACrB,GAAd,CAAkB,UAAC9F,IAAD,EAAYgG,KAAZ,EAA8B;AACrD,UAAIhG,IAAI,CAACoH,gBAAT,EAA2B;AACzB,YAAMnD,eAAe,GAAGjE,IAAI,CAACD,QAAL,IAAiBzC,KAAK,CAACyC,QAAvB,IAAmC,EAA3D;AACA,eACE,6BAAC,oBAAD;AACE,UAAA,CAAC,EACCoC,eAAe,GACf,CADA,GAEA,CAACnC,IAAI,CAACqH,qBAAL,IAA8B,CAA/B,IAAoC,CAFpC,GAGA,CAHA,IAIC5G,cAAc,GAAGwD,eAAe,GAAG,CAJpC,IAKA,CAACA,eAAe,GAAG9E,OAAnB,IAA8B6G,KAPlC;AASE,UAAA,CAAC,EACCpH,eAAe,GACfD,UAAU,CAACF,MADX,GAECuB,IAAI,CAAChB,KAAL,GAAaJ,eAAd,GAAiCyB,QAFjC,GAGA,CAbJ;AAeE,UAAA,KAAK,EAAEL,IAAI,CAACqH,qBAAL,IAA8B,CAfvC;AAgBE,UAAA,MAAM,EACHrH,IAAI,CAAChB,KAAL,GAAaJ,eAAd,GAAiCyB,QAAjC,GAA4C1B,UAAU,CAACF,MAjB3D;AAmBE,UAAA,IAAI,EAAEuB,IAAI,CAACsH,iBAAL,IAA0B,WAnBlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;AACD,aAAO,IAAP;AACD,KA5BM,CAAP;AA6BD,GA9BD;;AAgCA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,WAAOrI,IAAI,CAAC4G,GAAL,CAAS,UAAC9F,IAAD,EAAYgG,KAAZ,EAA8B;AAE5C,UAAM/B,eAAe,GAAGjE,IAAI,CAACD,QAAL,IAAiBzC,KAAK,CAACyC,QAAvB,IAAmC,EAA3D;;AACA,UAAIpB,UAAU,CAACX,eAAX,KAA+B,aAAnC,EAAkD;AAChD,eACE,6BAAC,eAAD;AAAU,UAAA,GAAG,EAAEgI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,6BAAC,oBAAD;AACE,UAAA,CAAC,EACC7D,eAAe,GACf,CADA,IAEC1B,cAAc,GAAGwD,eAAe,GAAG,CAFpC,IAGAtF,UAAU,CAACV,eAHX,GAIA,CAACgG,eAAe,GAAG9E,OAAnB,IAA8B6G,KANlC;AAQE,UAAA,CAAC,EACCpH,eAAe,GACfD,UAAU,CAACF,MADX,GAEAE,UAAU,CAACT,gBAAX,GAA8B,CAF9B,GAGA,EAHA,GAIC8B,IAAI,CAAChB,KAAL,GAAaJ,eAAd,GAAiCyB,QAbrC;AAeE,UAAA,KAAK,EAAE1B,UAAU,CAACV,eAfpB;AAgBE,UAAA,MAAM,EAAEU,UAAU,CAACT,gBAhBrB;AAiBE,UAAA,IAAI,EAAES,UAAU,CAACR,eAjBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAoBG6B,IAAI,CAACwH,aAAL,IACC,6BAAC,oBAAD;AACE,UAAA,IAAI,EAAExH,IAAI,CAAC3B,SAAL,IAAkBM,UAAU,CAACN,SADrC;AAEE,UAAA,QAAQ,EAAE2B,IAAI,CAAC1B,YAAL,IAAqBK,UAAU,CAACL,YAF5C;AAGE,UAAA,CAAC,EACC6D,eAAe,GACf,CADA,IAEC1B,cAAc,GAAGwD,eAAe,GAAG,CAFpC,IAGAtF,UAAU,CAACV,eAHX,GAIA,CAACgG,eAAe,GAAG9E,OAAnB,IAA8B6G,KAJ9B,IAKChG,IAAI,CAACzB,UAAL,IAAmBI,UAAU,CAACJ,UAA9B,IAA4C,CAL7C,CAJJ;AAWE,UAAA,CAAC,EACCK,eAAe,GACfD,UAAU,CAACF,MADX,GAEAE,UAAU,CAACT,gBAAX,GAA8B,CAF9B,GAGA,EAHA,GAIC8B,IAAI,CAAChB,KAAL,GAAaJ,eAAd,GAAiCyB,QAJjC,IAKCL,IAAI,CAACxB,UAAL,IAAmBG,UAAU,CAACH,UAA9B,IAA4C,CAL7C,CAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAmBGwB,IAAI,CAACwH,aAnBR,CArBJ,CADF;AA8CD;;AACD,aACE,6BAAC,eAAD;AAAU,QAAA,GAAG,EAAExB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,sBAAD;AACE,QAAA,EAAE,EACA7D,eAAe,GACf,CADA,IAEC1B,cAAc,GAAGwD,eAAe,GAAG,CAFpC,IAGAtF,UAAU,CAACV,eAAX,GAA6B,CAH7B,GAIA,CAACgG,eAAe,GAAG9E,OAAnB,IAA8B6G,KANlC;AAQE,QAAA,EAAE,EACApH,eAAe,GACfD,UAAU,CAACF,MADX,GAEA,EAFA,GAGCuB,IAAI,CAAChB,KAAL,GAAaJ,eAAd,GAAiCyB,QAZrC;AAcE,QAAA,CAAC,EAAE1B,UAAU,CAACP,gBAdhB;AAeE,QAAA,IAAI,EAAEO,UAAU,CAACR,eAfnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAkBG6B,IAAI,CAACwH,aAAL,IACC,6BAAC,oBAAD;AACE,QAAA,IAAI,EAAExH,IAAI,CAAC3B,SAAL,IAAkBM,UAAU,CAACN,SADrC;AAEE,QAAA,QAAQ,EAAE2B,IAAI,CAAC1B,YAAL,IAAqBK,UAAU,CAACL,YAF5C;AAGE,QAAA,CAAC,EACC6D,eAAe,GACf,CADA,IAEC1B,cAAc,GAAGwD,eAAe,GAAG,CAFpC,IAGAtF,UAAU,CAACV,eAHX,GAIA,CAACgG,eAAe,GAAG9E,OAAnB,IAA8B6G,KAJ9B,IAKChG,IAAI,CAACzB,UAAL,IAAmBI,UAAU,CAACJ,UAA9B,IAA4C,CAL7C,CAJJ;AAWE,QAAA,CAAC,EACCK,eAAe,GACfD,UAAU,CAACF,MADX,GAEAE,UAAU,CAACT,gBAAX,GAA8B,CAF9B,GAGA,EAHA,GAIC8B,IAAI,CAAChB,KAAL,GAAaJ,eAAd,GAAiCyB,QAJjC,IAKCL,IAAI,CAACxB,UAAL,IAAmBG,UAAU,CAACH,UAA9B,IAA4C,CAL7C,CAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAmBGwB,IAAI,CAACwH,aAnBR,CAnBJ,CADF;AA4CD,KA/FM,CAAP;AAgGD,GAjGD;;AAkGA,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAN,aAAa,EAAI;AAChD,WAAOA,aAAa,CAACrB,GAAd,CAAkB,UAAC9F,IAAD,EAAYgG,KAAZ,EAA8B;AACrD,UAAM/B,eAAe,GAAGjE,IAAI,CAACD,QAAL,IAAiBzC,KAAK,CAACyC,QAAvB,IAAmC,EAA3D;;AACA,UAAIC,IAAI,CAAC0H,aAAT,EAAwB;AACtB,YAAI1H,IAAI,CAAC2H,cAAL,KAAwB,aAA5B,EAA2C;AACzC,iBACE,6BAAC,eAAD;AAAU,YAAA,GAAG,EAAE3B,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,6BAAC,oBAAD;AACE,YAAA,CAAC,EACCvF,cAAc,GACd,CAACT,IAAI,CAAC4H,cAAL,IAAuB,CAAxB,IAA6B,CAD7B,GAEA,CAFA,GAGA,CAAC3D,eAAe,GAAG9E,OAAnB,IAA8B6G,KALlC;AAOE,YAAA,CAAC,EACCpH,eAAe,GACfD,UAAU,CAACF,MADX,GAEA,CAACuB,IAAI,CAAC6H,eAAL,IAAwB,CAAzB,IAA8B,CAF9B,GAGA,EAHA,GAIC7H,IAAI,CAAChB,KAAL,GAAaJ,eAAd,GAAiCyB,QAZrC;AAcE,YAAA,KAAK,EAAEL,IAAI,CAAC4H,cAAL,IAAuB,CAdhC;AAeE,YAAA,MAAM,EAAE5H,IAAI,CAAC6H,eAAL,IAAwB,CAflC;AAgBE,YAAA,IAAI,EAAE7H,IAAI,CAAC8H,cAAL,IAAuB,OAhB/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAmBG9H,IAAI,CAACwH,aAAL,IACC,6BAAC,oBAAD;AACE,YAAA,IAAI,EAAExH,IAAI,CAAC3B,SAAL,IAAkB,OAD1B;AAEE,YAAA,QAAQ,EAAE2B,IAAI,CAAC1B,YAAL,IAAqB,EAFjC;AAGE,YAAA,CAAC,EACCmC,cAAc,IACbT,IAAI,CAAC4H,cAAL,IAAuB,CADV,CAAd,GAEAzI,OAAO,GAAG6G,KAFV,IAGChG,IAAI,CAACzB,UAAL,IAAmBI,UAAU,CAACJ,UAA9B,IAA4C,CAH7C,CAJJ;AASE,YAAA,CAAC,EACCK,eAAe,GACfD,UAAU,CAACF,MADX,GAEA,CAACuB,IAAI,CAAC6H,eAAL,IAAwB,CAAzB,IAA8B,CAF9B,GAGA,EAHA,GAIC7H,IAAI,CAAChB,KAAL,GAAaJ,eAAd,GAAiCyB,QAJjC,IAKCL,IAAI,CAACxB,UAAL,IAAmBG,UAAU,CAACH,UAA9B,IAA4C,CAL7C,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAiBGwB,IAAI,CAACwH,aAjBR,CApBJ,CADF;AA2CD,SA5CD,MA4CO;AACL,iBACE,6BAAC,eAAD;AAAU,YAAA,GAAG,EAAExB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,6BAAC,sBAAD;AACE,YAAA,EAAE,EACAvF,cAAc,GACd,CAACT,IAAI,CAAC4H,cAAL,IAAuB,CAAxB,IAA6B,CAD7B,GAEAzI,OAAO,GAAG6G,KAJd;AAME,YAAA,EAAE,EACApH,eAAe,GACfD,UAAU,CAACF,MADX,GAEA,EAFA,GAGCuB,IAAI,CAAChB,KAAL,GAAaJ,eAAd,GAAiCyB,QAVrC;AAYE,YAAA,CAAC,EAAEL,IAAI,CAAC+H,eAAL,IAAwB,CAZ7B;AAaE,YAAA,IAAI,EAAE/H,IAAI,CAAC8H,cAAL,IAAuB,OAb/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAgBG9H,IAAI,CAACwH,aAAL,IACC,6BAAC,oBAAD;AACE,YAAA,IAAI,EAAExH,IAAI,CAAC3B,SAAL,IAAkB,OAD1B;AAEE,YAAA,QAAQ,EAAE2B,IAAI,CAAC1B,YAAL,IAAqB,EAFjC;AAGE,YAAA,CAAC,EACCmC,cAAc,IACbT,IAAI,CAAC4H,cAAL,IAAuB,CADV,CAAd,GAEAzI,OAAO,GAAG6G,KAFV,IAGChG,IAAI,CAACzB,UAAL,IAAmBI,UAAU,CAACJ,UAA9B,IAA4C,CAH7C,CAJJ;AASE,YAAA,CAAC,EACCK,eAAe,GACfD,UAAU,CAACF,MADX,GAEA,CAACuB,IAAI,CAAC6H,eAAL,IAAwB,CAAzB,IAA8B,CAF9B,GAGA,EAHA,GAIC7H,IAAI,CAAChB,KAAL,GAAaJ,eAAd,GAAiCyB,QAJjC,IAKCL,IAAI,CAACxB,UAAL,IAAmBG,UAAU,CAACH,UAA9B,IAA4C,CAL7C,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAiBGwB,IAAI,CAACwH,aAjBR,CAjBJ,CADF;AAwCD;AACF;;AACD,aAAO,IAAP;AACD,KA3FM,CAAP;AA4FD,GA7FD;;AA+FA,MAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAE/B,WACE,6BAAC,qBAAD,CAAU,IAAV;AACE,MAAA,KAAK,EAAE;AACLjB,QAAAA,QAAQ,EAAE,UADL;AAELlI,QAAAA,MAAM,EAAED,eAAe,GAAG,EAFrB;AAGLoI,QAAAA,MAAM,EAAE,EAHH;AAILvC,QAAAA,KAAK,EAAEmB,aAJF;AAKLqC,QAAAA,MAAM,EAAE,CAAC;AALJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,6BAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,oBAAD;AACE,MAAA,CAAC,EAAE1K,MADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,MAAM,EAAEoB,UAAU,CAACb,KAHrB;AAIE,MAAA,WAAW,EAAEa,UAAU,CAACd,SAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQGqJ,2BAA2B,CAAChI,IAAD,CAR9B,EAUG,CAACP,UAAU,CAACZ,cAAZ,GACGwJ,gBAAgB,EADnB,GAEGE,wBAAwB,CAACvI,IAAD,CAZ9B,CATF,CADF;AA0BD,GA5BD;;AA8BA,MAAMgJ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,WACE,6BAAC,iBAAD;AACE,MAAA,KAAK,EAAE;AACLnB,QAAAA,QAAQ,EAAE,UADL;AAELlI,QAAAA,MAAM,EAAED,eAAe,GAAG,EAFrB;AAGLoI,QAAAA,MAAM,EAAE,EAHH;AAILvC,QAAAA,KAAK,EAAEpF,UAJF;AAKL4I,QAAAA,MAAM,EAAE,CAAC;AALJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,6BAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,oBAAD;AACE,MAAA,CAAC,EAAE1K,MADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,MAAM,EAAEoB,UAAU,CAACb,KAHrB;AAIE,MAAA,WAAW,EAAEa,UAAU,CAACd,SAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOGqJ,2BAA2B,CAAChI,IAAD,CAP9B,EASG,CAACP,UAAU,CAACZ,cAAZ,GACGwJ,gBAAgB,EADnB,GAEGE,wBAAwB,CAACvI,IAAD,CAX9B,CATF,CADF;AAyBD,GA1BD;;AA4BA,SACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACL+G,eAAOkC,SADF,EAEL;AACEtJ,MAAAA,MAAM,EAAED;AADV,KAFK,EAKLtB,KAAK,CAACmH,KAAN,IAAe;AAACA,MAAAA,KAAK,EAAEnH,KAAK,CAACmH;AAAd,KALV,EAMLnC,UAAU,IAAI;AAACgE,MAAAA,SAAS,EAAE,CAAC;AAACG,QAAAA,MAAM,EAAE;AAAT,OAAD,EAAoB;AAACC,QAAAA,UAAU,EAAE,CAAC;AAAd,OAApB;AAAZ,KANT,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGpJ,KAAK,CAAC8K,gBAAN,KAA2B,IAA3B,IAAmCvC,mBAAmB,EATzD,EAUE,6BAAC,uBAAD;AACE,IAAA,KAAK,EAAE,CACL;AACEwC,MAAAA,UAAU,EAAE,EADd;AAEEtB,MAAAA,QAAQ,EAAE,UAFZ;AAGEC,MAAAA,MAAM,EAAE/H,UAAU,GAAG,CAAC,GAAd,GAAoB,EAApB,GAAyB4C;AAHnC,KADK,EAMLvE,KAAK,CAACmH,KAAN,IAAe;AAACA,MAAAA,KAAK,EAAEnH,KAAK,CAACmH,KAAN,GAAc;AAAtB,KANV,EAOLnC,UAAU,IAAI;AAACmC,MAAAA,KAAK,EAAEpF;AAAR,KAPT,CADT;AAUE,IAAA,aAAa,EAAE,CAACkB,aAVlB;AAWE,IAAA,qBAAqB,EAAE,CACrB;AAEE1B,MAAAA,MAAM,EAAED,eAAe,GAAG,GAF5B;AAGE0J,MAAAA,WAAW,EAAE7H,cAHf;AAIE8H,MAAAA,UAAU,EAAE;AAJd,KADqB,EAOrB,CAACjL,KAAK,CAACmH,KAAP,IAAgB;AAACA,MAAAA,KAAK,EAAEpF;AAAR,KAPK,CAXzB;AAoBE,IAAA,8BAA8B,EAAEmB,mBApBlC;AAqBE,IAAA,UAAU,MArBZ;AAuBE,IAAA,YAAY,EAAE,sBAACR,IAAD,EAAOgG,KAAP;AAAA,aAAiBA,KAAK,CAACV,QAAN,EAAjB;AAAA,KAvBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwBE,6BAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7H,QAAQ,GACLkB,UAAU,CAACf,UAAX,GACEoK,kBAAkB,EADpB,GAEEE,UAAU,EAHP,GAIL,IALN,EAMG5K,KAAK,CAACiC,SAAN,GACGjC,KAAK,CAACiC,SAAN,CAAgBuG,GAAhB,CAAoB,UAAC9F,IAAD,EAAOgG,KAAP,EAAiB;AACnC,WACE,6BAAC,wBAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAEhG,IAFR;AAGE,MAAA,KAAK,EAAEgG,KAHT;AAIE,MAAA,eAAe,EAAEpH,eAJnB;AAKE,MAAA,QAAQ,EAAEyB,QALZ;AAME,MAAA,OAAO,EAAElB,OANX;AAOE,MAAA,QAAQ,EAAE7B,KAAK,CAACyC,QAPlB;AAQE,MAAA,OAAO,EAAEc,OARX;AASE,MAAA,YAAY,EAAEvD,KAAK,CAACkL,YATtB;AAUE,MAAA,WAAW,EAAE7H,WAVf;AAWE,MAAA,iBAAiB,EAAEI,iBAXrB;AAYE,MAAA,sBAAsB,EAAEG,sBAZ1B;AAaE,MAAA,kBAAkB,EAAEC,kBAbtB;AAcE,MAAA,mBAAmB,EAAEC,mBAdvB;AAeE,MAAA,gBAAgB,EAAEE,gBAfpB;AAgBE,MAAA,kBAAkB,EAAEE,kBAhBtB;AAiBE,MAAA,iBAAiB,EAAEE,iBAjBrB;AAkBE,MAAA,iBAAiB,EAAEC,iBAlBrB;AAmBE,MAAA,UAAU,EAAEW,UAnBd;AAoBE,MAAA,cAAc,EAAEE,cApBlB;AAqBE,MAAA,eAAe,EAAElF,KAAK,CAACmL,eArBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAyBD,GA1BD,CADH,GA4BGvJ,IAAI,CAAC4G,GAAL,CAAS,UAAC9F,IAAD,EAAOgG,KAAP;AAAA,WACP,6BAAC,mBAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAEhG,IAFR;AAGE,MAAA,KAAK,EAAEgG,KAHT;AAIE,MAAA,eAAe,EAAEpH,eAJnB;AAKE,MAAA,QAAQ,EAAEyB,QALZ;AAME,MAAA,OAAO,EAAEL,IAAI,CAACb,OAAL,KAAiB,CAAjB,GAAqB,CAArB,GAAyBa,IAAI,CAACb,OAAL,IAAgBA,OANpD;AAOE,MAAA,IAAI,EAAEuB,IAPR;AAQE,MAAA,IAAI,EAAExB,IARR;AASE,MAAA,QAAQ,EAAE5B,KAAK,CAACyC,QATlB;AAUE,MAAA,SAAS,EAAEzC,KAAK,CAACoL,SAVnB;AAWE,MAAA,UAAU,EAAEtJ,UAXd;AAYE,MAAA,OAAO,EAAEyB,OAZX;AAaE,MAAA,QAAQ,EAAEC,QAbZ;AAcE,MAAA,UAAU,EAAElD,UAdd;AAeE,MAAA,iBAAiB,EAAEgD,iBAfrB;AAgBE,MAAA,WAAW,EAAED,WAhBf;AAiBE,MAAA,cAAc,EAAE4E,cAjBlB;AAkBE,MAAA,gBAAgB,EAAEI,gBAlBpB;AAmBE,MAAA,UAAU,EAAErI,KAAK,CAACqL,UAnBpB;AAoBE,MAAA,aAAa,EAAErL,KAAK,CAACsL,aApBvB;AAqBE,MAAA,YAAY,EAAEtL,KAAK,CAACkL,YArBtB;AAsBE,MAAA,UAAU,EAAElL,KAAK,CAACuL,UAtBpB;AAuBE,MAAA,SAAS,EAAEvL,KAAK,CAACwL,SAvBnB;AAwBE,MAAA,QAAQ,EAAExL,KAAK,CAACyL,QAxBlB;AAyBE,MAAA,YAAY,EAAEzL,KAAK,CAAC0L,YAzBtB;AA0BE,MAAA,aAAa,EAAE1L,KAAK,CAAC2L,aA1BvB;AA2BE,MAAA,aAAa,EAAE3L,KAAK,CAAC4L,aA3BvB;AA4BE,MAAA,UAAU,EAAE5L,KAAK,CAAC6L,UA5BpB;AA6BE,MAAA,YAAY,EAAE7L,KAAK,CAAC8L,YA7BtB;AA8BE,MAAA,QAAQ,EAAE9L,KAAK,CAAC+L,QA9BlB;AA+BE,MAAA,SAAS,EAAE/L,KAAK,CAACgM,SA/BnB;AAgCE,MAAA,iBAAiB,EAAEvI,iBAhCrB;AAiCE,MAAA,sBAAsB,EAAEG,sBAjC1B;AAkCE,MAAA,kBAAkB,EAAEC,kBAlCtB;AAmCE,MAAA,mBAAmB,EAAEC,mBAnCvB;AAoCE,MAAA,gBAAgB,EAAEE,gBApCpB;AAqCE,MAAA,kBAAkB,EAAEE,kBArCtB;AAsCE,MAAA,iBAAiB,EAAEE,iBAtCrB;AAuCE,MAAA,iBAAiB,EAAEC,iBAvCrB;AAwCE,MAAA,UAAU,EAAEW,UAxCd;AAyCE,MAAA,cAAc,EAAEE,cAzClB;AA0CE,MAAA,eAAe,EAAElF,KAAK,CAACmL,eA1CzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO;AAAA,GAAT,CAlCN,CAxBF,CAVF,CADF;AAuHD,CA94BM","sourcesContent":["import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  View,\n  Animated,\n  Easing,\n  Text,\n  ColorValue,\n  ScrollView,\n} from 'react-native';\nimport {styles} from './styles';\nimport RenderBars from './RenderBars';\nimport RenderStackBars from './RenderStackBars';\nimport Rule from '../Components/lineSvg';\nimport {bezierCommand, svgPath} from '../utils';\nimport Svg, {Circle, Path, Rect, Text as CanvasText} from 'react-native-svg';\n\ntype PropTypes = {\n  width?: number;\n  height?: number;\n  noOfSections?: number;\n  maxValue?: number;\n  stepHeight?: number;\n  stepValue?: number;\n  spacing?: number;\n  data?: any;\n  stackData?: any;\n  side?: String;\n  rotateLabel?: Boolean;\n  isAnimated?: Boolean;\n  animationDuration?: number;\n  // animationEasing?: any;\n  opacity?: number;\n  isThreeD?: Boolean;\n  xAxisThickness?: number;\n  xAxisColor?: ColorValue;\n  yAxisThickness?: number;\n  yAxisColor?: ColorValue;\n  yAxisTextStyle?: any;\n  yAxisLabelWidth?: number;\n  hideYAxisText?: Boolean;\n  initialSpacing?: number;\n  barWidth?: number;\n  sideWidth?: number;\n  showLine?: Boolean;\n  lineConfig?: lineConfigType;\n\n  cappedBars?: Boolean;\n  capThickness?: number;\n  capColor?: ColorValue;\n  capRadius?: number;\n\n  hideAxesAndRules?: Boolean;\n  hideRules?: Boolean;\n  rulesColor?: ColorValue;\n  rulesThickness?: number;\n  rulesType?: String;\n  dashWidth?: number;\n  dashGap?: number;\n  showReferenceLine1?: Boolean;\n  referenceLine1Config?: referenceConfigType;\n  referenceLine1Position?: number;\n  showReferenceLine2?: Boolean;\n  referenceLine2Config?: referenceConfigType;\n  referenceLine2Position?: number;\n  showReferenceLine3?: Boolean;\n  referenceLine3Config?: referenceConfigType;\n  referenceLine3Position?: number;\n  showVerticalLines?: Boolean;\n  verticalLinesThickness?: number;\n  verticalLinesColor?: ColorValue;\n  verticalLinesZIndex?: number;\n\n  showYAxisIndices?: Boolean;\n  showXAxisIndices?: Boolean;\n  yAxisIndicesHeight?: number;\n  xAxisIndicesHeight?: number;\n  yAxisIndicesWidth?: number;\n  xAxisIndicesWidth?: number;\n  xAxisIndicesColor?: ColorValue;\n  yAxisIndicesColor?: ColorValue;\n\n  showFractionalValues?: Boolean;\n  roundToDigits?: number;\n  backgroundColor?: ColorValue;\n\n  disableScroll?: Boolean;\n  showScrollIndicator?: Boolean;\n  roundedTop?: Boolean;\n  roundedBottom?: Boolean;\n  disablePress?: boolean;\n\n  frontColor?: ColorValue;\n  sideColor?: ColorValue;\n  topColor?: ColorValue;\n  gradientColor?: ColorValue;\n  showGradient?: Boolean;\n  activeOpacity?: number;\n\n  horizontal?: Boolean;\n  yAxisAtTop?: Boolean;\n\n  intactTopLabel?: Boolean;\n\n  horizSections?: Array<sectionType>;\n  barBorderRadius?: number;\n  hideOrigin?: Boolean;\n  labelWidth?: number;\n  yAxisLabelTexts?: Array<string>;\n};\ntype lineConfigType = {\n  curved?: Boolean;\n  isAnimated?: Boolean;\n  delay?: number;\n  thickness?: number;\n  color?: ColorValue | String | any;\n  hideDataPoints?: Boolean;\n  dataPointsShape?: String;\n  dataPointsWidth?: number;\n  dataPointsHeight?: number;\n  dataPointsColor?: ColorValue | String | any;\n  dataPointsRadius?: number;\n  textColor?: ColorValue | String | any;\n  textFontSize?: number;\n  textShiftX?: number;\n  textShiftY?: number;\n  shiftY?: number;\n};\ntype referenceConfigType = {\n  thickness: number;\n  width: number;\n  color: ColorValue | String | any;\n  type: String;\n  dashWidth: number;\n  dashGap: number;\n};\ntype sectionType = {\n  value: string;\n};\ntype itemType = {\n  value?: number;\n  onPress?: any;\n  frontColor?: ColorValue;\n  sideColor?: ColorValue;\n  topColor?: ColorValue;\n  showGradient?: Boolean;\n  gradientColor?: any;\n  label?: String;\n  barWidth?: number;\n  sideWidth?: number;\n  labelTextStyle?: any;\n  topLabelComponent?: Function;\n  topLabelContainerStyle?: any;\n  disablePress?: any;\n  labelComponent?: View;\n  spacing?: number;\n};\n\nexport const BarChart = (props: PropTypes) => {\n  const [points, setPoints] = useState('');\n  const showLine = props.showLine || false;\n  const defaultLineConfig = {\n    curved: false,\n    isAnimated: false,\n    thickness: 1,\n    color: 'black',\n    hideDataPoints: false,\n    dataPointsShape: 'circular',\n    dataPointsWidth: 2,\n    dataPointsHeight: 2,\n    dataPointsColor: 'black',\n    dataPointsRadius: 3,\n    textColor: 'gray',\n    textFontSize: 10,\n    textShiftX: 0,\n    textShiftY: 0,\n    shiftY: 0,\n    delay: 0,\n  };\n  const lineConfig = props.lineConfig\n    ? {\n        curved: props.lineConfig.curved || defaultLineConfig.curved,\n        isAnimated: props.lineConfig.isAnimated || defaultLineConfig.isAnimated,\n        thickness: props.lineConfig.thickness || defaultLineConfig.thickness,\n        color: props.lineConfig.color || defaultLineConfig.color,\n        hideDataPoints:\n          props.lineConfig.hideDataPoints || defaultLineConfig.hideDataPoints,\n        dataPointsShape:\n          props.lineConfig.dataPointsShape || defaultLineConfig.dataPointsShape,\n        dataPointsHeight:\n          props.lineConfig.dataPointsHeight ||\n          defaultLineConfig.dataPointsHeight,\n        dataPointsWidth:\n          props.lineConfig.dataPointsWidth || defaultLineConfig.dataPointsWidth,\n        dataPointsColor:\n          props.lineConfig.dataPointsColor || defaultLineConfig.dataPointsColor,\n        dataPointsRadius:\n          props.lineConfig.dataPointsRadius ||\n          defaultLineConfig.dataPointsRadius,\n        textColor: props.lineConfig.textColor || defaultLineConfig.textColor,\n        textFontSize:\n          props.lineConfig.textFontSize || defaultLineConfig.textFontSize,\n        textShiftX: props.lineConfig.textShiftX || defaultLineConfig.textShiftX,\n        textShiftY: props.lineConfig.textShiftY || defaultLineConfig.textShiftY,\n        shiftY: props.lineConfig.shiftY || defaultLineConfig.shiftY,\n        delay: props.lineConfig.delay || defaultLineConfig.delay,\n      }\n    : defaultLineConfig;\n  const containerHeight = props.height || 200;\n  const noOfSections = props.noOfSections || 10;\n  const horizSections = [{value: '0'}];\n  const stepHeight = props.stepHeight || containerHeight / noOfSections;\n  const data = useMemo(() => props.data || [], [props.data]);\n  const spacing = props.spacing === 0 ? 0 : props.spacing ? props.spacing : 20;\n  const labelWidth = props.labelWidth || 0;\n\n  let totalWidth = spacing;\n  let maxItem = 0;\n  if (props.stackData) {\n    props.stackData.forEach(stackItem => {\n      // console.log('stackItem', stackItem);\n      let stackSum = stackItem.stacks.reduce(\n        (acc, stack) => acc + stack.value,\n        0,\n      );\n      // console.log('stackSum--->', stackSum);\n      if (stackSum > maxItem) {\n        maxItem = stackSum;\n      }\n      totalWidth +=\n        (stackItem.stacks[0].barWidth || props.barWidth || 30) + spacing;\n      // console.log('totalWidth for stack===', totalWidth);\n    });\n  } else {\n    data.forEach((item: itemType) => {\n      if (item.value > maxItem) {\n        maxItem = item.value;\n      }\n      totalWidth +=\n        (item.barWidth || props.barWidth || 30) +\n        (item.spacing === 0 ? 0 : item.spacing || spacing);\n      // console.log('totalWidth for bar===', totalWidth);\n    });\n  }\n  if (props.showFractionalValues || props.roundToDigits) {\n    maxItem *= 10 * (props.roundToDigits || 1);\n    maxItem = maxItem + (10 - (maxItem % 10));\n    maxItem /= 10 * (props.roundToDigits || 1);\n    maxItem = parseFloat(maxItem.toFixed(props.roundToDigits || 1));\n  } else {\n    maxItem = maxItem + (10 - (maxItem % 10));\n  }\n\n  const maxValue = props.maxValue || maxItem;\n\n  const stepValue = props.stepValue || maxValue / noOfSections;\n  const disableScroll = props.disableScroll || false;\n  const showScrollIndicator = props.showScrollIndicator || false;\n  const initialSpacing =\n    props.initialSpacing === 0 ? 0 : props.initialSpacing || 40;\n  // const oldData = props.oldData || [];\n  const side = props.side || '';\n  const rotateLabel = props.rotateLabel || false;\n  const isAnimated = props.isAnimated || false;\n  const animationDuration = props.animationDuration || 800;\n  // const animationEasing = props.animationEasing || Easing.ease;\n  const opacity = props.opacity || 1;\n  const isThreeD = props.isThreeD || false;\n\n  const showVerticalLines = props.showVerticalLines || false;\n  const rulesThickness =\n    props.rulesThickness === 0 ? 0 : props.rulesThickness || 1;\n  const rulesColor = props.rulesColor || 'lightgray';\n  const verticalLinesThickness =\n    props.verticalLinesThickness === 0 ? 0 : props.verticalLinesThickness || 1;\n  const verticalLinesColor = props.verticalLinesColor || 'lightgray';\n  const verticalLinesZIndex = props.verticalLinesZIndex || -1;\n\n  const showYAxisIndices = props.showYAxisIndices || false;\n  const showXAxisIndices = props.showXAxisIndices || false;\n  const yAxisIndicesHeight = props.yAxisIndicesHeight || 2;\n  const xAxisIndicesHeight = props.xAxisIndicesHeight || 2;\n  const yAxisIndicesWidth = props.yAxisIndicesWidth || 4;\n  const xAxisIndicesWidth = props.xAxisIndicesWidth || 4;\n  const xAxisIndicesColor = props.xAxisIndicesColor || 'black';\n  const yAxisIndicesColor = props.yAxisIndicesColor || 'black';\n\n  const xAxisThickness =\n    props.xAxisThickness === 0\n      ? props.xAxisThickness\n      : props.xAxisThickness || 1;\n  const xAxisColor = props.xAxisColor || 'black';\n\n  const hideRules = props.hideRules || false;\n\n  const yAxisThickness =\n    props.yAxisThickness === 0\n      ? props.yAxisThickness\n      : props.yAxisThickness || 1;\n  const yAxisColor = props.yAxisColor || 'black';\n  const yAxisTextStyle = props.yAxisTextStyle;\n  const showFractionalValues = props.showFractionalValues || false;\n  const yAxisLabelWidth = props.yAxisLabelWidth || 35;\n  const hideYAxisText = props.hideYAxisText || false;\n\n  const backgroundColor = props.backgroundColor || 'transparent';\n  const horizontal = props.horizontal || false;\n  const yAxisAtTop = props.yAxisAtTop || false;\n  const intactTopLabel = props.intactTopLabel || false;\n  const hideOrigin = props.hideOrigin || false;\n\n  const rulesType = props.rulesType || 'line';\n  const dashWidth = props.dashWidth === 0 ? 0 : props.dashWidth || 4;\n  const dashGap = props.dashGap === 0 ? 0 : props.dashGap || 8;\n\n  const heightValue = useMemo(() => new Animated.Value(0), []);\n  const opacValue = useMemo(() => new Animated.Value(0), []);\n  const widthValue = useMemo(() => new Animated.Value(0), []);\n\n  const labelsAppear = useCallback(() => {\n    opacValue.setValue(0);\n    Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.ease,\n      useNativeDriver: false,\n    }).start();\n  }, [opacValue]);\n  // const moveBar = useCallback(() => {\n  //   heightValue.setValue(0);\n  //   Animated.timing(heightValue, {\n  //     toValue: 1,\n  //     duration: animationDuration,\n  //     easing: animationEasing,\n  //     useNativeDriver: false,\n  //   }).start();\n  // }, [animationDuration, animationEasing, heightValue]);\n\n  const decreaseWidth = useCallback(() => {\n    widthValue.setValue(0);\n    Animated.timing(widthValue, {\n      toValue: 1,\n      duration: animationDuration,\n      easing: Easing.linear,\n      useNativeDriver: false,\n    }).start();\n  }, [animationDuration, widthValue]);\n  // console.log('olddata', oldData);\n\n  useEffect(() => {\n    if (showLine) {\n      let pp = '';\n      if (!lineConfig.curved) {\n        for (let i = 0; i < data.length; i++) {\n          const currentBarWidth =\n            (data && data[i] && data[i].barWidth) || props.barWidth || 30;\n          pp +=\n            'L' +\n            (yAxisLabelWidth +\n              6 -\n              (initialSpacing - currentBarWidth / 2) -\n              lineConfig.dataPointsWidth / 2 +\n              (currentBarWidth + spacing) * i) +\n            ' ' +\n            (containerHeight -\n              lineConfig.shiftY +\n              10 -\n              (data[i].value * containerHeight) / maxValue) +\n            ' ';\n        }\n        setPoints(pp.replace('L', 'M'));\n      } else {\n        let p1Array = [];\n        for (let i = 0; i < data.length; i++) {\n          const currentBarWidth =\n            (data && data[i] && data[i].barWidth) || props.barWidth || 30;\n          p1Array.push([\n            yAxisLabelWidth +\n              6 -\n              (initialSpacing - currentBarWidth / 2) -\n              lineConfig.dataPointsWidth / 2 +\n              (currentBarWidth + spacing) * i,\n            containerHeight -\n              lineConfig.shiftY +\n              10 -\n              (data[i].value * containerHeight) / maxValue,\n          ]);\n          let xx = svgPath(p1Array, bezierCommand);\n          setPoints(xx);\n        }\n      }\n      if (lineConfig.isAnimated) {\n        setTimeout(() => decreaseWidth(), lineConfig.delay || 0);\n      }\n    }\n    // moveBar();\n    setTimeout(() => labelsAppear(), animationDuration);\n  }, [\n    animationDuration,\n    containerHeight,\n    data,\n    decreaseWidth,\n    initialSpacing,\n    labelsAppear,\n    lineConfig.curved,\n    lineConfig.dataPointsWidth,\n    lineConfig.shiftY,\n    lineConfig.isAnimated,\n    lineConfig.delay,\n    maxValue,\n    // moveBar,\n    props.barWidth,\n    showLine,\n    spacing,\n    yAxisLabelWidth,\n  ]);\n\n  const defaultReferenceConfig = {\n    thickness: rulesThickness,\n    width: horizontal\n      ? props.width || totalWidth\n      : (props.width || totalWidth) + 11,\n    color: 'black',\n    type: rulesType,\n    dashWidth: dashWidth,\n    dashGap: dashGap,\n  };\n\n  const showReferenceLine1 = props.showReferenceLine1 || false;\n  const referenceLine1Position =\n    props.referenceLine1Position === 0\n      ? 0\n      : props.referenceLine1Position || containerHeight / 2;\n  const referenceLine1Config = props.referenceLine1Config\n    ? {\n        thickness: props.referenceLine1Config.thickness || rulesThickness,\n        width: horizontal\n          ? props.referenceLine1Config.width || props.width || totalWidth\n          : (props.referenceLine1Config.width || props.width || totalWidth) +\n            11,\n        color: props.referenceLine1Config.color || 'black',\n        type: props.referenceLine1Config.type || rulesType,\n        dashWidth: props.referenceLine1Config.dashWidth || dashWidth,\n        dashGap: props.referenceLine1Config.dashGap || dashGap,\n      }\n    : defaultReferenceConfig;\n\n  const showReferenceLine2 = props.showReferenceLine2 || false;\n  const referenceLine2Position =\n    props.referenceLine2Position === 0\n      ? 0\n      : props.referenceLine2Position || (3 * containerHeight) / 2;\n  const referenceLine2Config = props.referenceLine2Config\n    ? {\n        thickness: props.referenceLine2Config.thickness || rulesThickness,\n        width: horizontal\n          ? props.referenceLine2Config.width || props.width || totalWidth\n          : (props.referenceLine2Config.width || props.width || totalWidth) +\n            11,\n        color: props.referenceLine2Config.color || 'black',\n        type: props.referenceLine2Config.type || rulesType,\n        dashWidth: props.referenceLine2Config.dashWidth || dashWidth,\n        dashGap: props.referenceLine2Config.dashGap || dashGap,\n      }\n    : defaultReferenceConfig;\n\n  const showReferenceLine3 = props.showReferenceLine3 || false;\n  const referenceLine3Position =\n    props.referenceLine3Position === 0\n      ? 0\n      : props.referenceLine3Position || containerHeight / 3;\n  const referenceLine3Config = props.referenceLine3Config\n    ? {\n        thickness: props.referenceLine3Config.thickness || rulesThickness,\n        width: horizontal\n          ? props.referenceLine3Config.width || props.width || totalWidth\n          : (props.referenceLine3Config.width || props.width || totalWidth) +\n            11,\n        color: props.referenceLine3Config.color || 'black',\n        type: props.referenceLine3Config.type || rulesType,\n        dashWidth: props.referenceLine3Config.dashWidth || dashWidth,\n        dashGap: props.referenceLine3Config.dashGap || dashGap,\n      }\n    : defaultReferenceConfig;\n\n  horizSections.pop();\n  for (let i = 0; i <= noOfSections; i++) {\n    let value = maxValue - stepValue * i;\n    if (props.showFractionalValues || props.roundToDigits) {\n      value = parseFloat(value.toFixed(props.roundToDigits || 1));\n    }\n    horizSections.push({\n      value: props.yAxisLabelTexts\n        ? props.yAxisLabelTexts[noOfSections - i] ?? value.toString()\n        : value.toString(),\n    });\n  }\n\n  const animatedHeight = heightValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%'],\n  });\n  const appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n  });\n\n  const animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth],\n  });\n\n  const renderHorizSections = () => {\n    return (\n      <>\n        {horizSections.map((sectionItems, index) => {\n          return (\n            <View\n              key={index}\n              style={[\n                styles.horizBar,\n                {\n                  width: horizontal\n                    ? props.width || totalWidth\n                    : props.width || totalWidth + 11,\n                },\n              ]}>\n              <View\n                style={[\n                  styles.leftLabel,\n                  {\n                    borderRightWidth: yAxisThickness,\n                    borderColor: yAxisColor,\n                  },\n                  horizontal &&\n                    !yAxisAtTop && {\n                      transform: [{translateX: totalWidth + yAxisThickness}],\n                    },\n                  {\n                    height:\n                      index === noOfSections ? stepHeight / 2 : stepHeight,\n                    width: yAxisLabelWidth,\n                  },\n                ]}>\n                {!hideYAxisText ? (\n                  <Text\n                    numberOfLines={1}\n                    ellipsizeMode={'clip'}\n                    style={[\n                      yAxisTextStyle,\n                      index === noOfSections && {marginBottom: stepHeight / -2},\n                      horizontal && {\n                        transform: [\n                          {rotate: '270deg'},\n                          {translateY: yAxisAtTop ? 0 : 50},\n                        ],\n                      },\n                    ]}>\n                    {showFractionalValues\n                      ? sectionItems.value\n                        ? sectionItems.value\n                        : hideOrigin\n                        ? ''\n                        : '0'\n                      : sectionItems.value\n                      ? sectionItems.value.toString().split('.')[0]\n                      : hideOrigin\n                      ? ''\n                      : '0'}\n                  </Text>\n                ) : null}\n              </View>\n              <View\n                style={[\n                  index === noOfSections\n                    ? styles.lastLeftPart\n                    : styles.leftPart,\n                  {backgroundColor: backgroundColor},\n                ]}>\n                {index === noOfSections ? (\n                  <View\n                    style={[\n                      styles.lastLine,\n                      {height: xAxisThickness, backgroundColor: xAxisColor},\n                    ]}\n                  />\n                ) : hideRules ? null : (\n                  <Rule\n                    config={{\n                      thickness: rulesThickness,\n                      color: rulesColor,\n                      width: horizontal\n                        ? props.width || totalWidth\n                        : (props.width || totalWidth) + 11,\n                      dashWidth: dashWidth,\n                      dashGap: dashGap,\n                      type: rulesType,\n                    }}\n                  />\n                )}\n                {index === 0 && showReferenceLine1 ? (\n                  <View\n                    style={{\n                      position: 'absolute',\n                      bottom:\n                        (referenceLine1Position * containerHeight) / maxValue +\n                        stepHeight / 2 -\n                        referenceLine1Config.thickness / 2,\n                      transform: [{translateY: containerHeight}],\n                    }}>\n                    <Rule config={referenceLine1Config} />\n                  </View>\n                ) : null}\n                {index === 0 && showReferenceLine2 ? (\n                  <View\n                    style={{\n                      position: 'absolute',\n                      bottom:\n                        (referenceLine2Position * containerHeight) / maxValue +\n                        stepHeight / 2 -\n                        referenceLine2Config.thickness / 2,\n                      transform: [{translateY: containerHeight}],\n                    }}>\n                    <Rule config={referenceLine2Config} />\n                  </View>\n                ) : null}\n                {index === 0 && showReferenceLine3 ? (\n                  <View\n                    style={{\n                      position: 'absolute',\n                      bottom:\n                        (referenceLine3Position * containerHeight) / maxValue +\n                        stepHeight / 2 -\n                        referenceLine3Config.thickness / 2,\n                      transform: [{translateY: containerHeight}],\n                    }}>\n                    <Rule config={referenceLine3Config} />\n                  </View>\n                ) : null}\n                {showYAxisIndices && index !== noOfSections ? (\n                  <View\n                    style={[\n                      {\n                        position: 'absolute',\n                        height: yAxisIndicesHeight,\n                        width: yAxisIndicesWidth,\n                        left: yAxisIndicesWidth / -2,\n                        backgroundColor: yAxisIndicesColor,\n                      },\n                      horizontal &&\n                        !yAxisAtTop && {\n                          transform: [\n                            {translateX: totalWidth + yAxisThickness},\n                          ],\n                        },\n                    ]}\n                  />\n                ) : null}\n              </View>\n            </View>\n          );\n        })}\n      </>\n    );\n  };\n\n  const renderSpecificVerticalLines = (dataForRender: any) => {\n    return dataForRender.map((item: any, index: number) => {\n      if (item.showVerticalLine) {\n        const currentBarWidth = item.barWidth || props.barWidth || 30;\n        return (\n          <Rect\n            x={\n              yAxisLabelWidth +\n              6 -\n              (item.verticalLineThickness || 1) / 2 -\n              1 -\n              (initialSpacing - currentBarWidth / 2) +\n              (currentBarWidth + spacing) * index\n            }\n            y={\n              containerHeight -\n              lineConfig.shiftY -\n              (item.value * containerHeight) / maxValue +\n              9\n            }\n            width={item.verticalLineThickness || 1}\n            height={\n              (item.value * containerHeight) / maxValue + lineConfig.shiftY\n            }\n            fill={item.verticalLineColor || 'lightgray'}\n          />\n        );\n      }\n      return null;\n    });\n  };\n\n  const renderDataPoints = () => {\n    return data.map((item: any, index: number) => {\n      // console.log('comes in');\n      const currentBarWidth = item.barWidth || props.barWidth || 30;\n      if (lineConfig.dataPointsShape === 'rectangular') {\n        return (\n          <Fragment key={index}>\n            <Rect\n              x={\n                yAxisLabelWidth +\n                6 -\n                (initialSpacing - currentBarWidth / 2) -\n                lineConfig.dataPointsWidth +\n                (currentBarWidth + spacing) * index\n              }\n              y={\n                containerHeight -\n                lineConfig.shiftY -\n                lineConfig.dataPointsHeight / 2 +\n                10 -\n                (item.value * containerHeight) / maxValue\n              }\n              width={lineConfig.dataPointsWidth}\n              height={lineConfig.dataPointsHeight}\n              fill={lineConfig.dataPointsColor}\n            />\n            {item.dataPointText && (\n              <CanvasText\n                fill={item.textColor || lineConfig.textColor}\n                fontSize={item.textFontSize || lineConfig.textFontSize}\n                x={\n                  yAxisLabelWidth +\n                  6 -\n                  (initialSpacing - currentBarWidth / 2) -\n                  lineConfig.dataPointsWidth +\n                  (currentBarWidth + spacing) * index +\n                  (item.textShiftX || lineConfig.textShiftX || 0)\n                }\n                y={\n                  containerHeight -\n                  lineConfig.shiftY -\n                  lineConfig.dataPointsHeight / 2 +\n                  10 -\n                  (item.value * containerHeight) / maxValue +\n                  (item.textShiftY || lineConfig.textShiftY || 0)\n                }>\n                {item.dataPointText}\n              </CanvasText>\n            )}\n          </Fragment>\n        );\n      }\n      return (\n        <Fragment key={index}>\n          <Circle\n            cx={\n              yAxisLabelWidth +\n              6 -\n              (initialSpacing - currentBarWidth / 2) -\n              lineConfig.dataPointsWidth / 2 +\n              (currentBarWidth + spacing) * index\n            }\n            cy={\n              containerHeight -\n              lineConfig.shiftY +\n              10 -\n              (item.value * containerHeight) / maxValue\n            }\n            r={lineConfig.dataPointsRadius}\n            fill={lineConfig.dataPointsColor}\n          />\n          {item.dataPointText && (\n            <CanvasText\n              fill={item.textColor || lineConfig.textColor}\n              fontSize={item.textFontSize || lineConfig.textFontSize}\n              x={\n                yAxisLabelWidth +\n                6 -\n                (initialSpacing - currentBarWidth / 2) -\n                lineConfig.dataPointsWidth +\n                (currentBarWidth + spacing) * index +\n                (item.textShiftX || lineConfig.textShiftX || 0)\n              }\n              y={\n                containerHeight -\n                lineConfig.shiftY -\n                lineConfig.dataPointsHeight / 2 +\n                10 -\n                (item.value * containerHeight) / maxValue +\n                (item.textShiftY || lineConfig.textShiftY || 0)\n              }>\n              {item.dataPointText}\n            </CanvasText>\n          )}\n        </Fragment>\n      );\n    });\n  };\n  const renderSpecificDataPoints = dataForRender => {\n    return dataForRender.map((item: any, index: number) => {\n      const currentBarWidth = item.barWidth || props.barWidth || 30;\n      if (item.showDataPoint) {\n        if (item.dataPointShape === 'rectangular') {\n          return (\n            <Fragment key={index}>\n              <Rect\n                x={\n                  initialSpacing -\n                  (item.dataPointWidth || 2) / 2 -\n                  1 +\n                  (currentBarWidth + spacing) * index\n                }\n                y={\n                  containerHeight -\n                  lineConfig.shiftY -\n                  (item.dataPointHeight || 2) / 2 +\n                  10 -\n                  (item.value * containerHeight) / maxValue\n                }\n                width={item.dataPointWidth || 2}\n                height={item.dataPointHeight || 2}\n                fill={item.dataPointColor || 'black'}\n              />\n              {item.dataPointText && (\n                <CanvasText\n                  fill={item.textColor || 'black'}\n                  fontSize={item.textFontSize || 10}\n                  x={\n                    initialSpacing -\n                    (item.dataPointWidth || 2) +\n                    spacing * index +\n                    (item.textShiftX || lineConfig.textShiftX || 0)\n                  }\n                  y={\n                    containerHeight -\n                    lineConfig.shiftY -\n                    (item.dataPointHeight || 2) / 2 +\n                    10 -\n                    (item.value * containerHeight) / maxValue +\n                    (item.textShiftY || lineConfig.textShiftY || 0)\n                  }>\n                  {item.dataPointText}\n                </CanvasText>\n              )}\n            </Fragment>\n          );\n        } else {\n          return (\n            <Fragment key={index}>\n              <Circle\n                cx={\n                  initialSpacing -\n                  (item.dataPointWidth || 2) / 2 +\n                  spacing * index\n                }\n                cy={\n                  containerHeight -\n                  lineConfig.shiftY +\n                  10 -\n                  (item.value * containerHeight) / maxValue\n                }\n                r={item.dataPointRadius || 3}\n                fill={item.dataPointColor || 'black'}\n              />\n              {item.dataPointText && (\n                <CanvasText\n                  fill={item.textColor || 'black'}\n                  fontSize={item.textFontSize || 10}\n                  x={\n                    initialSpacing -\n                    (item.dataPointWidth || 2) +\n                    spacing * index +\n                    (item.textShiftX || lineConfig.textShiftX || 0)\n                  }\n                  y={\n                    containerHeight -\n                    lineConfig.shiftY -\n                    (item.dataPointHeight || 2) / 2 +\n                    10 -\n                    (item.value * containerHeight) / maxValue +\n                    (item.textShiftY || lineConfig.textShiftY || 0)\n                  }>\n                  {item.dataPointText}\n                </CanvasText>\n              )}\n            </Fragment>\n          );\n        }\n      }\n      return null;\n    });\n  };\n\n  const renderAnimatedLine = () => {\n    // console.log('animatedWidth is-------->', animatedWidth);\n    return (\n      <Animated.View\n        style={{\n          position: 'absolute',\n          height: containerHeight + 10,\n          bottom: 60, //stepHeight * -0.5 + xAxisThickness,\n          width: animatedWidth,\n          zIndex: -1,\n          // backgroundColor: 'wheat',\n        }}>\n        <Svg>\n          <Path\n            d={points}\n            fill=\"none\"\n            stroke={lineConfig.color}\n            strokeWidth={lineConfig.thickness}\n          />\n\n          {renderSpecificVerticalLines(data)}\n\n          {!lineConfig.hideDataPoints\n            ? renderDataPoints()\n            : renderSpecificDataPoints(data)}\n        </Svg>\n      </Animated.View>\n    );\n  };\n\n  const renderLine = () => {\n    return (\n      <View\n        style={{\n          position: 'absolute',\n          height: containerHeight + 10,\n          bottom: 60, //stepHeight * -0.5 + xAxisThickness,\n          width: totalWidth,\n          zIndex: -1,\n          // backgroundColor: 'rgba(200,150,150,0.1)'\n        }}>\n        <Svg>\n          <Path\n            d={points}\n            fill=\"none\"\n            stroke={lineConfig.color}\n            strokeWidth={lineConfig.thickness}\n          />\n          {renderSpecificVerticalLines(data)}\n\n          {!lineConfig.hideDataPoints\n            ? renderDataPoints()\n            : renderSpecificDataPoints(data)}\n        </Svg>\n      </View>\n    );\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          height: containerHeight,\n        },\n        props.width && {width: props.width},\n        horizontal && {transform: [{rotate: '90deg'}, {translateY: -15}]},\n      ]}>\n      {props.hideAxesAndRules !== true && renderHorizSections()}\n      <ScrollView\n        style={[\n          {\n            marginLeft: 36,\n            position: 'absolute',\n            bottom: stepHeight * -0.5 - 60 + xAxisThickness,\n          },\n          props.width && {width: props.width - 11},\n          horizontal && {width: totalWidth},\n        ]}\n        scrollEnabled={!disableScroll}\n        contentContainerStyle={[\n          {\n            // backgroundColor: 'yellow',\n            height: containerHeight + 130,\n            paddingLeft: initialSpacing,\n            alignItems: 'flex-end',\n          },\n          !props.width && {width: totalWidth},\n        ]}\n        showsHorizontalScrollIndicator={showScrollIndicator}\n        horizontal\n        // data={props.stackData || data}\n        keyExtractor={(item, index) => index.toString()}>\n        <Fragment>\n          {showLine\n            ? lineConfig.isAnimated\n              ? renderAnimatedLine()\n              : renderLine()\n            : null}\n          {props.stackData\n            ? props.stackData.map((item, index) => {\n                return (\n                  <RenderStackBars\n                    key={index}\n                    item={item}\n                    index={index}\n                    containerHeight={containerHeight}\n                    maxValue={maxValue}\n                    spacing={spacing}\n                    barWidth={props.barWidth}\n                    opacity={opacity}\n                    disablePress={props.disablePress}\n                    rotateLabel={rotateLabel}\n                    showVerticalLines={showVerticalLines}\n                    verticalLinesThickness={verticalLinesThickness}\n                    verticalLinesColor={verticalLinesColor}\n                    verticalLinesZIndex={verticalLinesZIndex}\n                    showXAxisIndices={showXAxisIndices}\n                    xAxisIndicesHeight={xAxisIndicesHeight}\n                    xAxisIndicesWidth={xAxisIndicesWidth}\n                    xAxisIndicesColor={xAxisIndicesColor}\n                    horizontal={horizontal}\n                    intactTopLabel={intactTopLabel}\n                    barBorderRadius={props.barBorderRadius}\n                  />\n                );\n              })\n            : data.map((item, index) => (\n                <RenderBars\n                  key={index}\n                  item={item}\n                  index={index}\n                  containerHeight={containerHeight}\n                  maxValue={maxValue}\n                  spacing={item.spacing === 0 ? 0 : item.spacing || spacing}\n                  side={side}\n                  data={data}\n                  barWidth={props.barWidth}\n                  sideWidth={props.sideWidth}\n                  labelWidth={labelWidth}\n                  opacity={opacity}\n                  isThreeD={isThreeD}\n                  isAnimated={isAnimated}\n                  animationDuration={animationDuration}\n                  rotateLabel={rotateLabel}\n                  animatedHeight={animatedHeight}\n                  appearingOpacity={appearingOpacity}\n                  roundedTop={props.roundedTop}\n                  roundedBottom={props.roundedBottom}\n                  disablePress={props.disablePress}\n                  frontColor={props.frontColor}\n                  sideColor={props.sideColor}\n                  topColor={props.topColor}\n                  showGradient={props.showGradient}\n                  gradientColor={props.gradientColor}\n                  activeOpacity={props.activeOpacity}\n                  cappedBars={props.cappedBars}\n                  capThickness={props.capThickness}\n                  capColor={props.capColor}\n                  capRadius={props.capRadius}\n                  showVerticalLines={showVerticalLines}\n                  verticalLinesThickness={verticalLinesThickness}\n                  verticalLinesColor={verticalLinesColor}\n                  verticalLinesZIndex={verticalLinesZIndex}\n                  showXAxisIndices={showXAxisIndices}\n                  xAxisIndicesHeight={xAxisIndicesHeight}\n                  xAxisIndicesWidth={xAxisIndicesWidth}\n                  xAxisIndicesColor={xAxisIndicesColor}\n                  horizontal={horizontal}\n                  intactTopLabel={intactTopLabel}\n                  barBorderRadius={props.barBorderRadius}\n                />\n              ))}\n        </Fragment>\n      </ScrollView>\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"script"}